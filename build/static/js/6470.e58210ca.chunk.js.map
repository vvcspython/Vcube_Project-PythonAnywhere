{"version":3,"file":"static/js/6470.e58210ca.chunk.js","mappings":"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","sources":["components/student-info/CodeEditor.js","components/student-info/CodingQuestionPage.js","components/student-info/AssessmentCodeEditor.js"],"sourcesContent":["import React, { startTransition, useContext, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Card, CircularProgress, Paper, SpeedDial, SpeedDialAction, SpeedDialIcon, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tabs, TextField, Typography } from '@mui/material';\nimport { Editor } from '@monaco-editor/react';\nimport { ExecuteCodeContext } from '../api/ExecuteCode';\nimport styled from 'styled-components';\nimport { CancelRounded, CheckCircleRounded, Close, ExpandLessRounded, ExpandMoreRounded, Looks3Rounded, Looks4Rounded, Looks5Rounded, Looks6Rounded, LooksOneRounded, LooksTwoRounded } from '@mui/icons-material';\nimport { StudentsContext } from '../api/students';\nimport { DateTime } from '../date-time';\nimport DOMPurify from 'dompurify';\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#f3f4f6',\n    },\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n}));\n\nconst CodeEditor = ({ setResults, test_Cases, stdId, handleShowSnackbar, setResultPopUp, hideQuestion, isSql, full_Screen, \n                        setTabValue, questionId, name, course, batchName, isUser, updateScore, setTime_Up, minutes, setMinutes, }) => {\n    const { runCode, executeCode } = useContext(ExecuteCodeContext);\n    const { getStudentAttendanceById, postStudentAttendance } = useContext(StudentsContext);\n    const [disp, setDisp] = useState(false);\n    const code = useRef({\n        javascript: '// Write your JavaScript code here',\n        python: '# Write your Python code here',\n        java: `// Write your Java code here \\npublic class Main {\n    public static void main(String[] args) {\n\n    }\\n}`,\n        sql: '-- Write SQL queries here--;',\n        cpp: '// Write your C++ code here',\n        c: '// Write your C code here'\n    });\n    const [language, setLanguage] = useState(isSql ? 'sql' : 'python');\n    const weekly_Assignment = sessionStorage.getItem('Weekly Assignment');\n    const [size, setSize] = useState(18); \n    const [input, setInput] = useState('');\n    const output = useRef('');\n    const attData = useRef(null);\n    const [queries, setQueries] = useState('');\n    const [sqlResults, setSqlResults] = useState('');\n    const [keys, setKeys] = useState([]);\n    const [tab_Value, set_Tab_Value] = useState(0);\n    const [hours, setHours] = useState(weekly_Assignment === 'True' || weekly_Assignment === 'Past' ? 1 : 0);\n    const [seconds, setSeconds] = useState(0);\n    const [loading1, setLoading1] = useState(false);\n    const [loading2, setLoading2] = useState(false);\n    const [hideConsole, setHideConsole] = useState(false);\n    const cardRef = useRef(null);\n    const [submitted, setSubmitted] = useState(false);\n    const [timer, setTimer] = useState(10);\n\n    const fetchData = async () => {\n        const res = await getStudentAttendanceById(stdId);\n        if (res && res.message){\n            res.response.status !== 404 && handleShowSnackbar('error',res.message);\n        }else if(res){\n            const data = Array.isArray(res) && res.filter(data=>data.Attendance_Type.split('~')[0] === 'Assignment');\n            attData.current = data;\n        }\n    }\n        \n    useEffect(()=>{\n        fetchData();\n    },[])\n    \n    useEffect(() => {\n        language === 'sql' && startTransition(() => {\n            if (Array.isArray(sqlResults) && sqlResults.length > 0) {\n                const keysList = sqlResults.map((subArray) => {\n                    if (Array.isArray(subArray) && subArray.length > 0) {\n                        return Object.keys(subArray[0]);\n                    }\n                    return [];\n                });\n                setKeys(keysList);\n            }\n        });\n    }, [sqlResults]);\n\n    useEffect(() => {\n        startTransition(()=>{\n            if (cardRef.current) {\n                cardRef.current.scrollTop = cardRef.current.scrollHeight;\n            }\n        })\n    }, [queries]);\n\n    useEffect(() => {\n        let timerId;\n      \n        if (submitted) {\n          timerId = setTimeout(() => {\n            setTimer((prev) => prev - 1);\n          }, 1000);              \n        }\n    \n        if (timer === 0) {\n          setSubmitted(false);\n          setTimer(10);\n        }\n      \n        return () => clearTimeout(timerId);\n      }, [timer, submitted]);\n\n    const removeSQLComments = (sql) => {\n        let cleanedSql = sql.replace(/^\\s*--.*$/gm, '');\n        cleanedSql = cleanedSql.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        cleanedSql = cleanedSql.replace(/\\n\\s*\\n/g, '\\n').trim();\n        return cleanedSql;\n    }\n\n    const run_Code = async () => {\n        const data = {\n            id : stdId,\n            Code : language === 'sql' ? removeSQLComments(code.current[language]) : code.current[language],\n            Input : input,\n            Language : language,\n        }\n\n        const res = await runCode(data);\n        setLoading1(false);\n        if (language === 'sql'){\n            if (Array.isArray(res.data)) {\n                setQueries(prev => [...prev, ...res.data]);\n            } else {\n                setQueries(prev => [...prev, res.data]);\n            }\n            const getResult = res && res.data && res.data\n                .filter(data => data.result)\n                .map(data => data.result);\n                setSqlResults(getResult);\n        }else{\n            if (res && res.message){\n                output.current = `Error: ${res.response ? res.response.data.error : res.message}`;\n            }else if(res){\n                output.current = `${res.data.output}\\n\\nExecution complete. The code ran for ${res.data.execution_time}`;\n            }\n        }\n        set_Tab_Value(1);\n        setSubmitted(true);\n    };\n\n    const execute_Code = async () => {\n        const data = {\n            id : stdId,\n            Code : language === 'sql' ? [removeSQLComments(code.current[language])] : code.current[language],\n            TestCases: test_Cases,\n            Language : language\n        }\n        const res = await executeCode(data);\n        setLoading2(false);\n        if (language === 'sql'){\n            setResults.current = res.data;\n            if(res.data.all_tests_passed === true)SubmitAssignment();\n        }else{\n            if (res && res.message){\n                output.current = `Error: ${res.response ? res.response.data.error : res.message}`;\n                setResults.current = {'status' : 'Failed', 'message' : res.response ? res.response.data.error : res.message};\n            }else if(res){\n                console.log(res.data);\n                setResults.current = res.data;\n                const resul = res.data.results.filter((data)=>data.status === 'pass');\n                if(weekly_Assignment === 'True' || weekly_Assignment === 'Past')updateScore(questionId, (resul.length / test_Cases.length) * 100);\n                if(res.data.all_tests_passed === true && isUser === 'Student' && !(weekly_Assignment === 'True' || weekly_Assignment === 'Past')){\n                    SubmitAssignment();\n                }\n            }\n        }\n        setResultPopUp(true);\n        !weekly_Assignment === 'True' && setTabValue(1);\n        setSubmitted(true);\n    };\n\n    const SubmitAssignment = async () => {\n        if(isUser !== 'Student')return;\n        if(attData.current && attData.current.some(data=>data.Attendance_Type.split('~')[1] === `${questionId}`))return;\n        const data = {\n            StudentId : stdId,\n            Name : name,\n            Course : course,\n            BatchName : batchName,\n            Date : DateTime().split(' ')[0],\n            Attendance_Type : `${weekly_Assignment === 'True' ? 'Weekly Assignment' : 'Assignment'}~${questionId}~${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds }`\n        }\n        const res = await postStudentAttendance(data);\n        fetchData();\n        if(res && res.message){\n            handleShowSnackbar('error',res.message);\n        }\n    }\n\n    useEffect(() => {\n    let totalSeconds = hours * 3600 + minutes * 60 + seconds;\n    let interval;\n    \n    if (weekly_Assignment === 'True' || weekly_Assignment === 'Past') {\n        if(hours === 0 && minutes === 0 && seconds === 0)setTime_Up(true);\n        interval = setInterval(() => {\n        if (totalSeconds > 0) {\n            totalSeconds -= 1;\n            setHours(Math.floor(totalSeconds / 3600));\n            setMinutes(Math.floor((totalSeconds % 3600) / 60));\n            setSeconds(totalSeconds % 60);\n            sessionStorage.setItem('Assignment_Time',`${totalSeconds}`);\n        } else {\n            clearInterval(interval);\n        }\n        }, 1000);\n    } else {\n        interval = setInterval(() => {\n        totalSeconds += 1;\n        setHours(Math.floor(totalSeconds / 3600));\n        setMinutes(Math.floor((totalSeconds % 3600) / 60));\n        setSeconds(totalSeconds % 60);\n        }, 1000);\n    }\n    return () => clearInterval(interval);\n    }, [hours, minutes, seconds, weekly_Assignment, setTime_Up]);\n\n\n    useEffect(()=>{\n        isUser === 'Student' && document.addEventListener('keydown',(e)=>{\n            if (isUser === 'Student'){\n                if ((e.key === 'c' && (e.ctrlKey || e.metaKey)) && !e.shiftKey) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                if ((e.key === 'v' && (e.ctrlKey || e.metaKey)) && !e.shiftKey) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n        })\n    },[])\n\n    const sanitizedCode = () => {\n        return DOMPurify.sanitize(code.current[language]);\n    };\n\n    useEffect(() => {\n        const safeCode = sanitizedCode();\n    }, [disp]);\n\n    const formatTime = (time) => String(time).padStart(2, '0');\n\n    const actions = [\n        !isSql && { icon: <img src='/images/python-logo.png' alt='' width='20px' />, name: 'Python', onClick: () => setLanguage('python') },\n        !isSql && { icon: <img src='/images/javascript-logo.png' alt='' width='20px' />, name: 'Javascript', onClick: () => setLanguage('javascript') },\n        !isSql && { icon: <img src='/images/java-logo.png' alt='' width='20px' />, name: 'Java', onClick: () => setLanguage('java') },\n        isSql && { icon: <img src='/images/sql-logo.png' alt='' width='20px' />, name: 'SQL', onClick: () => setLanguage('sql') },\n        !isSql && { icon: <img src='/images/c-logo.png' alt='' width='20px' />, name: 'C', onClick: () => setLanguage('c') },\n        !isSql && { icon: <img src='/images/cpp-logo.png' alt='' width='20px' />, name: 'C++', onClick: () => setLanguage('cpp') },\n    ].filter(Boolean);\n\n    const sizeActions = [\n        { icon: <LooksOneRounded />, name: '15px', onClick: () => setSize(15) },\n        { icon: <LooksTwoRounded />, name: '18px', onClick: () => setSize(18) },\n        { icon: <Looks3Rounded />, name: '22px', onClick: () => setSize(22) },\n        { icon: <Looks4Rounded />, name: '25px', onClick: () => setSize(25) },\n        { icon: <Looks5Rounded />, name: '30px', onClick: () => setSize(30) },\n        { icon: <Looks6Rounded />, name: '35px', onClick: () => setSize(35) },\n    ];\n\n    return (\n    <Box className={`${hideQuestion ? 'w-[70%]' : 'w-1/2'} ${(minutes === 29 || minutes === 4 || minutes === 0) && (weekly_Assignment === 'True' || weekly_Assignment === 'Past') ? 'blink-background' : ''} h-full bg-white rounded-md pt-1 pr-2 pl-2 border-2 border-gray-200`}>\n        <Box className='relative flex items-center justify-center h-12'>\n            <SpeedDial\n            ariaLabel=\"Menu SpeedDial\"\n            sx={{\n                bgcolor: 'transparent',\n                position: 'absolute',\n                left: '0px',\n                top: '-2px',\n                zIndex: '100',\n                '& .MuiSpeedDial-fab': {\n                bgcolor: 'transparent',\n                color: 'black',\n                width : '45px',\n                height : '45px',\n                '&:hover': {\n                    bgcolor: 'transparent',\n                },\n                },\n            }}\n            \n            icon={<SpeedDialIcon sx={{ display : 'flex', alignItems : 'center', justifyContent : 'center' }} \n                icon={<img src={`/images/${language}-logo.png`} alt='' width={language === 'python' || language === 'javascript' ? '25px' : '30px'} />} \n                openIcon={<Close sx={{ fontSize: '30px' }} className='text-gray-500' />} />}\n            direction='down'\n            >\n            {actions.map((action) => (\n                <SpeedDialAction\n                key={action.name}\n                icon={action.icon}\n                tooltipTitle={action.name}\n                onClick={action.onClick}\n                arrow\n                />\n            ))}\n            </SpeedDial>\n            <Box className={`relative border-[1.50px] ${weekly_Assignment === 'True' || weekly_Assignment === 'Past' ? minutes < 15 ? 'border-red-400' : minutes < 30 ? 'border-yellow-400' : minutes < 45 ? 'border-orange-400' : 'border-green-400' : 'border-gray-400'} \n                ${weekly_Assignment === 'True' || weekly_Assignment === 'Past' ? minutes < 15 ? 'text-red-700' : minutes < 30 ? 'text-yellow-700' : minutes < 45 ? 'text-orange-700' : 'text-green-700' : 'text-black'}\n                flex items-center justify-center h-[40px] w-[20%] rounded-md`} sx={{fontSize : '18px'}}>\n                <Box className='w-full h-full bg-transparent flex items-center justify-center overflow-hidden' sx={{zIndex : '710'}}>\n                    {formatTime(hours)} : {formatTime(minutes)} : {formatTime(seconds)}\n                </Box>\n                <Box className={`absolute top-0 left-0 h-full rounded-md ${weekly_Assignment === 'True' || weekly_Assignment === 'Past' ? minutes < 6 ? 'bg-red-300' :  minutes < 15 ? 'bg-red-100' : minutes < 30 ? 'bg-yellow-100' : minutes < 45 ? 'bg-orange-100' : 'bg-green-100' : 'bg-white'}`} sx={{zIndex : '705', width : `${Math.floor((minutes / 60) * 100)}%`}}></Box>\n            </Box>\n            <SpeedDial\n            ariaLabel=\"Menu SpeedDial\"\n            sx={{\n                bgcolor: 'transparent',\n                position: 'absolute',\n                right: '0px',\n                top: '-2px',\n                zIndex: '100',\n                '& .MuiSpeedDial-fab': {\n                bgcolor: 'transparent',\n                color: 'black',\n                width : '45px',\n                height : '45px',\n                '&:hover': {\n                    bgcolor: 'transparent',\n                },\n                },\n            }}\n            icon={<SpeedDialIcon sx={{ display : 'flex', alignItems : 'center', justifyContent : 'center' }} \n                icon={size === 15 ? <LooksOneRounded /> : size === 18 ? <LooksTwoRounded /> : size === 22 ? <Looks3Rounded /> :\n                    size === 25 ? <Looks4Rounded /> : size === 30 ? <Looks5Rounded /> : <Looks6Rounded />\n                } \n                openIcon={<Close sx={{ fontSize: '30px' }} className='text-gray-500' />} />}\n            direction='down'\n            >\n            {sizeActions.map((action) => (\n                <SpeedDialAction\n                key={action.name}\n                icon={action.icon}\n                tooltipTitle={action.name}\n                onClick={action.onClick}\n                arrow\n                />\n            ))}\n            </SpeedDial>\n        </Box>\n        <Box className={`w-full ${hideConsole ? 'h-[86%]' : full_Screen ? 'h-[52%]' : 'h-[45%]'} rounded-md overflow-hidden`}>\n        <Editor\n            height=\"100%\"\n            width=\"100%\"\n            language={language}\n            value={code.current[language]}\n            options={{ fontSize: size }}\n            onChange={(value) => {code.current[language] = value; setDisp(!disp)}}\n            theme=\"vs-dark\"\n        />\n        </Box>\n        {!hideConsole && <><Box className='w-full'>\n            {language !== 'sql' ? <Tabs value={tab_Value}>\n                <Tab label='Input' sx={{fontWeight : 'bold', fontFamily : 'unset'}} onClick={()=>set_Tab_Value(0)}/>\n                <Tab label='Output' sx={{fontWeight : 'bold', fontFamily : 'unset'}} onClick={()=>set_Tab_Value(1)}/>\n            </Tabs>\n            :\n            <Tabs value={tab_Value}>\n                <Tab label='Output' sx={{fontWeight : 'bold', fontFamily : 'unset'}} onClick={()=>set_Tab_Value(0)}/>\n                <Tab label='Results' sx={{fontWeight : 'bold', fontFamily : 'unset'}} onClick={()=>set_Tab_Value(1)}/>\n            </Tabs>\n            }\n        </Box>\n\n        {tab_Value === 0 ? (language !== 'sql' ? <TextField rows={10} value={input} onChange={(e)=>setInput(e.target.value)}\n            multiline className='w-full' sx={{marginTop : '10px'}} /> : \n            <>\n                <Card className='w-full h-[16.50rem] max-w-full max-h-[16.50rem] overflow-auto mt-[10px]' \n                    sx={{overflow : 'auto', scrollbarWidth : 'thin', boxShadow : '0 0 5px rgba(0,0,0,0.5)'}} ref={cardRef}>\n                    <Box>\n                    {queries && Array.isArray(queries) && queries.length > 0 ? queries.map((query, index) => (\n                        query && query.query && !query.query.startsWith('--') && (\n                            <Typography\n                                key={index}\n                                variant='body2'\n                                className='flex items-center w-full whitespace-nowrap overflow-auto'\n                                sx={{\n                                    margin: '3px 0',\n                                    backgroundColor: (index % 2 === 0) ? '#EDF3FD' : 'white',\n                                    padding: '8px',\n                                    borderRadius: '4px',\n                                    scrollbarWidth : 'none'\n                                }}\n                            >\n                                {query.status === 'success' ? \n                                    <CheckCircleRounded color='success' sx={{ fontSize: '18px' }} /> :\n                                    <CancelRounded color='error' sx={{ fontSize: '18px' }} />\n                                }\n                                {query.status === 'error' ? query.error + \" • \" + query.query : query.message + \" • \" + query.query}\n                            </Typography>\n                        )\n                    )) : <Typography sx={{margin : '15px', color : 'grey'}}>Queries will appear here.</Typography>}\n                    </Box>\n                </Card>\n            </>) :\n\n        language !== 'sql' ? (<TextField rows={10} InputProps={{readOnly: true}} \n            multiline className='w-full' value={output.current} sx={{marginTop : '10px'}} />) : \n            \n            <Box className='w-full h-[16.50rem] max-h-[16.50rem] overflow-auto mt-[10px] border-[1px] border-gray-300 rounded-md' sx={{scrollbarWidth : 'thin'}}>\n                {keys && keys.length > 0 ? Array.isArray(keys) && keys.map((item, index) => (\n                <TableContainer key={index} component={Paper} sx={{ border: 'solid 1px lightgrey', marginBottom: '25px', scrollbarWidth : 'thin' }}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                {Array.isArray(item) && item.length > 0 && item.map((key) => (\n                                    <TableCell key={key} sx={{ fontWeight: 'bold', color: '#1976d2' }}>\n                                        {key}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Array.isArray(sqlResults) && sqlResults.length > 0 && Array.isArray(sqlResults[index]) ? (\n                                sqlResults[index].map((row, rowIndex) => (\n                                    <StyledTableRow key={rowIndex}>\n                                        {item.map((key) => (\n                                            <TableCell key={key}>\n                                                {row[key] !== undefined ? row[key] : 'N/A'}\n                                            </TableCell>\n                                        ))}\n                                    </StyledTableRow>\n                                ))\n                            ) : (\n                                <StyledTableRow>\n                                    <TableCell colSpan={keys.length}>No results available</TableCell>\n                                </StyledTableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                )) : (\n                <TextField rows={10} InputProps={{readOnly: true}} placeholder='Tables will appear here'\n                multiline className='w-full' value={''} />)}\n            </Box>\n        }</>}\n\n        <Box className='h-14 mt-1 flex items-center justify-between'>\n            <Button startIcon={hideConsole ? <ExpandMoreRounded/> : <ExpandLessRounded />} onClick={()=>setHideConsole(!hideConsole)}>\n                {hideConsole ? 'Show' : 'Hide'} Console\n            </Button>\n            <Box className='w-[50%] flex items-center justify-between'>\n                <Box className='relative w-[50%]'>\n                    <Button variant='outlined' disabled={loading1} sx={{width : '90%', marginRight : '0'}}\n                    onClick={()=>{if(!submitted){setLoading1(true);output.current = '';setSqlResults('');setTimeout(()=>{run_Code()},2000)}}}>Run Code {submitted ? timer < 10  ? `in 0${timer}` : `in ${timer}` : null}</Button>\n                    {loading1 && (\n                    <CircularProgress\n                    size={24}\n                    sx={{\n                        color: 'primary',\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        marginTop: '-12px',\n                        marginLeft : '-18px',\n                    }}\n                    />\n                    )}\n                </Box>\n                <Box className='relative w-[50%]'>\n                    <Button variant='contained' sx={{width : '90%', margin : '0 0 0 15px'}}\n                        disabled={(weekly_Assignment === 'True' && hours === 0 && minutes === 0 && seconds === 0) || loading2}\n                        onClick={()=>{if(!submitted){setLoading2(true);setTimeout(()=>{execute_Code()},2000)}}}>Submit {submitted ? timer < 10  ? `in 0${timer}` : `in ${timer}` : null}</Button>\n                    {loading2 && (\n                    <CircularProgress\n                    size={24}\n                    sx={{\n                        color: 'primary',\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        marginTop: '-12px',\n                    }}\n                    />\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    </Box>\n    )\n}\n\nexport default CodeEditor;\n","import React, { startTransition, useContext, useEffect, useState } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Dialog, DialogActions, DialogContent, Divider, IconButton, Tab, Tabs, Tooltip, Typography } from '@mui/material';\nimport { CancelRounded, CheckCircleRounded, CheckRounded, ExpandMore, KeyboardTabRounded, LogoutRounded, PsychologyAltRounded, PublishedWithChangesRounded, WorkspacePremiumRounded, ZoomInMapRounded, ZoomOutMapRounded } from '@mui/icons-material';\n\nconst CodingQuestionPage = ({isUser, results, questionData, tabValue, setTabValue, handleExitFullScreen, resultPopUp, \n                              setResultPopUp, hideQuestion, setHideQuestion, handleFullScreen, setQuestions_Data, solveAssessmentData, \n                              score, scoreData, postResults, setIsOpen, time_Up, handleShowSnackbar, minutes, }) => {\n  const [expand, setExpand] = useState(null);\n  const [submit, setSubmit] = useState(false);\n  const weekly_Assignment = sessionStorage.getItem('Weekly Assignment');\n  const [submitError, setSubmitError] = useState(false);\n  const [wait, setwait] = useState(false);\n  \n  useEffect(()=>startTransition(()=>{handleFullScreen()}),[])\n\n  useEffect(()=>{\n    startTransition(()=>{\n      resultPopUp && setTimeout(()=>{\n        !submit && setResultPopUp(false);\n      },3000)\n    })\n  },[resultPopUp])\n\n  const submitAssignment = async () => {\n    setSubmitError(false);\n    if(weekly_Assignment !== 'True' || isUser !== 'Student'){\n      setIsOpen(false);\n      return;\n    }\n    setwait(true);\n    const res = await postResults();\n    if(res === true){\n      setIsOpen(false);\n      handleShowSnackbar('success','Congrats! Completing this assignment is a fantastic milestone in your learning journey!')\n    }else{\n      setSubmitError(true);\n    }\n    setwait(false);\n  }\n\n  useEffect(()=>{\n    if(time_Up){\n      submitAssignment();\n    }\n  },[time_Up])\n\n  return (\n    <>\n    <Box className={`${hideQuestion ? 'w-[30%]' : 'w-1/2'} ${(minutes === 29 || minutes === 4 || minutes === 0) && (weekly_Assignment === 'True' || weekly_Assignment === 'Past') ? 'blink-background' : ''} h-full bg-white border-2 rounded-md pl-5 pr-3`}>\n       <Box className='w-full h-14 flex items-center justify-between'>\n        <img src='/images/V-Cube-Logo.png' alt='' width='12%' />\n        <Tabs value={tabValue}>\n          <Tab label='Question' sx={{fontWeight : 'bold', fontFamily : 'unset'}} onClick={()=>setTabValue(0)}/>\n          <Tab label='Submission' disabled={weekly_Assignment === 'True' && isUser === 'Student'} sx={{fontWeight : 'bold', fontFamily : 'unset'}} onClick={()=>setTabValue(1)}/>\n        </Tabs>\n        <Box className='w-1/6 flex items-center justify-between'>\n        <Tooltip title={`${hideQuestion ? 'Compress' : 'Decompress'} Question Tab`} arrow>\n          <IconButton onClick={()=>setHideQuestion(!hideQuestion)}>\n            <KeyboardTabRounded sx={{transform : !hideQuestion && 'rotate(180deg)'}} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Exit' arrow><IconButton onClick={handleExitFullScreen}><LogoutRounded /></IconButton></Tooltip>\n        </Box>\n      </Box>\n      {resultPopUp ? <>\n        {submit ?\n          <Box className='w-full h-[90%] flex flex-col items-center justify-center'>\n              <PsychologyAltRounded color='primary' sx={{fontSize : '100px', margin : '30px 0'}} />\n              <Typography className='text-slate-500 w-[80%] text-center' sx={{margin : '20px 0 10px 0'}}>\n                Make sure to review your code thoroughly for any mistakes before you submit it.\n              </Typography>\n              <Typography variant='h5' sx={{fontFamily : 'monospace', margin : '10px 0 20px 0'}} className='text-slate-500'>\n                Your Score: {score}\n              </Typography>\n              <Box className='w-[80%] flex items-center justify-evenly'>\n                <Button variant='outlined' sx={{width : '45%'}} startIcon={<PublishedWithChangesRounded/>} onClick={()=>{setSubmit(false);setResultPopUp(false)}}>Check Again</Button>\n                <Button variant='contained' sx={{width : '45%'}} disabled={wait} endIcon={<CheckCircleRounded/>} onClick={submitAssignment}>Continue Submission</Button>\n              </Box>\n              {submitError && <Typography color='error' sx={{marginTop : '30px'}}>Something went wrong while Submission. Please try again later.</Typography>}\n          </Box> :\n          <Box className='w-full h-[90%] flex flex-col items-center justify-center'>\n          {results && results.all_tests_passed ? \n              <WorkspacePremiumRounded className='scaleAndShake' color='success' sx={{fontSize : '150px', margin : '20px 0'}} /> :\n              <CancelRounded className='scaleAndShake' color='error' sx={{fontSize : '100px', margin : '30px 0'}} />\n            }\n            <Typography color={results && results.all_tests_passed ? 'green' : 'error'} sx={{fontSize : '28px'}} >\n              {results && results.all_tests_passed ? 'You Passed all the Test Cases' : 'You Failed the Test Cases' }\n            </Typography>\n        </Box>}\n      </> :\n      (questionData ? <>\n      {tabValue === 0 ? \n      <Box>\n        {(weekly_Assignment === 'True' || weekly_Assignment === 'Past') && \n          <Box className='w-full h-20 flex items-center justify-between rounded-md'>\n                <Box className='w-[70%] flex items-center justify-start'>\n                    {solveAssessmentData.map((data, index)=>\n                        <Button variant={data.id === questionData.id ? 'contained' : 'outlined'} color={scoreData[data.id] === 100 ? 'success' : 'primary'} sx={{marginRight : '20px'}} onClick={()=>setQuestions_Data(data)}>\n                          {scoreData[data.id] === 100 ? <CheckRounded/> : isUser !== 'Student' ? `${index + 1} id: ${data.id}` : index + 1 }\n                        </Button>\n                    )}\n                </Box>\n                <Button color='error' variant='contained' onClick={()=>{setSubmit(true);setResultPopUp(true)}}>Submit Assigments</Button>\n          </Box>}\n        <Box className='flex items-center justify-between w-full h-10'>\n          <Typography className='text-gray-400'>Question</Typography>\n          <Typography className={`${questionData.Level === 'Easy' ? 'text-green-600' : (questionData.Level === 'Medium') ? 'text-yellow-600' : 'text-red-600'} \n              text-center rounded-md ${questionData.Level === 'Easy' ? 'bg-green-100' : (questionData.Level === 'Medium') ? 'bg-yellow-100' : 'bg-red-100'} w-16`}\n              >{questionData.Level}\n          </Typography>\n        </Box>\n        <Typography variant='h4'>{questionData.Question && JSON.parse(questionData.Question).Title}</Typography>\n        <Divider sx={{margin : '10px 0'}}/>\n        <Box className={`w-full min-h-52 ${(weekly_Assignment === 'True' || weekly_Assignment === 'Past') ? 'max-h-[44rem]' : 'max-h-[48rem]'} overflow-y-auto`} sx={{scrollbarWidth : 'thin'}}>\n          {questionData.Question && JSON.parse(`${questionData.Question}`).Question.split('\\n').map(text=>(<Typography \n            sx={{fontSize : '18px', margin : '20px 0', fontWeight : (text.includes('<strong>')) ? 'bold' : '',fontFamily : 'unset'}}>\n            {text.replace('<strong>',\"\").replace('</strong>',\"\")}\n            </Typography>))}\n          {questionData.Examples && JSON.parse(questionData.Examples).map((example, index)=><Box className='pt-2 pb-2 mt-5'>\n            <Typography variant='h5' sx={{margin : '0 0 20px 0'}}>Example {index+1}</Typography>\n            <Typography sx={{fontWeight : 'bold'}}>Input</Typography>\n            <Box className='bg-gray-200 rounded-md p-2 h-auto mt-2'>\n              {example.input.map(input=><Typography>{input}</Typography>)}\n            </Box>\n            <Typography sx={{fontWeight : 'bold', margin : '15px 0'}}>Output</Typography>\n            <Box className='bg-gray-200 rounded-md p-2 h-auto mt-2'>\n            {example.output.map(output=><Typography>{output}</Typography>)}\n            </Box>\n            <Typography sx={{fontWeight : 'bold', margin : '15px 0'}}>Explanation</Typography>\n            {example.explanation.map(explan=><Typography>{explan}</Typography>)}\n          </Box>)}\n        </Box>\n      </Box> : \n      <Box className='pt-3 pb-3 max-h-[55rem] overflow-y-auto flex flex-col items-center' sx={{scrollbarWidth : 'thin'}}>\n        {results && results.status && results.status === 'Failed' ? <>\n            <Accordion expanded className='w-full border-[1px]'>\n              <AccordionSummary>\n                <Box className='w-full flex items-center justify-between'>\n                  <Typography color='error' variant='h5'>Error</Typography>\n                  <Typography color='error' variant='h6' \n                    className='w-16 text-center bg-red-100 rounded-md' >{results.status}</Typography>\n                </Box>\n              </AccordionSummary>\n              <AccordionDetails>\n              <Typography color='error'>{results.message.toUpperCase()}</Typography>\n              </AccordionDetails>\n            </Accordion>\n        </> : \n        (results && Array.isArray(results.results) && results.results.length > 0 ?\n        <>\n        <Typography variant='h5' className='flex items-center' sx={{fontWeight : 'bold', margin : '20px 0'}}>Results : \n          <Typography variant='h5' sx={{fontWeight : 'normal', marginLeft : '10px'}} color={results.all_tests_passed ? '#4caf50' : 'error'}>\n            {results.all_tests_passed ? 'You have Passed All the Test Cases' : 'You have Failed the Test Cases'}\n          </Typography>\n        </Typography>\n        {Array.isArray(results.results) && results.results.map((result,index)=>(\n          <Accordion expanded={expand === index} onChange={()=>setExpand(expand === index ? null : index)} \n            sx={{boxShadow : '0 0 5px rgba(0,0,0,0.5)', width : '98%'}}>\n          <AccordionSummary expandIcon={<ExpandMore/>}>\n            <Box className='w-[95%] h-full flex items-center justify-between'>\n              <Typography className='w-1/2 mr-52'>Test Case {index + 1} </Typography>\n              <Typography className={`${(result.status && (result.status === 'pass' || result.passed === true))\n                                     ? 'text-green-600' : 'text-red-600'} ${(result.status && (result.status === 'pass' || result.passed === true)) ? 'bg-green-100' : 'bg-red-100'} w-20 text-center rounded-md`}>\n                {(result.status === 'pass' || result.passed === true) ? 'Passed' : 'Failed'}\n              </Typography>\n            </Box>\n            </AccordionSummary>\n          <AccordionDetails>\n          <Typography sx={{fontWeight : 'bold'}}>Input</Typography>\n            <Box className='bg-gray-200 rounded-md p-2 h-auto mt-2 overflow-auto' sx={{scrollbarWidth : 'thin'}}>\n              {result.inputs && result.inputs.map(input=>(<Typography className='whitespace-nowrap' >{input}</Typography>))}\n            </Box>\n            <Typography sx={{fontWeight : 'bold', marginTop : '20px'}}>Expected Output</Typography>\n            <Box className='bg-gray-200 rounded-md p-2 h-auto mt-2 overflow-auto' sx={{scrollbarWidth : 'thin'}}>\n              {result.expected && result.expected.map(output=><Typography className='whitespace-nowrap' >{output}</Typography>)}\n            </Box>\n            <Typography sx={{fontWeight : 'bold', marginTop : '20px'}}>Your Output</Typography>\n            <Box className='bg-gray-200 rounded-md p-2 h-auto mt-2 overflow-auto' sx={{scrollbarWidth : 'thin'}}>\n              {Array.isArray(result.output) ? result.output.map(output=><Typography className='whitespace-nowrap' >{output}</Typography>) : <Typography>{result.output}</Typography>}\n            </Box>\n            <Box className='flex items-start justify-start'>\n              <Box className='w-[25%] flex flex-col items-start justify-start'>\n                <Typography variant='h5' sx={{marginTop : '30px'}}>RUNTIME</Typography>\n                <Typography variant='h4' color='primary' sx={{marginTop : '10px'}}>{result.execution_time}</Typography>\n              </Box>\n              {result.stderr && <Box className='w-[75%]'>\n                <Typography variant='h5' color='error' sx={{marginTop : '30px'}}>ERROR</Typography>\n                <Typography color='error' sx={{marginTop : '10px'}}>{result.stderr}</Typography>\n              </Box>}\n            </Box>\n          </AccordionDetails>\n        </Accordion>))}\n        </> : <Typography variant='h4' sx={{margin : '30px 0'}}>Submit Question to show results.</Typography>)}\n        </Box>}\n        </> : <Typography sx={{margin : '30px 0'}} variant='h4'>No Selected Question.</Typography>)}\n    </Box>\n    </>\n  )\n}\n\nexport default CodingQuestionPage","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport CodeEditor from './CodeEditor';\nimport CodingQuestionPage from './CodingQuestionPage';\nimport { StudentsContext } from '../api/students';\nimport { DateTime } from '../date-time';\n\nexport const handleFullScreen = () => {\n    const editor = document.querySelector('.fullScreen');\n    if (!editor) return;\n\n    const requestFullscreen = editor.requestFullscreen || editor.webkitRequestFullscreen || editor.mozRequestFullScreen || editor.msRequestFullscreen;\n    \n    if (requestFullscreen) {\n        requestFullscreen.call(editor).catch((error) => {\n            console.error(\"Failed to enter fullscreen:\", error);\n        });\n    }\n};\n\nexport const handleExitFullScreen = () => {\n    const exitFullscreen = document.exitFullscreen || \n                          document.webkitExitFullscreen || \n                          document.mozCancelFullScreen || \n                          document.msExitFullscreen;\n\n    if (exitFullscreen) {\n        exitFullscreen.call(document).catch((error) => {\n            console.error(\"Failed to exit fullscreen:\", error);\n        });\n    } else {\n        console.warn(\"Fullscreen API is not supported in this browser.\");\n    }\n};\n\nconst AssessmentCodeEditor = ({ isOpen, setIsOpen, stdId, handleShowSnackbar, solveAssessmentData, name, phone, course, batchName, isUser }) => {\n    const { fetchAssignmentResults, patchAssignmentResults } = useContext(StudentsContext);\n    const results = useRef(null);\n    const [tabValue, setTabValue] = useState(0);\n    const [resultPopUp, setResultPopUp] = useState(false);\n    const [hideQuestion, setHideQuestion] = useState(false);\n    const [full_Screen, setFull_Screen] = useState(true);\n    const [popUp, setPopUp] = useState(false);\n    const [timeoutId, setTimeoutId] = useState(null);\n    const [seconds_, set_Seconds] = useState(10);\n    const weekly_Assignment = sessionStorage.getItem('Weekly Assignment');\n    const [questions_Data, setQuestions_Data] = useState(weekly_Assignment === 'True' || weekly_Assignment=== 'Past' ? solveAssessmentData[0] : solveAssessmentData);\n    const [time_Up, setTime_Up] = useState(false);\n    const [assignmentScore, setAssignmentScore] = useState({});\n    const values = Object.values(assignmentScore);\n    const score_Sum = values.reduce((acc, value) => acc + value, 0);\n    const score_Length = Array.isArray(solveAssessmentData) ? solveAssessmentData.length : 0;\n    const [minutes, setMinutes] = useState(0);\n\n    const postResults = async () => {\n        const getData = await fetchResults();\n        getData['Score'] = score_Sum > 0 && score_Length > 0 ? (score_Sum / (score_Length * 100)) * 100 : 0;\n        getData['Status'] = 'Solved';\n        getData['Time'] = sessionStorage.getItem('Assignment_Time');\n        const res = await patchAssignmentResults(getData);\n        if (res && res.message){\n            return false;\n        }else if(res === true){\n            return true;\n        }\n    }\n\n    useEffect(() => {\n        const handleBeforeUnload = () => {\n            if(isUser === 'Student' && weekly_Assignment === 'True'){\n                sessionStorage.setItem('Reloaded_In_Assignment','True');\n                sessionStorage.setItem('Reloaded_Assignment_Data',JSON.stringify(solveAssessmentData));\n            }\n        };\n        const handleScreenChange = (event) => {\n            if (\n                event.key === \"Escape\" || \n                event.key === \"F11\" || \n                (event.ctrlKey && event.key === \"f\") || \n                (event.metaKey && event.key === \"f\") || \n                (event.metaKey && event.shiftKey && event.key === \"F\") ||\n                event.metaKey\n            ) {\n                handleExitFullScreen();\n            }\n        }\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n        window.addEventListener('keydown', handleScreenChange);\n        return () => {\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n            window.removeEventListener('keydown', handleScreenChange);\n        };\n    }, []);\n\n    useEffect(() => {\n        const enterFullScreen = () => {\n            if (isOpen) {\n                setTimeout(() => {\n                    handleFullscreenChange();\n                    sessionStorage.removeItem('Reloaded_In_Assignment');\n                    sessionStorage.removeItem('Reloaded_Assignment_Data');\n                }, 100);\n            }\n        };\n        enterFullScreen();\n    }, [isOpen]);\n\n    const setItem = async () => {\n        if(isUser === 'Student' && weekly_Assignment === 'True'){\n            const getData = await fetchResults();\n            if(!getData)return;\n            getData.Status = 'Disqualified';\n            const patch = await patchAssignmentResults(getData);\n            if (patch === true){\n                handleShowSnackbar('warning','You are disqualified. Your participation has been revoked.');\n            }else{\n                handleShowSnackbar('error','Something went wrong. Please try again later.');\n            }\n        }\n    }\n\n    const fetchResults = async () => {\n        const res = await fetchAssignmentResults(stdId);\n        if (res && res.message){\n            handleShowSnackbar('error','Something went wrong. Please try again later.');\n            return null;\n        }else if(res){\n            const getData = Array.isArray(res) && res.find((data)=>\n                data.StudentId === stdId && \n                data.Name === `${name}~${phone}` &&\n                data.Course === course &&\n                data.BatchName === batchName &&\n                data.Date === DateTime().split(' ')[0]\n            )\n            return getData ? getData : null;\n        }\n    }\n\n    const updateScore = (key, score) => {\n        if (assignmentScore && assignmentScore[key] !== undefined && assignmentScore[key] >= score)return;\n        setAssignmentScore(prevScores => ({\n            ...prevScores,\n            [key]: score\n        }));\n    };\n\n    const startTimeout = () => {\n    set_Seconds(10);\n    if (timeoutId) {\n        clearTimeout(timeoutId);\n    }\n    const id = setTimeout(async () => {\n        isUser === 'Student' && await setItem();\n        setIsOpen(false);\n        setPopUp(false);\n    }, 11000);\n    setTimeoutId(id);\n    };\n\n    const handleFullscreenChange = () => {\n        if (document.fullscreenElement) {\n            setFull_Screen(true);\n            clearTimeout(timeoutId);\n            setPopUp(false);\n        } else {\n            setFull_Screen(false);\n            setPopUp(true);\n            startTimeout();\n        }\n    };\n    \n    useEffect(() => {\n\n        document.addEventListener('fullscreenchange', handleFullscreenChange);\n        return () => {\n            document.removeEventListener('fullscreenchange', handleFullscreenChange);\n            if (timeoutId) {\n            clearTimeout(timeoutId);\n            }\n        };\n        }, [timeoutId]);\n\n        useEffect(() => {\n        let intervalId;\n\n        if (popUp) {\n            intervalId = setInterval(() => {\n            set_Seconds(prev => {\n                if (prev > 0) {\n                return prev - 1;\n                } else {\n                clearInterval(intervalId);\n                return 0;\n                }\n            });\n            }, 1000);\n        }\n\n        return () => {\n            if (intervalId) {\n            clearInterval(intervalId);\n            }\n        };\n    }, [popUp]);\n\n    useEffect(() => {\n    if (!popUp) {\n        set_Seconds(10);\n    }\n    }, [popUp]);\n\n    const handleExit = async () => {\n        isUser === 'Student' && await setItem();\n        setIsOpen(false);\n        setPopUp(false);\n        set_Seconds(10);\n    }\n\n    return (\n    <>\n    <Dialog fullScreen sx={{zIndex : '700'}} open={isOpen}>\n        <DialogContent className='fullScreen flex items-center justify-between bg-gray-200' sx={{padding : 0 }}>\n            <CodingQuestionPage results={results.current} questionData={questions_Data} tabValue={tabValue} setTabValue={setTabValue} \n                                handleExitFullScreen={handleExitFullScreen} resultPopUp={resultPopUp} setResultPopUp={setResultPopUp} isUser={isUser}\n                                hideQuestion={hideQuestion} setHideQuestion={setHideQuestion} handleFullScreen={handleFullScreen} handleShowSnackbar={handleShowSnackbar}\n                                setQuestions_Data={setQuestions_Data} solveAssessmentData={solveAssessmentData} score={score_Sum > 0 && score_Length > 0 ? (score_Sum / (score_Length * 100)) * 100 : 0}\n                                scoreData={assignmentScore} postResults={postResults} setIsOpen={setIsOpen} time_Up={time_Up} minutes={minutes} />\n            <CodeEditor setResults={results}\n                        test_Cases={questions_Data && JSON.parse(questions_Data.Test_Cases)}\n                        stdId={stdId} handleShowSnackbar={handleShowSnackbar} setTime_Up={setTime_Up}\n                        setResultPopUp={setResultPopUp} hideQuestion={hideQuestion} minutes={minutes} setMinutes={setMinutes}\n                        isSql={questions_Data && JSON.parse(questions_Data.Question).SQL === 'Yes'}\n                        full_Screen={full_Screen} setTabValue={setTabValue} questionId={questions_Data && questions_Data.id}\n                        name={name} course={course} batchName={batchName} isUser={isUser} updateScore={updateScore} />\n        </DialogContent>\n    </Dialog>\n\n    <Dialog open={popUp}>\n        <DialogTitle variant='h6'>Please use fullscreen mode to complete your assignment.</DialogTitle>\n        <DialogContent className='w-full h-full flex flex-col items-center justify-center'>\n        {weekly_Assignment === 'True' && <Typography color='error' className='w-full text-start'>\n            If you exit the assignment before completing it,<br/>you will be disqualified,<br/>your submission will not be counted, and you cannot reenter.\n        </Typography>}\n        <Typography sx={{margin : '20px 0'}} >Please go to fullscreen and complete the assignment before the timer ends.</Typography>\n        <Typography variant='h4' className='w-full text-center'>{seconds_ < 10 ? `0${seconds_}` : seconds_}s</Typography>\n        </DialogContent>\n        <DialogActions>\n        <Button variant='outlined' onClick={handleExit}>Exit</Button>\n        <Button variant='contained' onClick={()=>{handleFullScreen();setPopUp(false);set_Seconds(10)}} >Back to Full Screen</Button>\n        </DialogActions>\n    </Dialog>\n    </>\n    )\n}\n\nexport default AssessmentCodeEditor;"],"names":["StyledTableRow","styled","TableRow","_ref","theme","backgroundColor","border","_ref2","setResults","test_Cases","stdId","handleShowSnackbar","setResultPopUp","hideQuestion","isSql","full_Screen","setTabValue","questionId","name","course","batchName","isUser","updateScore","setTime_Up","minutes","setMinutes","runCode","executeCode","useContext","ExecuteCodeContext","getStudentAttendanceById","postStudentAttendance","StudentsContext","disp","setDisp","useState","code","useRef","javascript","python","java","sql","cpp","c","language","setLanguage","weekly_Assignment","sessionStorage","getItem","size","setSize","input","setInput","output","attData","queries","setQueries","sqlResults","setSqlResults","keys","setKeys","tab_Value","set_Tab_Value","hours","setHours","seconds","setSeconds","loading1","setLoading1","loading2","setLoading2","hideConsole","setHideConsole","cardRef","submitted","setSubmitted","timer","setTimer","fetchData","async","res","message","response","status","data","Array","isArray","filter","Attendance_Type","split","current","useEffect","startTransition","length","keysList","map","subArray","Object","scrollTop","scrollHeight","timerId","setTimeout","prev","clearTimeout","removeSQLComments","cleanedSql","replace","trim","SubmitAssignment","some","StudentId","Name","Course","BatchName","Date","DateTime","interval","totalSeconds","setInterval","Math","floor","setItem","clearInterval","document","addEventListener","e","key","ctrlKey","metaKey","shiftKey","preventDefault","stopPropagation","DOMPurify","formatTime","time","String","padStart","actions","icon","_jsx","src","alt","width","onClick","Boolean","sizeActions","LooksOneRounded","LooksTwoRounded","Looks3Rounded","Looks4Rounded","Looks5Rounded","Looks6Rounded","_jsxs","Box","className","children","SpeedDial","ariaLabel","sx","bgcolor","position","left","top","zIndex","color","height","SpeedDialIcon","display","alignItems","justifyContent","openIcon","Close","fontSize","direction","action","SpeedDialAction","tooltipTitle","arrow","right","Editor","value","options","onChange","_Fragment","Tabs","Tab","label","fontWeight","fontFamily","TextField","rows","target","multiline","marginTop","Card","overflow","scrollbarWidth","boxShadow","ref","query","index","startsWith","Typography","variant","margin","padding","borderRadius","CheckCircleRounded","CancelRounded","error","InputProps","readOnly","item","TableContainer","component","Paper","marginBottom","Table","TableHead","TableCell","TableBody","row","rowIndex","undefined","colSpan","placeholder","Button","startIcon","ExpandMoreRounded","ExpandLessRounded","disabled","marginRight","id","Code","Input","Language","getResult","result","execution_time","run_Code","CircularProgress","marginLeft","TestCases","all_tests_passed","console","log","resul","results","execute_Code","questionData","tabValue","handleExitFullScreen","resultPopUp","setHideQuestion","handleFullScreen","setQuestions_Data","solveAssessmentData","score","scoreData","postResults","setIsOpen","time_Up","expand","setExpand","submit","setSubmit","submitError","setSubmitError","wait","setwait","submitAssignment","Tooltip","title","IconButton","KeyboardTabRounded","transform","LogoutRounded","PsychologyAltRounded","PublishedWithChangesRounded","endIcon","WorkspacePremiumRounded","CheckRounded","Level","Question","JSON","parse","Title","Divider","text","includes","Examples","example","explanation","explan","Accordion","expanded","AccordionSummary","AccordionDetails","toUpperCase","expandIcon","ExpandMore","passed","inputs","expected","stderr","editor","querySelector","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","call","catch","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","warn","isOpen","phone","fetchAssignmentResults","patchAssignmentResults","setFull_Screen","popUp","setPopUp","timeoutId","setTimeoutId","seconds_","set_Seconds","questions_Data","assignmentScore","setAssignmentScore","score_Sum","values","reduce","acc","score_Length","handleBeforeUnload","stringify","handleScreenChange","event","window","removeEventListener","handleFullscreenChange","removeItem","getData","fetchResults","Status","find","fullscreenElement","startTimeout","intervalId","Dialog","fullScreen","open","DialogContent","CodingQuestionPage","CodeEditor","Test_Cases","SQL","prevScores","DialogTitle","DialogActions"],"sourceRoot":""}