{"version":3,"file":"static/js/750.5ab672b2.chunk.js","mappings":"6JAIA,MAAMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACxD,wBAAyB,CACvBE,SAAU,OACVC,QAAS,SAEX,wBAAyB,CACvBD,SAAU,QAEb,IAYD,EAVoBE,IAEhBC,EAAAA,EAAAA,KAAER,EAAe,IACXO,EACJE,KAAK,OACLC,QAAQ,Y,iFCfd,MAAMC,GAAqBV,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC3D,uGAAwG,CACtGS,iBAAkB,OAClBC,OAAQ,GAEV,yBAA0B,CACxBC,cAAe,aAEjB,wBAAyB,CACrBT,SAAU,OACVC,QAAS,SAET,wBAAyB,CACzBD,SAAU,QAEf,IAYD,EAVqBE,IAEjBC,EAAAA,EAAAA,KAACG,EAAkB,IACXJ,EACJE,KAAK,SACLC,QAAQ,Y,uLClBhB,MA+CA,EA/C+BP,IAA+K,IAA9K,OAAEY,EAAM,UAAEC,EAAS,yBAAEC,EAAwB,0BAAEC,EAAyB,0BAAEC,EAAyB,KAAEC,EAAI,YAAEC,GAAY,EAAK,YAAEC,EAAW,eAAEC,EAAc,YAAEC,GAAarB,EACpM,MAAM,gBAAEsB,IAAoBC,EAAAA,EAAAA,OACrBC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,IACtCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,OAM3CK,EAAAA,EAAAA,YAAU,KACHP,GACCQ,YAAW,KACPP,GAAa,EAAM,GACrB,IACN,GACF,CAACD,IAQL,OACES,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACPC,YAAU,EACVC,KAAMxB,EACNyB,GAAI,CAACC,OAAS,OAAOC,SAAA,EAErBN,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACC,UAAU,wDAAuDF,SAAA,EACpElC,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,2BAA2BC,IAAI,0BAA0BC,IAAI,GAAGC,MAAM,WACrFvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAW,CAACR,GAAI,CAACnC,SAAW,QAAQqC,SAAC,0CACtClC,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAACT,GAAI,CAACU,SAAW,WAAYC,MAAQ,KAAMC,IAAM,OAAQC,QAASA,IAAItB,GAAc,GAAMW,UAAClC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACd,GAAI,CAACnC,SAAW,OAAQkD,MAAQ,iBAEjJ/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAG,CAACZ,UAAU,mDAAkDF,UAC7DlC,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAACC,mBA9BQA,CAAChD,EAASiD,KACjClC,EAAgBkC,EAAS,CAAEjD,QAASA,EAASkD,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAY,EA6B/ClC,aAAcA,EAAcG,cAAeA,EAAef,UAAWA,EAC5GiB,aAAcA,EAAcb,KAAMA,EAAMH,yBAA0BA,EAA0BK,YAAaA,EAAaC,eAAgBA,EACtIL,0BAA2BA,EAA2BC,0BAA2BA,EAA2BE,YAAaA,EAAaG,YAAaA,OAEnKhB,EAAAA,EAAAA,KAACuD,EAAAA,QAAY,CAACxB,KAAMT,EAAYkC,MAAO,0CAA2CC,QAAS,qCAAsCC,SAAU,oBAC/HlC,UAAWA,EAAWmC,UAAWpC,EAAeH,aAAcA,EAAcwC,aAvBxEC,KAChBrD,GAAU,GACViB,EAAa,MACbF,GAAc,EAAM,IAqBnBJ,IAAanB,EAAAA,EAAAA,KAAC8D,EAAAA,QAAe,MACzB,C","sources":["components/InputField.js","components/noSpinnerField.js","components/student-info/Student-Form.js"],"sourcesContent":["import React from 'react';\nimport { TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledTextField = styled(TextField)(({ theme }) => ({\n  '& .MuiInputBase-input': {\n    fontSize: '20px',\n    padding: '5px 0',\n  },\n  '& .MuiInputLabel-root': {\n    fontSize: '20px',\n  },\n}));\n\nconst InputField = (props) => {\n  return (\n    < StyledTextField\n      {...props}\n      type=\"text\"\n      variant=\"standard\"\n    />\n  );\n};\n\nexport default InputField;\n\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst NoSpinnerTextField = styled(TextField)(({ theme }) => ({\n  '& input[type=\"number\"]::-webkit-inner-spin-button, & input[type=\"number\"]::-webkit-outer-spin-button': {\n    WebkitAppearance: 'none',\n    margin: 0,\n  },\n  '& input[type=\"number\"]': {\n    MozAppearance: 'textfield',\n  },\n  '& .MuiInputBase-input': {\n      fontSize: '20px',\n      padding: '5px 0',\n      },\n      '& .MuiInputLabel-root': {\n      fontSize: '20px',\n    }\n}));\n\nconst NumberInput = (props) => {\n  return (\n    <NoSpinnerTextField\n        {...props}\n        type=\"number\"\n        variant=\"standard\"\n    />\n  );\n};\n\nexport default NumberInput;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Dialog, Paper, IconButton, DialogTitle, Box } from '@mui/material';\nimport { Close } from '@mui/icons-material';\nimport SimpleStepper from '../student-form/Stepper';\nimport { useSnackbar } from 'notistack';\nimport LoadingSkeleton from '../skeleton';\nimport CustomDialog from '../dashboard/Dialog';\n\nconst StudentDetailsEditForm = ({ isOpen, setIsOpen, student_Personal_Details, student_Education_Details, student_Placement_Details, user, editDetails=false, joiningDate, selectedCourse, refreshData }) => {\n    const { enqueueSnackbar } = useSnackbar();\n    const [isLoading, setIsLoading] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [dialogMsg, setDialogMsg] = useState(null);      \n\n    const handleShowSnackbar = (variant, message) => {\n        enqueueSnackbar(message, { variant: variant, anchorOrigin: { vertical: 'top', horizontal: 'right' } });\n    };\n\n    useEffect(()=>{\n        if(isLoading){\n            setTimeout(()=>{\n                setIsLoading(false);\n            },3000)\n        }\n    },[isLoading])\n\n    const handleClose = () => {\n        setIsOpen(false);\n        setDialogMsg(null);\n        setOpenDialog(false);\n    };\n\n  return (\n    <Dialog\n    fullScreen\n    open={isOpen}\n    sx={{zIndex : '900'}}\n    >\n    <Paper className=\"relative w-full h-24 flex items-center justify-center\">\n        <img className=\"absolute left-3 -top-3.5\" src=\"/images/V-Cube-Logo.png\" alt='' width=\"150px\" />\n        <DialogTitle sx={{fontSize : '150%'}}>Learner Intake and Registration Form</DialogTitle>\n        <IconButton sx={{position : 'absolute', right : '1%', top : '20%'}} onClick={()=>setOpenDialog(true)}><Close sx={{fontSize : '35px', color : 'black'}}/></IconButton>\n    </Paper>\n    <Box className=\"h-full flex flex-col items-center justify-center\">\n        <SimpleStepper handleShowSnackbar={handleShowSnackbar} setIsLoading={setIsLoading} setOpenDialog={setOpenDialog} setIsOpen={setIsOpen} \n                        setDialogMsg={setDialogMsg} user={user} student_Personal_Details={student_Personal_Details} joiningDate={joiningDate} selectedCourse={selectedCourse}\n                        student_Education_Details={student_Education_Details} student_Placement_Details={student_Placement_Details} editDetails={editDetails} refreshData={refreshData} />\n    </Box>\n        <CustomDialog open={openDialog} title={\"Do you really want to close or return ?\"} content={\"The changes you made not be saved.\"} btnValue={'Return to Details'}\n                    dialogMsg={dialogMsg} setDialog={setOpenDialog} setIsLoading={setIsLoading} handle_Close={handleClose} />\n        {isLoading && <LoadingSkeleton/>}\n    </Dialog>\n  )\n}\n\nexport default StudentDetailsEditForm"],"names":["StyledTextField","styled","TextField","_ref","theme","fontSize","padding","props","_jsx","type","variant","NoSpinnerTextField","WebkitAppearance","margin","MozAppearance","isOpen","setIsOpen","student_Personal_Details","student_Education_Details","student_Placement_Details","user","editDetails","joiningDate","selectedCourse","refreshData","enqueueSnackbar","useSnackbar","isLoading","setIsLoading","useState","openDialog","setOpenDialog","dialogMsg","setDialogMsg","useEffect","setTimeout","_jsxs","Dialog","fullScreen","open","sx","zIndex","children","Paper","className","src","alt","width","DialogTitle","IconButton","position","right","top","onClick","Close","color","Box","SimpleStepper","handleShowSnackbar","message","anchorOrigin","vertical","horizontal","CustomDialog","title","content","btnValue","setDialog","handle_Close","handleClose","LoadingSkeleton"],"sourceRoot":""}