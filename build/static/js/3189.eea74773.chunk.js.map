{"version":3,"file":"static/js/3189.eea74773.chunk.js","mappings":"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","sources":["components/dashboard/UploadRecordings.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button, Card, CardMedia, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, InputAdornment, TextField, Typography } from '@mui/material';\nimport { CloseRounded } from '@mui/icons-material';\nimport { AssessmentContext } from '../api/Assessment';\n\nconst UploadRecordings = ({ isOpen, setIsOpen, selectedCourse, selectedBatch, handleShowSnackbar }) => {\n    const { postRecordings } = useContext(AssessmentContext);\n    const [vedioDetail, setVedioDetail] = useState({\n        Title : null,\n        Date : null,\n        Vedio_URL1 : null,\n        Vedio_URL2 : null,\n        Vedio_URL3 : null,\n    })\n    const [checkURL, setCheckURL] = useState(false);\n    const [url, setUrl] = useState(null);\n\n    const formatDate = (dateString) => {\n        const date = new Date(dateString);\n        const monthNames = [\n            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n        ];\n        const day = date.getDate();\n        const month = monthNames[date.getMonth()];\n        const year = date.getFullYear();\n        return `${day < 10 ? `0${day}` : day}-${month}-${year}`;\n    }\n\n    const uploadDetails = async () => {\n        const fields = !(vedioDetail.BatchName && vedioDetail.BatchName !== '' &&\n            vedioDetail.Course && vedioDetail.Course !== '' &&\n            vedioDetail.Title && vedioDetail.Date &&\n            vedioDetail.Vedio_URL1 && vedioDetail.Vedio_URL1.startsWith('https://'))\n\n        const optFields = (vedioDetail.Vedio_URL2 ? vedioDetail.Vedio_URL2.startsWith('https://') : true) &&\n                        (vedioDetail.Vedio_URL3 ? vedioDetail.Vedio_URL3.startsWith('https://') : true);\n\n        if(fields && optFields){\n            const data = {\n                Course : selectedCourse,\n                BatchName : selectedBatch,\n                Title : vedioDetail.Title,\n                Date : formatDate(vedioDetail.Date),\n                Vedio_URL : vedioDetail.Vedio_URL2 && vedioDetail.Vedio_URL3 ?\n                        `${vedioDetail.Vedio_URL1} ${vedioDetail.Vedio_URL2} ${vedioDetail.Vedio_URL3}` : \n                        vedioDetail.Vedio_URL2 && !vedioDetail.Vedio_URL3 ? `${vedioDetail.Vedio_URL1} ${vedioDetail.Vedio_URL2}` :\n                        !vedioDetail.Vedio_URL2 && vedioDetail.Vedio_URL3 ? `${vedioDetail.Vedio_URL1} ${vedioDetail.Vedio_URL3}` : vedioDetail.Vedio_URL1\n            }\n            const res = await postRecordings(data);\n            if (res === true){\n                handleShowSnackbar('success','Vedio details uploaded successfully.');\n            }else{\n                handleShowSnackbar('error',res.message);\n            }\n            handleClose();\n        }else{\n            handleShowSnackbar('error','Please fill out all fields.');\n            return;\n        }\n    }\n\n    const handleClose = () => {\n        setIsOpen(false);\n        setVedioDetail({\n            Title : null,\n            Date : null,\n            Vedio_URL1 : null,\n            Vedio_URL2 : null,\n            Vedio_URL3 : null,\n        });\n        setCheckURL(false);\n        setUrl(null);\n    }\n\n  return (\n    <Dialog open={isOpen} sx={{zIndex : '700'}}>\n        <img src='/images/V-Cube-Logo.png' alt='' width='15%' className='ml-[42.5%]' />\n        <IconButton sx={{position : 'absolute'}} className='right-0 top-0' onClick={handleClose}>\n            <CloseRounded sx={{fontSize : '35px'}}/>\n        </IconButton>\n        <DialogTitle variant='h5'>Upload Class Recordings</DialogTitle>\n        <DialogContent className='w-full h-[25rem] flex flex-col items-center justify-evenly' >\n            {!checkURL ? <>\n            <TextField type='text' label='Video Title' className='w-full'\n                value={vedioDetail.Title} onChange={(e)=> setVedioDetail(pre => ({...pre, Title: e.target.value}) )} />\n            <TextField type='date' className='w-full' \n                value={vedioDetail.Date} onChange={(e)=> setVedioDetail(pre => ({...pre, Date: e.target.value}) )}/>\n            <TextField type='url' label='Video URL1' className='w-full' \n                value={vedioDetail.Vedio_URL1} \n                onChange={(e)=> setVedioDetail(pre => ({...pre, Vedio_URL1:  e.target.value }) )}\n                InputProps={{ endAdornment: <InputAdornment position='end'>\n                    <Typography color={vedioDetail.Vedio_URL1 && vedioDetail.Vedio_URL1.startsWith('https://') ? 'primary' : 'grey'} \n                        className={vedioDetail.Vedio_URL1 && vedioDetail.Vedio_URL1.startsWith('https://') && 'cursor-pointer hover:underline'}\n                        onClick={() => {\n                            if (vedioDetail.Vedio_URL1 && vedioDetail.Vedio_URL1.startsWith('https://')) {\n                                if (!vedioDetail.Vedio_URL1.startsWith('https://')) {\n                                    handleShowSnackbar('error', 'Enter a valid URL.');\n                                } else {\n                                    setUrl(vedioDetail.Vedio_URL1);\n                                    setCheckURL(true);\n                                }\n                            } else {\n                                handleShowSnackbar('error', 'Enter Valid Video URL to view video.');\n                            }\n                    }}>Check Video</Typography>\n                    </InputAdornment> \n                }}/>\n            <TextField type='url' label='Video URL2 (Optional)' className='w-full' \n                value={vedioDetail.Vedio_URL2} \n                onChange={(e)=> setVedioDetail(pre => ({...pre, Vedio_URL2:  e.target.value }) )}\n                InputProps={{ endAdornment: <InputAdornment position='end'>\n                    <Typography color={vedioDetail.Vedio_URL2 && vedioDetail.Vedio_URL2.startsWith('https://') ? 'primary' : 'grey'} \n                        className={vedioDetail.Vedio_URL2 && vedioDetail.Vedio_URL2.startsWith('https://') && 'cursor-pointer hover:underline'}\n                        onClick={() => {\n                            if (vedioDetail.Vedio_URL2 && vedioDetail.Vedio_URL2.startsWith('https://')) {\n                                if (!vedioDetail.Vedio_URL2.startsWith('https://')) {\n                                    handleShowSnackbar('error', 'Enter a valid URL.');\n                                } else {\n                                    setUrl(vedioDetail.Vedio_URL2);\n                                    setCheckURL(true);\n                                }\n                            } else {\n                                handleShowSnackbar('error', 'Enter Valid Video URL to view video.');\n                            }\n                    }}>Check Video</Typography>\n                    </InputAdornment>\n                }}/>\n            <TextField type='url' label='Vedio URL3 (Optional)' className='w-full'\n                value={vedioDetail.Vedio_URL3}\n                onChange={(e)=> setVedioDetail(pre => ({...pre, Vedio_URL3:  e.target.value }) )}\n                InputProps={{ endAdornment: <InputAdornment position='end'>\n                    <Typography color={vedioDetail.Vedio_URL3 && vedioDetail.Vedio_URL3.startsWith('https://') ? 'primary' : 'grey'} \n                        className={vedioDetail.Vedio_URL3 && vedioDetail.Vedio_URL3.startsWith('https://') && 'cursor-pointer hover:underline'}\n                        onClick={() => {\n                            if (vedioDetail.Vedio_URL3 && vedioDetail.Vedio_URL3.startsWith('https://')) {\n                                if (!vedioDetail.Vedio_URL3.startsWith('https://')) {\n                                    handleShowSnackbar('error', 'Enter a valid URL.');\n                                } else {\n                                    setUrl(vedioDetail.Vedio_URL3);\n                                    setCheckURL(true);\n                                }\n                            } else {\n                                handleShowSnackbar('error', 'Enter Valid Video URL to view video.');\n                            }\n                        }}\n                        >Check Video</Typography>\n                    </InputAdornment>\n                }}/>\n            </> :\n            <Card>\n                <CardMedia\n                    component=\"video\"\n                    controls\n                    controlsList='nodownload'\n                    src={url}\n                    onContextMenu={(event)=>event.preventDefault()}\n                    sx={{ width: '100%', height: 'auto' }}>\n                </CardMedia>\n            </Card>}\n        </DialogContent>\n        <DialogActions>\n            {checkURL && <Button variant='outlined' onClick={()=>setCheckURL(false)}>\n                Back to Details\n            </Button>}\n            <Button variant='outlined' onClick={handleClose}>\n                Cancel\n            </Button>\n            <Button variant='contained' onClick={uploadDetails}>\n                Upload\n            </Button>\n        </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default UploadRecordings;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["_ref","isOpen","setIsOpen","selectedCourse","selectedBatch","handleShowSnackbar","postRecordings","useContext","AssessmentContext","vedioDetail","setVedioDetail","useState","Title","Date","Vedio_URL1","Vedio_URL2","Vedio_URL3","checkURL","setCheckURL","url","setUrl","formatDate","dateString","date","day","getDate","getMonth","getFullYear","handleClose","_jsxs","Dialog","open","sx","zIndex","children","_jsx","src","alt","width","className","IconButton","position","onClick","CloseRounded","fontSize","DialogTitle","variant","DialogContent","Card","CardMedia","component","controls","controlsList","onContextMenu","event","preventDefault","height","_Fragment","TextField","type","label","value","onChange","e","pre","target","InputProps","endAdornment","InputAdornment","Typography","color","startsWith","DialogActions","Button","async","fields","BatchName","Course","optFields","data","Vedio_URL","res","message","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useDefaultProps","image","other","includes","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","memoTheme","theme","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","size","FormControlContext","Provider"],"sourceRoot":""}