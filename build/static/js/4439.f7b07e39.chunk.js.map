{"version":3,"file":"static/js/4439.f7b07e39.chunk.js","mappings":"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","sources":["components/student-info/StudentNotifications.js","../node_modules/@mui/icons-material/esm/MessageRounded.js","../node_modules/@mui/icons-material/esm/NotificationsRounded.js","../node_modules/@mui/icons-material/esm/ReplayRounded.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import React, { startTransition, useContext, useEffect, useState } from 'react';\nimport { Badge, Box, Card, Dialog, DialogContent, DialogTitle, IconButton, Link, Tooltip, Typography } from '@mui/material';\nimport { CloseRounded, MessageRounded, NotificationsRounded, ReplayRounded, Visibility } from '@mui/icons-material';\nimport { BatchContext } from '../api/batch';\nimport { DateTime } from '../date-time';\nimport { StudentsContext } from '../api/students';\nimport { mui_colors } from '../ExternalData';\n\nconst StudentNotifications = ({ isOpen, setIsOpen, course, batchName, handleShowSnackbar, setNotifLen, stdId, isLoading }) => {\n  const { fetchBatchMessageData } = useContext(BatchContext);\n  const { fetchBatchToStudentMessageData } = useContext(StudentsContext);\n  const [batchData, setBatchData] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  \n    const fetchData = async() => {\n        const res = await fetchBatchMessageData(course);\n        const result = await fetchBatchToStudentMessageData(stdId);\n        if (res && res.message){\n            handleShowSnackbar('error',res.message);\n        }else if(res){\n            if(Array.isArray(res) && res.length === 0){\n                handleShowSnackbar('error','No data found.');\n                return;\n            }\n            const resData = Array.isArray(res) && res.length > 0 && res.filter(data=>(data.Course === course && data.BatchName === batchName));\n            const data = !(result.message) ? resData && result && resData.concat(result) : resData;\n            setBatchData([...data].reverse());\n            if(Array.isArray(data) && data.length > 0)setNotifLen(data.filter(data=>data.BatchMessage.split('~')[0].split(' ')[0] === DateTime().split(' ')[0]).length);\n        }\n    }\n\n  useEffect(()=>{\n    startTransition(()=>{\n        fetchData();\n    })\n  },[isLoading])\n\n  const make_refresh = async () => {\n    await fetchData();\n    setRefresh(true);\n    setTimeout(()=>{\n        setRefresh(false);\n    },10000)\n  }\n\n  return (\n    <Dialog open={isOpen} sx={{zIndex : '700'}} maxWidth='lg'>\n        <img src='/images/V-Cube-Logo.png' alt='' width='12%' className='ml-[44%]' />\n        <IconButton sx={{position : 'absolute'}} className='right-1 top-1' onClick={()=>setIsOpen(false)} ><CloseRounded sx={{fontSize : '35px'}} /></IconButton>\n        <IconButton disabled={refresh} sx={{position : 'absolute'}} className='top-1 right-12' onClick={make_refresh}>\n            <ReplayRounded sx={{fontSize : '35px'}} />\n        </IconButton>\n        <DialogTitle variant='h5'>Your Notifications <NotificationsRounded sx={{fontSize : '30px'}} /></DialogTitle>\n        <DialogContent className='w-[50rem] h-[40rem] overflow-y-auto' sx={{scrollbarWidth : 'none'}}>\n            {Array.isArray(batchData) && batchData.map((data,index)=>{\n            const msg = data.BatchMessage.split('~');\n            return(\n            <Tooltip title={`Message : ${msg[3]}`}>\n            <Card className='relative flex items-center justify-start mt-5 h-24 pl-3 mb-5' sx={{boxShadow : '0 0 5px rgba(0,0,0,0.5)'}}>\n                <MessageRounded sx={{color : mui_colors[index < 20 ? index : Math.floor(Math.random() * 19)], fontSize : '30px', width : '5%', marginRight : '10px'}}/>\n                <Box className='flex flex-col items-start justify-between h-[70%] w-[90%]'>\n                <Typography className='text-slate-500'>From : {msg[1]}</Typography>\n                    <Typography className='text-slate-500'>Reason : {msg[2]}</Typography>\n                    <Typography className='text-slate-400'>Date : {msg[0]}</Typography>\n                </Box>\n                {msg[4] !== 'N/A' && <Tooltip title='Show Uploaded File' arrow><Link href={msg[4]} target='_blank'><IconButton color='primary' sx={{marginRight : '10px'}} ><Visibility color='primary'/></IconButton></Link></Tooltip>}\n                {msg[0].split(' ')[0] === DateTime().split(' ')[0] && <Box sx={{position : 'absolute'}} className='h-2 w-2 bg-red-600 rounded-full top-0 right-0'></Box>}\n            </Card>\n            </Tooltip>)})}\n        </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default StudentNotifications;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-3 12H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1m0-3H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1m0-3H7c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1\"\n}), 'MessageRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2m6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-1.29 1.29c-.63.63-.19 1.71.7 1.71h13.17c.89 0 1.34-1.08.71-1.71z\"\n}), 'NotificationsRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5V2.21c0-.45-.54-.67-.85-.35l-3.8 3.79c-.2.2-.2.51 0 .71l3.79 3.79c.32.31.86.09.86-.36V7c3.73 0 6.68 3.42 5.86 7.29-.47 2.27-2.31 4.1-4.57 4.57-3.57.75-6.75-1.7-7.23-5.01-.07-.48-.49-.85-.98-.85-.6 0-1.08.53-1 1.13.62 4.39 4.8 7.64 9.53 6.72 3.12-.61 5.63-3.12 6.24-6.24C20.84 9.48 16.94 5 12 5\"\n}), 'ReplayRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["_ref","isOpen","setIsOpen","course","batchName","handleShowSnackbar","setNotifLen","stdId","isLoading","fetchBatchMessageData","useContext","BatchContext","fetchBatchToStudentMessageData","StudentsContext","batchData","setBatchData","useState","refresh","setRefresh","fetchData","async","res","result","message","Array","isArray","length","resData","filter","data","Course","BatchName","concat","reverse","BatchMessage","split","DateTime","useEffect","startTransition","_jsxs","Dialog","open","sx","zIndex","maxWidth","children","_jsx","src","alt","width","className","IconButton","position","onClick","CloseRounded","fontSize","disabled","setTimeout","ReplayRounded","DialogTitle","variant","NotificationsRounded","DialogContent","scrollbarWidth","map","index","msg","Tooltip","title","Card","boxShadow","MessageRounded","color","mui_colors","Math","floor","random","marginRight","Box","Typography","arrow","Link","href","target","Visibility","createSvgIcon","d"],"sourceRoot":""}