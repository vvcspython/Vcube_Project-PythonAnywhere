{"version":3,"file":"static/js/4703.a8881cd6.chunk.js","mappings":"yTAOA,MAoHA,EApH0BA,IAAmG,IAAlG,OAAEC,EAAM,UAAEC,EAAS,eAAEC,EAAc,cAAEC,EAAa,KAAEC,EAAI,mBAAEC,EAAkB,aAAEC,GAAcP,EACnH,MAAM,qBAAEQ,IAAyBC,EAAAA,EAAAA,YAAWC,EAAAA,IACrCC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,OAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,OAClCK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,OAC1BO,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,OAClCS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GACjCW,GAAWC,EAAAA,EAAAA,KAEXC,GAAsBC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CACxCC,KAAM,gBACNC,SAAU,aACVC,OAAQ,EACRC,SAAU,SACVC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,WAAY,SACZC,MAAO,IAuBHC,EAAcA,KAClBzB,EAAU,MACVG,EAAW,MACXI,EAAQ,MACRE,EAAY,MACZJ,GAAY,GACZf,GAAU,EAAM,EAgBZoC,EAAgBC,UACpB,MAAMC,QAAYhC,EAAqBiC,GACnCD,GAAOA,EAAI1B,QACXR,EAAmB,QAAQkC,EAAI1B,SACzB0B,GACNlC,EAAmB,UAAU,2CAEjC+B,IACA9B,GAAa,EAAM,EAGzB,OACEmC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,KAAM3C,EAAQ4C,GAAI,CAACC,OAAS,OAAOC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,0BAA0BC,IAAI,GAAGd,MAAM,MAAMe,UAAU,cAChET,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAACC,QAAQ,KAAIN,SAAA,CAAC,wBAAoBC,EAAAA,EAAAA,KAACM,EAAAA,EAAW,QAC1DZ,EAAAA,EAAAA,MAACa,EAAAA,EAAa,CAACJ,UAAU,oDAAmDJ,SAAA,EACxEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACL,UAAU,cAAcM,MAAM,SAASZ,GAAI,CAACa,OAAS,UAC5DC,UAAQ,EAACC,MAAOjD,EAAQkD,SAAWC,GAAIlD,EAAUkD,EAAEC,OAAOH,OAAQI,WAAY,CAAEC,UAAW,IAC3FC,MAAOlD,IAAaL,EAAQwD,WAAYnD,IAAaL,EAAS,iBAAmB,MACrFqC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACY,WAAS,EAACC,KAAM,EAAGlB,UAAU,cAAeS,MAAO9C,EAAS2C,MAAM,oBAAoBE,UAAQ,EACrGE,SAAWC,GAAI/C,EAAW+C,EAAEC,OAAOH,OAAQM,MAAQlD,IAAaF,GAAYA,GAAYA,EAAQwD,OAAS,GACzGH,WAAYnD,IAAaF,EAAU,gBAAmBA,GAAWA,EAAQwD,OAAS,GAAM,gDAAkD,MAC9I5B,EAAAA,EAAAA,MAAC6B,EAAAA,EAAG,CAACpB,UAAU,4DAA2DJ,SAAA,EACtEL,EAAAA,EAAAA,MAAC6B,EAAAA,EAAG,CAACpB,UAAU,WAAUJ,SAAA,EAACL,EAAAA,EAAAA,MAAC8B,EAAAA,EAAM,CAACnB,QAAQ,YAAYoB,UAAYvD,GAAQE,GAAY4B,EAAAA,EAAAA,KAAC0B,EAAAA,EAAkB,KAAK1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAiB,IAC5HC,SAAUtD,EAASuD,MAAQ3D,GAAQE,EAAY,UAAY,UAAW0D,UAAU,QAAQC,UAAMC,EAAWC,UAAW,EAAElC,SAAA,EACtHC,EAAAA,EAAAA,KAACtB,EAAmB,CAACwD,KAAK,OAAOrB,SAAWC,GAnElCqB,KACtB,MAAMjE,EAAOiE,EAAMpB,OAAOqB,MAAM,GAChC7D,GAAW,GACX8D,YAAW,KACT,GAAInE,EACF,IAAIA,EAAKoE,KAAI,SAAkBC,QAAQ,IAAM,EAAE,CAC7ClE,EAAYH,EAAKsE,MACjB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjBxE,EAAQsE,EAAOG,OAAO,EAExBH,EAAOI,cAAc3E,EACvB,MACEZ,EAAmB,QAAQ,iFAG/BiB,GAAW,EAAM,GACjB,IAAK,EAkDqDuE,CAAiBhC,KAC/D5C,GAAQE,EAAY,gBAAkB,0BACvCE,IACD0B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CACjBT,KAAM,GACNzC,GAAI,CACAgC,MAAO,UACP7C,SAAU,WACVgE,IAAK,MACL9D,KAAM,MACN+D,UAAW,QACXC,WAAY,eAKpBlD,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAAApD,SAAE3B,GAAYA,WAGjCsB,EAAAA,EAAAA,MAAC0D,EAAAA,EAAa,CAAArD,SAAA,EACVC,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAACnB,QAAQ,WAAWgD,QAAShE,EAAYU,SAAC,YACjDC,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAACnB,QAAQ,YAAYR,GAAI,CAACT,MAAQ,OAAQiE,QA3DlCC,KAEnB,GADArF,GAAY,IACRN,IAAWG,EAAQ,OACvB,MAAMyF,EAAOlG,GAA+B,eAAvBA,EAAKmG,MAAM,KAAK,GAAsB,kBAAoB,GAAGrG,SAC5EsC,EAAO,CACTgE,OAAStG,EACTuG,UAAYtG,EACZuG,aAAgB,GAAGnF,KAAY+E,KAAQ5F,KAAUG,KAAYI,GAAQE,EAAYF,EAAO,SAE5FX,GAAa,GACb+B,EAAcG,EAAK,EAiDwDM,SAAC,cAEvE,C,6DCnHb,SAAe6D,EAAAA,EAAAA,IAA4B5D,EAAAA,EAAAA,KAAK,OAAQ,CACtD6D,EAAG,wOACD,c,4DCFJ,SAAeD,EAAAA,EAAAA,IAA4B5D,EAAAA,EAAAA,KAAK,OAAQ,CACtD6D,EAAG,mTACD,oB","sources":["components/dashboard/MessageToStudents.js","../node_modules/@mui/icons-material/esm/MailRounded.js","../node_modules/@mui/icons-material/esm/UploadFileRounded.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Box, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography } from '@mui/material';\nimport { CheckCircleRounded, MailRounded, UploadFileRounded } from '@mui/icons-material';\nimport styled from 'styled-components';\nimport { BatchContext } from '../api/batch';\nimport { DateTime } from '../date-time';\n\nconst MessageToStudents = ({ isOpen, setIsOpen, selectedCourse, selectedBatch, User, handleShowSnackbar, setIsLoading }) => {\n    const { postBatchMessageData } = useContext(BatchContext);\n    const [reason, setReason] = useState(null);\n    const [message, setMessage] = useState(null);\n    const [isSubmit, setIsSubmit] = useState(null);\n    const [file, setFile] = useState(null);\n    const [fileName, setFileName] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const dateTime = DateTime();\n\n    const VisuallyHiddenInput = styled('input')({\n        clip: 'rect(0 0 0 0)',\n        clipPath: 'inset(50%)',\n        height: 1,\n        overflow: 'hidden',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        whiteSpace: 'nowrap',\n        width: 1,\n    });\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        setLoading(true);\n        setTimeout(()=>{\n          if (file) {\n            if((file.size / (1024 * 1024)).toFixed(2) <= 5){\n              setFileName(file.name);\n              const reader = new FileReader();\n              reader.onloadend = () => {\n                setFile(reader.result);\n              };\n              reader.readAsDataURL(file);\n            }else{\n              handleShowSnackbar('error','You can upload files up to 5 MB. Files larger than 5 MB will not be accepted.');\n            }\n          }\n          setLoading(false);\n        },2000)\n      };\n    \n      const handleClose = () =>{\n        setReason(null);\n        setMessage(null);\n        setFile(null);\n        setFileName(null);\n        setIsSubmit(false);\n        setIsOpen(false);\n      }\n    \n      const handleSubmit = () => {\n        setIsSubmit(true);\n        if(!reason || !message)return;\n        const user = User && User.split(' ')[0] === 'Placements' ? 'Placements Team' : `${selectedCourse} Team`;\n        const data = {\n            Course : selectedCourse,\n            BatchName : selectedBatch,\n            BatchMessage :  `${dateTime}~${user}~${reason}~${message}~${(file && fileName) ? file : 'N/A'}`\n        }\n        setIsLoading(true);\n        submitMessage(data);\n      }\n\n      const submitMessage = async (data) => {\n        const res = await postBatchMessageData(data);\n        if (res && res.message){\n            handleShowSnackbar('error',res.message);\n        }else if (res){\n            handleShowSnackbar('success','You message has been sent successfully.');\n        }\n        handleClose();\n        setIsLoading(false);\n      };\n\n  return (\n    <Dialog open={isOpen} sx={{zIndex : '700'}}>\n        <img src='/images/V-Cube-Logo.png' alt='' width='20%' className='ml-[40%]' />\n        <DialogTitle variant='h5'>Message to Students <MailRounded /></DialogTitle>\n        <DialogContent className='w-full flex flex-col items-center justify-between'>\n            <TextField className='w-full h-20' label='Reason' sx={{margin : '15px 0'}} \n                required value={reason} onChange={(e)=>setReason(e.target.value)} inputProps={{ maxLength: 50 }}\n                error={isSubmit && !reason} helperText={isSubmit && !reason ? 'Provide Reason' : ''} />\n            <TextField multiline rows={3} className='w-full h-28'  value={message} label='Your Message Here' required\n                onChange={(e)=>setMessage(e.target.value)} error={(isSubmit && !message) || message && (message.length < 25)} \n                helperText={isSubmit && !message ? 'Enter Message' : (message && message.length < 25) ? 'Message should contain atleast 25 characters.' : ''} />\n            <Box className='w-full mt-8 h-16 flex flex-col items-center justify-start'>\n                <Box className='relative'><Button variant='contained' startIcon={(file && fileName) ? <CheckCircleRounded/> : <UploadFileRounded/>} \n                    disabled={loading} color={(file && fileName) ? 'success' : 'primary'} component=\"label\" role={undefined} tabIndex={-1}>\n                    <VisuallyHiddenInput type=\"file\" onChange={(e)=>handleFileChange(e)} />\n                    {(file && fileName) ? 'File Uploaded' : 'Upload Optional File'}</Button>\n                    {loading && (\n                    <CircularProgress\n                    size={24}\n                    sx={{\n                        color: 'primary',\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        marginTop: '-12px',\n                        marginLeft: '-12px',\n                    }}\n                    />\n                    )}\n                </Box>\n                <Typography>{fileName && fileName}</Typography>\n            </Box>\n        </DialogContent>\n        <DialogActions>\n            <Button variant='outlined' onClick={handleClose}>Cancel</Button>\n            <Button variant='contained' sx={{width : '20%'}} onClick={handleSubmit}>Send</Button>\n        </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MessageToStudents;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m-.4 4.25-6.54 4.09c-.65.41-1.47.41-2.12 0L4.4 8.25c-.25-.16-.4-.43-.4-.72 0-.67.73-1.07 1.3-.72L12 11l6.7-4.19c.57-.35 1.3.05 1.3.72 0 .29-.15.56-.4.72\"\n}), 'MailRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m19.41 7.41-4.83-4.83c-.37-.37-.88-.58-1.41-.58H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8.83c0-.53-.21-1.04-.59-1.42M14.8 15H13v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H9.21c-.45 0-.67-.54-.35-.85l2.8-2.79c.2-.19.51-.19.71 0l2.79 2.79c.3.31.08.85-.36.85M14 9c-.55 0-1-.45-1-1V3.5L18.5 9z\"\n}), 'UploadFileRounded');"],"names":["_ref","isOpen","setIsOpen","selectedCourse","selectedBatch","User","handleShowSnackbar","setIsLoading","postBatchMessageData","useContext","BatchContext","reason","setReason","useState","message","setMessage","isSubmit","setIsSubmit","file","setFile","fileName","setFileName","loading","setLoading","dateTime","DateTime","VisuallyHiddenInput","styled","clip","clipPath","height","overflow","position","bottom","left","whiteSpace","width","handleClose","submitMessage","async","res","data","_jsxs","Dialog","open","sx","zIndex","children","_jsx","src","alt","className","DialogTitle","variant","MailRounded","DialogContent","TextField","label","margin","required","value","onChange","e","target","inputProps","maxLength","error","helperText","multiline","rows","length","Box","Button","startIcon","CheckCircleRounded","UploadFileRounded","disabled","color","component","role","undefined","tabIndex","type","event","files","setTimeout","size","toFixed","name","reader","FileReader","onloadend","result","readAsDataURL","handleFileChange","CircularProgress","top","marginTop","marginLeft","Typography","DialogActions","onClick","handleSubmit","user","split","Course","BatchName","BatchMessage","createSvgIcon","d"],"sourceRoot":""}