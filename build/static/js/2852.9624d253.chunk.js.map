{"version":3,"file":"static/js/2852.9624d253.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/reselect/src/devModeChecks/identityFunctionCheck.ts","../node_modules/reselect/src/utils.ts","../node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/reselect/src/lruMemoize.ts","../node_modules/reselect/src/weakMapMemoize.ts","../node_modules/reselect/src/createSelectorCreator.ts","../node_modules/reselect/src/createStructuredSelector.ts","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/throttle/throttle.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/debounce/debounce.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDividerUtilityClass } from \"./dividerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin',\n  variants: [{\n    props: {\n      absolute: true\n    },\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    }\n  }, {\n    props: {\n      light: true\n    },\n    style: {\n      borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n    }\n  }, {\n    props: {\n      variant: 'inset'\n    },\n    style: {\n      marginLeft: 72\n    }\n  }, {\n    props: {\n      variant: 'middle',\n      orientation: 'horizontal'\n    },\n    style: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  }, {\n    props: {\n      variant: 'middle',\n      orientation: 'vertical'\n    },\n    style: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    }\n  }, {\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      height: '100%',\n      borderBottomWidth: 0,\n      borderRightWidth: 'thin'\n    }\n  }, {\n    props: {\n      flexItem: true\n    },\n    style: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !!ownerState.children,\n    style: {\n      display: 'flex',\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      border: 0,\n      borderTopStyle: 'solid',\n      borderLeftStyle: 'solid',\n      '&::before, &::after': {\n        content: '\"\"',\n        alignSelf: 'center'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.children && ownerState.orientation !== 'vertical',\n    style: {\n      '&::before, &::after': {\n        width: '100%',\n        borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n        borderTopStyle: 'inherit'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.orientation === 'vertical' && ownerState.children,\n    style: {\n      flexDirection: 'column',\n      '&::before, &::after': {\n        height: '100%',\n        borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n        borderLeftStyle: 'inherit'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical',\n    style: {\n      '&::before': {\n        width: '90%'\n      },\n      '&::after': {\n        width: '10%'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical',\n    style: {\n      '&::before': {\n        width: '10%'\n      },\n      '&::after': {\n        width: '90%'\n      }\n    }\n  }]\n})));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`,\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n      paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n    }\n  }]\n})));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n    absolute = false,\n    children,\n    className,\n    orientation = 'horizontal',\n    component = children || orientation === 'vertical' ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    role = component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState,\n    \"aria-orientation\": role === 'separator' && (component !== 'hr' || orientation === 'vertical') ? orientation : undefined,\n    ...other,\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  });\n});\n\n/**\n * The following flag is used to ensure that this component isn't tabbable i.e.\n * does not get highlight/focus inside of MUI List.\n */\nif (Divider) {\n  Divider.muiSkipListHighlight = true;\n}\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getLinearProgressUtilityClass } from \"./linearProgressClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst indeterminate1Animation = typeof indeterminate1Keyframe !== 'string' ? css`\n        animation: ${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n      ` : null;\nconst indeterminate2Keyframe = keyframes`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`;\nconst indeterminate2Animation = typeof indeterminate2Keyframe !== 'string' ? css`\n        animation: ${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n      ` : null;\nconst bufferKeyframe = keyframes`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`;\nconst bufferAnimation = typeof bufferKeyframe !== 'string' ? css`\n        animation: ${bufferKeyframe} 3s infinite linear;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  // Fix Safari's bug during composition of different paint.\n  zIndex: 0,\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color)\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.color === 'inherit' && ownerState.variant !== 'buffer',\n    style: {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'currentColor',\n        opacity: 0.3\n      }\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    }\n  }, {\n    props: {\n      variant: 'query'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  marginTop: 0,\n  height: '100%',\n  width: '100%',\n  backgroundSize: '10px 10px',\n  backgroundPosition: '0 -23px',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3,\n      backgroundImage: `radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => {\n    const backgroundColor = getColorShade(theme, color);\n    return {\n      props: {\n        color\n      },\n      style: {\n        backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`\n      }\n    };\n  })]\n})), bufferAnimation || {\n  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n  animation: `${bufferKeyframe} 3s infinite linear`\n});\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      zIndex: 1,\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate1Animation || {\n      animation: `${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`\n    }\n  }]\n})));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--LinearProgressBar2-barColor': (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color !== 'inherit',\n    style: {\n      backgroundColor: 'var(--LinearProgressBar2-barColor, currentColor)'\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color),\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate2Animation || {\n      animation: `${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemIconUtilityClass } from \"./listItemIconClasses.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex',\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n})));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = {\n    ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport listItemTextClasses, { getListItemTextUtilityClass } from \"./listItemTextClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4,\n  [`.${typographyClasses.root}:where(& .${listItemTextClasses.primary})`]: {\n    display: 'block'\n  },\n  [`.${typographyClasses.root}:where(& .${listItemTextClasses.secondary})`]: {\n    display: 'block'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.primary && ownerState.secondary,\n    style: {\n      marginTop: 6,\n      marginBottom: 6\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.inset,\n    style: {\n      paddingLeft: 56\n    }\n  }]\n});\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps,\n    ...other\n  } = props;\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = {\n    ...props,\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  };\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, {\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps?.variant ? undefined : 'span',\n      ...primaryTypographyProps,\n      children: primary\n    });\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      ...secondaryTypographyProps,\n      children: secondary\n    });\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [primary, secondary]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from \"../utils/capitalize.js\";\nimport TableContext from \"../Table/TableContext.js\";\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableCellClasses, { getTableCellUtilityClass } from \"./tableCellClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16,\n  variants: [{\n    props: {\n      variant: 'head'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  }, {\n    props: {\n      variant: 'body'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary\n    }\n  }, {\n    props: {\n      variant: 'footer'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: '6px 16px',\n      [`&.${tableCellClasses.paddingCheckbox}`]: {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '& > *': {\n          padding: 0\n        }\n      }\n    }\n  }, {\n    props: {\n      padding: 'checkbox'\n    },\n    style: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px'\n    }\n  }, {\n    props: {\n      padding: 'none'\n    },\n    style: {\n      padding: 0\n    }\n  }, {\n    props: {\n      align: 'left'\n    },\n    style: {\n      textAlign: 'left'\n    }\n  }, {\n    props: {\n      align: 'center'\n    },\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    props: {\n      align: 'right'\n    },\n    style: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    }\n  }, {\n    props: {\n      align: 'justify'\n    },\n    style: {\n      textAlign: 'justify'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n      backgroundColor: (theme.vars || theme).palette.background.default\n    }\n  }]\n})));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp,\n    ...other\n  } = props;\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = {\n    ...props,\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`capitalize(string)\\` expects a string argument.` : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe if we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","export default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from '../setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from '../ClassNameGenerator';\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} +\n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import type { AnyFunction } from '../types'\r\n\r\n/**\r\n * Runs a check to determine if the given result function behaves as an\r\n * identity function. An identity function is one that returns its\r\n * input unchanged, for example, `x => x`. This check helps ensure\r\n * efficient memoization and prevent unnecessary re-renders by encouraging\r\n * proper use of transformation logic in result functions and\r\n * extraction logic in input selectors.\r\n *\r\n * @param resultFunc - The result function to be checked.\r\n * @param inputSelectorsResults - The results of the input selectors.\r\n * @param outputSelectorResult - The result of the output selector.\r\n *\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks#identityfunctioncheck `identityFunctionCheck`}\r\n *\r\n * @since 5.0.0\r\n * @internal\r\n */\r\nexport const runIdentityFunctionCheck = (\r\n  resultFunc: AnyFunction,\r\n  inputSelectorsResults: unknown[],\r\n  outputSelectorResult: unknown\r\n) => {\r\n  if (\r\n    inputSelectorsResults.length === 1 &&\r\n    inputSelectorsResults[0] === outputSelectorResult\r\n  ) {\r\n    let isInputSameAsOutput = false\r\n    try {\r\n      const emptyObject = {}\r\n      if (resultFunc(emptyObject) === emptyObject) isInputSameAsOutput = true\r\n    } catch {\r\n      // Do nothing\r\n    }\r\n    if (isInputSameAsOutput) {\r\n      let stack: string | undefined = undefined\r\n      try {\r\n        throw new Error()\r\n      } catch (e) {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi, no-extra-semi\r\n        ;({ stack } = e as Error)\r\n      }\r\n      console.warn(\r\n        'The result function returned its own inputs without modification. e.g' +\r\n          '\\n`createSelector([state => state.todos], todos => todos)`' +\r\n          '\\nThis could lead to inefficient memoization and unnecessary re-renders.' +\r\n          '\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.',\r\n        { stack }\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '../useEnhancedEffect';\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","'use client';\n\nimport useLazyRef from '../useLazyRef/useLazyRef';\nimport useOnMount from '../useOnMount/useOnMount';\nexport class Timeout {\n  constructor() {\n    this.currentId = null;\n    this.clear = () => {\n      if (this.currentId !== null) {\n        clearTimeout(this.currentId);\n        this.currentId = null;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport getReactNodeRef from '@mui/utils/getReactNodeRef';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/material-ui/react-click-away-listener/)\n * - [Menu](https://mui.com/material-ui/react-menu/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/material-ui/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(getReactNodeRef(children), nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().includes(nodeRef.current);\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height: contentHeight\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the data grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../constants/gridDetailPanelToggleField.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from '../ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from \"../styles/index.js\";\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSkeletonUtilityClass } from \"./skeletonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\nconst waveKeyframe = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst pulseAnimation = typeof pulseKeyframe !== 'string' ? css`\n        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;\n      ` : null;\nconst waveAnimation = typeof waveKeyframe !== 'string' ? css`\n        &::after {\n          animation: ${waveKeyframe} 2s linear 0.5s infinite;\n        }\n      ` : null;\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em',\n    variants: [{\n      props: {\n        variant: 'text'\n      },\n      style: {\n        marginTop: 0,\n        marginBottom: 0,\n        height: 'auto',\n        transformOrigin: '0 55%',\n        transform: 'scale(1, 0.60)',\n        borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n        '&:empty:before': {\n          content: '\"\\\\00a0\"'\n        }\n      }\n    }, {\n      props: {\n        variant: 'circular'\n      },\n      style: {\n        borderRadius: '50%'\n      }\n    }, {\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren,\n      style: {\n        '& > *': {\n          visibility: 'hidden'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.width,\n      style: {\n        maxWidth: 'fit-content'\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.height,\n      style: {\n        height: 'auto'\n      }\n    }, {\n      props: {\n        animation: 'pulse'\n      },\n      style: pulseAnimation || {\n        animation: `${pulseKeyframe} 2s ease-in-out 0.5s infinite`\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n        WebkitMaskImage: '-webkit-radial-gradient(white, black)',\n        '&::after': {\n          background: `linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars || theme).palette.action.hover},\n                transparent\n              )`,\n          content: '\"\"',\n          position: 'absolute',\n          transform: 'translateX(-100%)' /* Avoid flash during server-side hydration */,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: waveAnimation || {\n        '&::after': {\n          animation: `${waveKeyframe} 2s linear 0.5s infinite`\n        }\n      }\n    }]\n  };\n}));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    style: {\n      width,\n      height,\n      ...style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport LastPageIconDefault from \"../internal/svg-icons/LastPage.js\";\nimport FirstPageIconDefault from \"../internal/svg-icons/FirstPage.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    disabled = false,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = slots.firstButton ?? IconButton;\n  const LastButton = slots.lastButton ?? IconButton;\n  const NextButton = slots.nextButton ?? IconButton;\n  const PreviousButton = slots.previousButton ?? IconButton;\n  const FirstButtonIcon = slots.firstButtonIcon ?? FirstPageIconDefault;\n  const LastButtonIcon = slots.lastButtonIcon ?? LastPageIconDefault;\n  const NextButtonIcon = slots.nextButtonIcon ?? KeyboardArrowRight;\n  const PreviousButtonIcon = slots.previousButtonIcon ?? KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...other,\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, {\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      ...firstButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, {\n        ...slotProps.lastButtonIcon\n      }) : /*#__PURE__*/_jsx(FirstButtonIcon, {\n        ...slotProps.firstButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(PreviousButtonSlot, {\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page),\n      ...(previousButtonSlotProps ?? backIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, {\n        ...slotProps.nextButtonIcon\n      }) : /*#__PURE__*/_jsx(PreviousButtonIcon, {\n        ...slotProps.previousButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(NextButtonSlot, {\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page),\n      ...(nextButtonSlotProps ?? nextIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, {\n        ...slotProps.previousButtonIcon\n      }) : /*#__PURE__*/_jsx(NextButtonIcon, {\n        ...slotProps.nextButtonIcon\n      })\n    }), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, {\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      ...lastButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, {\n        ...slotProps.firstButtonIcon\n      }) : /*#__PURE__*/_jsx(LastButtonIcon, {\n        ...slotProps.lastButtonIcon\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nvar _InputBase;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isHostComponent from \"../utils/isHostComponent.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport InputBase from \"../InputBase/index.js\";\nimport MenuItem from \"../MenuItem/index.js\";\nimport Select from \"../Select/index.js\";\nimport TableCell from \"../TableCell/index.js\";\nimport Toolbar from \"../Toolbar/index.js\";\nimport TablePaginationActions from \"./TablePaginationActions.js\";\nimport useId from \"../utils/useId.js\";\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from \"./tablePaginationClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n})));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => ({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions,\n    ...styles.toolbar\n  })\n})(memoTheme(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n})));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  flexShrink: 0\n})));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => ({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select,\n    ...styles.input,\n    ...styles.selectRoot\n  })\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  flexShrink: 0\n})));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    disabled = false,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = slotProps?.select ?? SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, {\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...other,\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, {\n        variant: \"standard\",\n        ...(!selectProps.variant && {\n          input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n        }),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId,\n        ...selectProps,\n        classes: {\n          ...selectProps.classes,\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        },\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, {\n          ...(!isHostComponent(MenuItemComponent) && {\n            ownerState\n          }),\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      }), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](https://mui.com/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({}, style, {\n        minWidth: 'var(--width)',\n        maxWidth: 'var(--width)'\n      })\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../constants/gridDetailPanelToggleField.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { GridEditModes } from \"../models/index.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../DataGrid/useDataGridProps.js\";\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set(['__check__', '__reorder__', '__detail_panel_toggle__']);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: renderContext.lastRowIndex - 1\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","colorDefault","memoTheme","_ref","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useDefaultProps","alt","children","childrenProp","className","component","slots","slotProps","imgProps","sizes","src","srcSet","other","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","DividerRoot","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","margin","borderWidth","borderStyle","borderColor","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","marginLeft","spacing","marginRight","marginTop","marginBottom","borderRightWidth","alignSelf","whiteSpace","border","borderTopStyle","borderLeftStyle","content","_ref3","borderTop","_ref4","flexDirection","borderLeft","_ref5","_ref6","DividerWrapper","wrapper","wrapperVertical","_ref7","paddingLeft","paddingRight","paddingTop","paddingBottom","Divider","role","undefined","getDividerUtilityClass","muiSkipListHighlight","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","maxHeight","action","inputAdornmentClasses","positionStart","hiddenLabel","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","size","FormControlContext","Provider","value","_jsxs","Typography","getLinearProgressUtilityClass","indeterminate1Keyframe","keyframes","indeterminate1Animation","css","indeterminate2Keyframe","indeterminate2Animation","bufferKeyframe","bufferAnimation","getColorShade","LinearProgress","mode","lighten","main","darken","LinearProgressRoot","zIndex","colorAdjust","Object","entries","filter","createSimplePaletteValueFilter","map","top","right","opacity","transform","LinearProgressDashed","dashed","backgroundSize","backgroundPosition","backgroundImage","animation","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","_ref8","_ref9","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","valueBuffer","bar1","bar2","isRtl","useRtl","rootProps","inlineStyles","Math","round","process","ListItemIconRoot","alignItemsFlexStart","minWidth","context","ListContext","getListItemIconUtilityClass","ListItemTextRoot","listItemTextClasses","primary","secondary","inset","multiline","dense","flex","typographyClasses","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","getListItemTextUtilityClass","type","getTableCellUtilityClass","TableCellRoot","padding","align","stickyHeader","body2","verticalAlign","borderBottom","TableCell","text","fontWeight","fontWeightMedium","tableCellClasses","paddingCheckbox","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","table","TableContext","tablelvl2","Tablelvl2Context","isHeadCell","ariaSort","string","Error","code","url","i","arguments","length","encodeURIComponent","_formatMuiErrorMessage","charAt","toUpperCase","slice","getUtilityClass","output","keys","forEach","reduce","acc","key","utilityClass","push","join","useForkRef","_len","refs","Array","_key","every","instance","current","setRef","window","defaultGenerator","componentName","createClassNameGenerator","generate","configure","generator","reset","globalStateClasses","checked","completed","disabled","error","expanded","focused","focusVisible","open","readOnly","required","selected","globalStateClass","ClassNameGenerator","globalStatePrefix","result","getDataGridUtilityClass","gridClasses","is","fastObjectShallowCompare","a","b","aLength","bLength","_","UNINITIALIZED","useLazyRef","init","initArg","EMPTY","useOnMount","fn","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","state","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","gridDimensionsSelector","dimensions","columnHeaderStyles","c","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","detailPanelToggleCell","t","radius","containerBackground","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedBackground","mainChannel","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","_extends","boxSizing","outline","minHeight","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","maxWidth","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","hasScrollX","hasScrollY","scrollbarSize","transitions","create","duration","shorter","gap","borderBottomStyle","cursor","columnHeaders","columnSeparatorOffset","touchAction","shortest","filler","scrollbarFiller","breakInside","rowSkeleton","textOverflow","borderTopColor","cellEmpty","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderRightColor","borderRightStyle","virtualScrollerContent","cellOffsetLeft","groupingCriteriaCellToggle","pinnedRows","virtualScroller","overlay","gamma","f","o","decomposeColor","overlayColor","rgb","values","recomposeColor","GridRootPropsContext","useGridRootProps","contextValue","NOT_FOUND","Symbol","assertIsFunction","func","TypeError","ensureIsArray","item","isArray","getDependencies","createSelectorArgs","dependencies","array","errorMessage","itemTypes","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","createCacheKeyComparator","equalityCheck","prev","next","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","entry","get","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","deref","this","weakMapMemoize","options","fnNode","s","v","p","lastResult","cacheNode","l","arg","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","_len3","_key4","composition","index","reselectCreateSelector","checkIsAPIRef","DEFAULT_INSTANCE_ID","id","e","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","args","cacheKey","cacheArgsInit","cacheArgs","cacheFn","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","_excluded","GridRoot","_objectWithoutPropertiesLoose","handleRef","rootElementRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","model","visibleColumnFields","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","useGridApiContext","GridPreferencesPanel","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","panel","basePopper","panelId","labelId","GridHeader","fastMemo","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","event","details","defaultMuiPrevented","subscribeEvent","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","Timeout","currentId","disposeEffect","start","delay","useTimeout","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","target","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","onChange","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","Number","gridDateComparator","globalId","maybeReactUseId","toString","useId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridFilterInputValue","applyValue","focusElementRef","tabIndex","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","filterDebounceMs","newItem","fromInput","baseTextField","label","getLocaleText","placeholder","inputProps","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","replace","clamp","min","max","range","from","to","isDeepEqual","entriesA","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","hasOwnProperty","call","deepClone","obj","structuredClone","JSON","parse","stringify","_excluded2","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","parser","ignoreDiacritics","newFilterItem","filterOperator","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","Boolean","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","InputComponent","filterItemValue","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","renderEditDateCell","throwIfNotDateObject","columnType","rowId","GRID_DATE_COL_DEF","gridDateFormatter","getRowId","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","gridDateTimeFormatter","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","GridBooleanCellRaw","Icon","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","baseCheckbox","BooleanOperatorContainer","GridFilterInputBoolean","labelProp","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","valueAsBoolean","toLowerCase","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","mapEventPropToEvent","eventProp","ClickAwayListener","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","getReactNodeRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","GridMenuRoot","Popper","menu","modal","GridMenu","onExited","savedFocusRef","document","activeElement","HTMLElement","anchorEl","placement","TransitionProps","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","handleButtonClick","onClick","onKeyDown","getNewIndex","direction","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","unwrappedGroupingModel","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","offset","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridFilteredRowsLookupSelector","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","useGridVirtualScroller","outerSize","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","buffer","bufferForDirection","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","currentPageTotalHeight","useRunOnce","condition","effect","didRun","initialRenderContext","getRows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","offsetTop","focusedColumnIndex","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","inner","GridOverlays","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","Main","Memoized","rowsLength","minimumSize","scrollbarHeight","expandedHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","useGridOverlays","visibleRowCount","noRows","loadingOverlay","TopContainer","GridHeaders","Overlays","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","GridContextProvider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","info","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","add","getSnapshot","SYMBOL_API_PRIVATE","useGridApiInitialization","inputApiRef","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","_typeof","iterator","toPropertyKey","r","toPrimitive","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","element","getCellElement","input","querySelector","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","indeterminateCheckboxAction","indeterminate","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","groupId","mainHeaderRow","writeToClipboardPolyfill","data","span","createElement","textContent","body","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","ctrlKey","metaKey","shiftKey","altKey","selectionEnd","selectionStart","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","mergeColumnsState","densityStateInitializer","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","getRowsToExport","csv","blob","extension","fullName","title","HTMLAnchorElement","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","disableToolbarButton","getDerivedPaginationModel","paginationState","paginationModelProp","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","matchMedia","mql","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","isPrintableKey","isNavigationKey","isPasteShortcut","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","rowSpanHiddenCells","nextRowIndex","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","rowIndexBefore","checkIfCanStartEditing","paginationStateInitializer","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","restoredPaginationMeta","stateToRestore","useGridPaginationModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","handlePaginationModelChange","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","parent","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","scrollIntoView","elementBottom","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","errorShown","rootDimensionsRef","dimensionsState","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","lastArgs","wait","later","throttled","throttle","resizeThrottleMs","previousSize","setDimensions","computedStyle","defaultView","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","getUnit","match","toUnitless","getSkeletonUtilityClass","pulseKeyframe","waveKeyframe","pulseAnimation","waveAnimation","SkeletonRoot","hasChildren","fitContent","heightAuto","radiusUnit","radiusValue","Skeleton","bg","WebkitMaskImage","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","icon","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","Badge","badgeContent","overlap","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","footerRowCount","paginationElement","hideFooterPagination","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedPosition","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","header","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","parseInt","GridSkeletonLoadingOverlay","forwardedRef","viewportHeight","skeletonRowsCount","totalWidth","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","delta","pinnedCells","LOADING_VARIANTS","CircularProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","Toolbar","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPageIconDefault","LastButtonIcon","lastButtonIcon","LastPageIconDefault","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","tablePaginationClasses","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","ActionsComponent","TablePaginationActions","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","pageSizeOptions","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","wrapLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","upsertFilterItem","applyFilterLogicOperator","setFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","upsertFilterItems","shouldCloseFilterPanel","deleteFilterItem","hideFilterPanel","handleRemoveAll","setFilterModel","baseButton","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","sortedColumns","toggleColumn","setColumnVisibility","togglableColumns","togglableSortedColumns","toggleAllColumns","isVisible","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","hidePreferences","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","rowSpan","cellStyle","isLeftPinned","isRightPinned","side","focusableElement","elementToFocus","getScrollPosition","handleFocus","onFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","getRowIndexRelativeToVisibleRows","unstable_setLastMeasuredRowIndex","resizeObserver","borderBoxSize","blockSize","contentRect","unstable_storeRowHeightMeasurement","publishClick","disableColumnReorder","rowReordering","unstable_getRowInternalSizes","numberOfBaseSizes","maximumSize","baseCenter","rowStyle","spacingTop","rowSpacingType","spacingBottom","property","propertyValue","rowClassNames","getRowClassName","indexRelativeToCurrentPage","getCell","indexRelativeToAllColumns","cellProps","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","hideColumnMenu","labelledby","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","scrollWidth","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","disableColumnResize","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","showColumnVerticalBorder","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onBlur","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","disableColumnSorting","disableColumnFilter","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","autoFocus","GridColumnMenuHideItem","disableColumnSelector","ListItemIcon","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","showPreferences","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","sortColumn","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","showFilterPanel","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","useGridColumnMenuSlots","Component","otherProps","GridColumnMenu","GridNoResultsOverlay","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","MUICheckbox","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","toggleFilter","GridColumnHeaders","noResultsOverlay","noRowsOverlay","filterPanel","columnsPanel","useProps","allProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","throttleRowsMs","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableDensitySelector","disableRowSelectionOnClick","filterMode","keepNonExistentRowsSelected","rowPositionsDebounceMs","sortingMode","unstable_rowSpanning","useDataGridProps","themedProps","useThemeProps","overrides","computeSlots","injectDefaultProps","rowsMetaStateInitializer","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","isResized","needsFirstMeasurement","existingBaseRowHeight","rowHeightFromUser","initialHeights","processedSizes","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounced","debounce","storeMeasuredRowHeight","needsHydration","setLastMeasuredRowIndex","resetRowHeights","rowsMetaPrivateApi","unstable_setRowHeight","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","iconContainer","menuContainer","paddingWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","updateProperty","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","findGroupHeaderElementsFromField","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","userOptions","unstable_setColumnVirtualization","newColumns","total","remainingWidth","widthPerColumn","updateColumns","passive","onColumnResize","onColumnWidthChange","isRowRangeUpdated","range1","range2","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","spannedRowId","spannedRowIndex","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","getAllRowIds","isStateControlled","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","columnVisibilityModelToImport","preferencePanelPreProcessing","ColumnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","getRowGroupChildren","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","useGridColumnSpanning","useGridColumnGrouping","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","doNotHidePanel","hidePreferencesDelayed","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","itemIndex","existingItems","itemToDelete","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridScroll","colRef","scrollCoordinates","cellWidth","elementIndex","targetOffsetHeight","showColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","accessibleRowCount","pinnedRowsCount","selectedIdsLookup","ariaRowIndex","DataGridRaw","GridBody","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes"],"sourceRoot":""}