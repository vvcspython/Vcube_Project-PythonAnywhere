{"version":3,"file":"static/js/8916.6ce61a69.chunk.js","mappings":"8NAGA,MAiDA,EAjDqBA,IAA6H,IAA5H,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,SAAEC,EAAQ,UAAEC,EAAS,UAAEC,EAAS,aAAEC,EAAY,aAAEC,EAAY,kBAAEC,EAAiB,cAAEC,GAAeV,EACxI,MAAOW,EAAQC,IAAYC,EAAAA,EAAAA,WAAS,IAEpCC,EAAAA,EAAAA,YAAU,KACNF,EAAUX,EAAK,GACjB,CAACA,IAEH,MAAMc,EAAcA,KAChBH,GAAU,GACVN,GAAU,EAAM,EAgBtB,OACEU,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACHhB,KAAMU,EACNO,QAASH,EACTI,GAAI,CAACC,OAAS,OAAOC,SAAA,EAErBC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SACXnB,KAEDoB,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACdC,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CAAAJ,SACjBlB,OAGDa,EAAAA,EAAAA,MAACU,EAAAA,EAAa,CAAAL,SAAA,EACdC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,QAASb,EAAYM,SAAC,YAC9BC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,QA9BSC,KACjBtB,GAAa,GACI,SAAdF,EACCI,GAAkB,GACC,UAAdJ,EACLG,IACkB,WAAbJ,EACLM,GAAc,GACI,sBAAbN,GACLI,IAEJO,GAAa,EAmBkBe,QAAQ,YAAWT,SAC7CjB,SAGA,C,2VCvCb,MAoVA,EApVqBJ,IAAmK,IAAlK,aAAE+B,EAAY,gBAAEC,EAAe,WAAEC,EAAU,cAAEC,EAAa,WAAEC,EAAU,mBAAEC,EAAkB,cAAEC,EAAa,aAAEC,EAAY,KAAEC,EAAI,eAAEC,EAAc,YAAEC,GAAazC,EAC9K,MAAM,eAAE0C,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,IAChC,oBAAEC,IAAwBF,EAAAA,EAAAA,YAAWG,EAAAA,IACpCC,EAAWC,IAAgBnC,EAAAA,EAAAA,UAAS,KACpCoC,EAAOC,IAAYrC,EAAAA,EAAAA,UAAS,OAC5BsC,EAAMC,IAAWvC,EAAAA,EAAAA,UAAS,OAC1BwC,EAAOC,IAAYzC,EAAAA,EAAAA,UAAS,OAC5B0C,EAAOC,IAAY3C,EAAAA,EAAAA,UAAS,OAC5B4C,EAAYC,IAAiB7C,EAAAA,EAAAA,UAAS,OACtC8C,EAAQC,IAAa/C,EAAAA,EAAAA,UAAS,OAC9BgD,EAAQC,KAAajD,EAAAA,EAAAA,UAAS,OAC9BkD,GAAOC,KAAYnD,EAAAA,EAAAA,UAAS,OAC5BoD,GAAUC,KAAerD,EAAAA,EAAAA,UAAS,OAClCsD,GAAQC,KAAavD,EAAAA,EAAAA,UAAS,OAC9BwD,GAAMC,KAAWzD,EAAAA,EAAAA,UAAS,OAC1B0D,GAAUC,KAAe3D,EAAAA,EAAAA,WAAS,IAClC4D,GAAUC,KAAe7D,EAAAA,EAAAA,WAAS,IAClC8D,GAAUC,KAAe/D,EAAAA,EAAAA,WAAS,IAWzCC,EAAAA,EAAAA,YAAU,KATQ+D,WAChB,MAAMC,QAAYpC,EAAeF,GAC7BsC,GAAOA,EAAIC,QACb3C,EAAmB,QAAQ0C,EAAIC,SACxBC,MAAMC,QAAQH,IAAQA,EAAII,OAAS,GAC1ClC,EAAa8B,EACf,EAIAK,EAAW,GACX,IAEF,MAAMC,IAAsBC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC1CC,KAAM,gBACNC,SAAU,aACVC,OAAQ,EACRC,SAAU,SACVC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,WAAY,SACZC,MAAO,KAGThF,EAAAA,EAAAA,YAAU,KACNkD,GAASjC,EAAagE,OAAS,MAC/B7C,EAASnB,EAAaiE,WAAa,MACnC5C,EAAQrB,EAAakE,MAAQ,MAC7BzC,EAASzB,EAAamE,OAAS,MAC/BxC,EAAc3B,EAAaoE,gBAAkB,MAC7C7C,EAASvB,EAAaqE,OAAS,MAC/BxC,EAAU7B,EAAasE,QAAU,MACjCnC,GAAYnC,EAAauE,UAAY,MACrClC,GAAUrC,EAAawE,QAAU,MACjCzC,GAAU/B,EAAayE,QAAU,MACjClC,GAAQvC,EAAa0E,MAAQ,KAAK,GACpC,CAAC1E,IAEH,MAAM2E,GAAmBA,CAACC,EAAOC,KAC/B,MAAMC,EAAOF,EAAMG,OAAOC,MAAM,GACtB,UAATH,EAAoBlC,IAAY,GAAQE,IAAY,GACrDoC,YAAW,KACT,GAAIH,EACF,IAAIA,EAAKI,KAAI,SAAkBC,QAAQ,IAAM,EAAE,CAC7C,GAAY,WAATN,EAAkB,CACnB1E,EAAc2E,EAAK1D,MACnB,MAAMgE,EAAYN,EAAK1D,KAAKiE,MAAM,KAC5BC,EAAgBF,EAAUA,EAAUjC,OAAS,GACnD,GAAuB,QAAlBmC,GAA6C,QAAlBA,GAA6C,SAAlBA,EAGzD,OAFAvD,GAAU,WACV1B,EAAmB,QAAQ,qCAG/B,MAAM,GAAY,UAATwE,IACHU,GAAgBC,SAASV,EAAKD,MAEhC,YADAxE,EAAmB,QAAQ,gCAI/B,MAAMoF,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACP,UAATd,EAAoB5C,GAASwD,EAAOG,QAAU7D,GAAU0D,EAAOG,OAAO,EAEzEH,EAAOI,cAAcf,EACzB,MACEzE,EAAmB,QAAQ,iFAG/BsC,IAAY,GACZE,IAAY,EAAM,GAChB,IAAK,EAGHiD,GAAmBC,IACvB,MAAMC,EAAQD,GAAYA,EAASE,WACnC,SAAIzD,IAAawD,QACbA,GAAWA,EAAME,WAAW,MAAQF,EAAME,WAAW,MAAQF,EAAME,WAAW,MAAQF,EAAME,WAAW,UACxGF,GAA0B,KAAjBA,EAAM7C,QACN,EAGRoC,GAAkB,CAAC,aAAc,YAAa,YAAa,aAAc,YAAa,aAAc,aAAc,iBAkClHY,GAAWA,KAcflG,EAba,CACX+D,MAAQhC,GACRiC,UAAY/C,EACZgD,KAAO9C,EACP+C,MAAQ3C,EACR4C,eAAiB1C,EACjB2C,MAAQ/C,EACRgD,OAAS1C,EACT2C,SAAWrC,GACXsC,OAASpC,GACTqC,OAAS3C,EACT4C,KAAOpC,IAEY,EAGzB,OACErD,EAAAA,EAAAA,MAAAmH,EAAAA,SAAA,CAAA9G,SAAA,EACAL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,yEAAwEhH,SAAA,EACnFL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,uDAAsDhH,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAKgH,IAAKvE,IAAgB,6BAA8BwE,IAAI,GAAGzC,MAAM,QAAQuC,UAAU,wEACvFrH,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACjH,GAAI,CAAEqH,EAAG,EAAG9C,SAAU,WAAY+C,UAAY,MAAQJ,UAAU,0CAAyChH,SAAA,EAC9GL,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CACL+G,SAAUjE,GACVkE,UAAU,QACVC,UAAMC,EACNC,UAAW,EACXhH,QAAQ,YACRiH,UAAYhF,IAASzC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAkB,KAAM1H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAW,IAC1DC,MAAQ3E,KAAaR,GAAS,QAAWA,GAAS,UAAY,UAC9D5C,GAAI,CAAC2E,MAAO,OAAOzE,SAAA,CAEjB0C,GAAS,iBAAmB,gBAC9BzC,EAAAA,EAAAA,KAAC8D,GAAmB,CAACwB,KAAK,OAAOuC,OAAO,UAAUC,SAAWC,GAAI3C,GAAiB2C,EAAE,cAEnF5E,KACCnD,EAAAA,EAAAA,KAACgI,EAAAA,EAAgB,CACfrC,KAAM,GACN9F,GAAI,CACF+H,MAAO,UACPxD,SAAU,WACV6D,IAAK,MACL3D,KAAM,MACN6C,UAAW,QACXe,WAAY,kBAMpBxI,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,2BAA2BlH,GAAI,CAACsI,UAAY,QAAQpI,SAAA,EACjEL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC5DC,EAAAA,EAAAA,KAACoI,EAAAA,EAAa,CAACrB,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WAChE3I,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAAC9H,QAAQ,WAAWX,GAAI,CAAC2E,MAAQ,OAAOzE,SAAA,EACpDC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQ7G,EAAsB9B,GAAI,CAACwI,SAAW,OAAQT,MAAS3E,KAAatB,EAAS,UAAY,IAAI5B,SAAC,oBAClHC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACLC,SAAmB,YAATzH,EACV0H,MAAO1F,KAAatB,EACpB8E,MAAO9E,EACPmG,SAAWC,GAAInG,EAASmG,EAAEvC,OAAOiB,OACjC5G,GAAI,CAAC2E,MAAO,OACV,wBAAyB,CACzB6D,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SAEL0B,GAAaA,EAAUmC,OAAS,GAAKnC,EAAUoH,KAAKC,IACnD9I,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAOqC,EAAKpE,UAAU3E,SAAE+I,EAAKpE,iBAG3C1E,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,WAAW7H,SAAGkD,KAAatB,EAAS,eAAiB,YAIlFjC,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAACiJ,EAAAA,EAAY,CAAClC,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WAC3DrI,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACC,UAAQ,EAAC1C,MAAO5E,EAAMuF,SAAmB,YAATnG,EAAoB6G,SAAWC,GAAIjG,EAAQiG,EAAEvC,OAAOiB,OAAQkC,MAAO1F,KAAapB,EAAMuH,WAAYnG,KAAapB,EAAO,mBAAqB,GAAKwH,MAAM,YAAYxJ,GAAI,CAAC2E,MAAO,aAG5N9E,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAACsJ,EAAAA,EAAiB,CAACvC,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WAChErI,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACF,MAAM,+BAA+BjC,SAAmB,YAATnG,EAAoBwF,MAAOxE,EAAO6F,SAAWC,GAAI7F,EAAS6F,EAAEvC,OAAOiB,OAAQkC,MAAOpC,GAAgBtE,IAAWA,GAASE,GAAcF,IAAUE,EACxMiH,WAAY7C,GAAgBtE,GAAS,yBAA4BA,GAASE,GAAcF,IAAUE,EAAc,gDAAkD,GAAIgH,UAAQ,EAACtJ,GAAI,CAAC2E,MAAO,aAG7L9E,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAACsJ,EAAAA,EAAiB,CAACvC,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WAClErI,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACF,MAAM,uBAAuB5C,MAAOtE,EAAY2F,SAAWC,GAAI3F,EAAc2F,EAAEvC,OAAOiB,OAAQkC,MAAOpC,GAAgBpE,IAAgBF,GAASE,GAAcF,IAAUE,EACjLiH,WAAY7C,GAAgBpE,GAAc,mCAAsCF,GAASE,GAAcF,IAAUE,EAAc,gDAAkD,GAAIgH,UAAQ,EAACtJ,GAAI,CAAC2E,MAAO,aAG5M9E,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAACwJ,EAAAA,EAAY,CAACzC,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WAC7DrI,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACzC,MAAO1E,EAAOqF,SAAmB,YAATnG,EAAoB6G,SAAWC,GAAI/F,EAAS+F,EAAEvC,OAAOiB,OAAQkC,MAAQ1F,KAAalB,GAAWA,IAAUA,EAAMkE,SAAS,KAAOmD,WAAanG,KAAalB,GAAWA,IAAUA,EAAMkE,SAAS,KAAQ,mBAAqB,GAAIkD,UAAQ,EAACE,MAAM,QAAQxJ,GAAI,CAAC2E,MAAO,aAGnS9E,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAACyJ,EAAAA,EAAS,CAAC1C,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WACxD3I,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAAC9H,QAAQ,WAAWX,GAAI,CAAC2E,MAAQ,OAAOzE,SAAA,EACpDC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQnG,EAAuBxC,GAAI,CAACwI,SAAW,OAAQT,MAAS3E,KAAaZ,EAAU,UAAY,IAAItC,SAAC,qBACpHL,EAAAA,EAAAA,MAAC+I,EAAAA,EAAM,CACLE,MAAO1F,KAAaZ,EACpBoE,MAAOpE,EACPyF,SAAWC,GAAIzF,EAAUyF,EAAEvC,OAAOiB,OAClC5G,GAAI,CAAC2E,MAAO,OACV,wBAAyB,CACzB6D,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SAAA,EAENC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,OAAM1G,SAAC,UACvBC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,SAAQ1G,SAAC,eAE3BC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,WAAW7H,SAAGkD,KAAaZ,EAAU,gBAAkB,YAItF3C,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKgH,IAAI,4BAA4BC,IAAI,GAAGF,UAAU,OAAOvC,MAAM,UACnExE,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACzC,MAAO9D,GAAUmF,SAAWC,GAAInF,GAAYmF,EAAEvC,OAAOiB,OAAQ0C,UAAQ,EAACE,MAAM,eAAeV,MAAQ1F,KAAaN,IAAcA,KAAaA,GAASgE,WAAW,YAAcyC,WAAanG,KAAaN,IAAcA,KAAaA,GAASgE,WAAW,YAAe,2BAA6B,GAAI9G,GAAI,CAAC2E,MAAO,aAG9T9E,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKgH,IAAI,0BAA0BC,IAAI,GAAGF,UAAU,OAAOvC,MAAM,UACjExE,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACzC,MAAO5D,GAAQiF,SAAWC,GAAIjF,GAAUiF,EAAEvC,OAAOiB,OAAQkC,MAAO9F,KAAWA,GAAO8D,WAAW,YAAayC,WAAYvG,KAAWA,GAAO8D,WAAW,YAAc,yBAA2B,GAAI0C,MAAM,aAAaxJ,GAAI,CAAC2E,MAAO,aAG3O9E,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,gDAA+ChH,SAAA,EAC9DC,EAAAA,EAAAA,KAACyJ,EAAAA,EAAS,CAAC1C,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,WACxD3I,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAAC9H,QAAQ,WAAWX,GAAI,CAAC2E,MAAQ,OAAOzE,SAAA,EACpDC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQzF,GAAqBlD,GAAI,CAACwI,SAAW,OAAQT,MAAS3E,KAAaF,GAAQ,UAAY,IAAIhD,SAAC,yBAChHL,EAAAA,EAAAA,MAAC+I,EAAAA,EAAM,CACLE,MAAO1F,KAAaF,GACpB0D,MAAO1D,GACP+E,SAAWC,GAAI/E,GAAQ+E,EAAEvC,OAAOiB,OAChC5G,GAAI,CAAC2E,MAAO,OACV,wBAAyB,CACzB6D,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SAAA,EAENC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,UAAS1G,SAAC,aAC1BC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,SAAQ1G,SAAC,eAE3BC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,WAAW7H,SAAGkD,KAAaZ,EAAU,cAAgB,YAGtF3C,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,yDAAwDhH,SAAA,EACrEL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACjH,GAAI,CAAEqH,EAAG,EAAG9C,SAAU,YAAa2C,UAAU,0CAAyChH,SAAA,EACzFL,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CAAC+G,SAAU/D,GAAUoE,UAAYlF,GAAUvC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAkB,KAAM1H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAW,IAAKC,MAAQrF,EAAU,UAAaU,KAAaV,EAAU,QAAU,UAC5J8E,UAAU,QAAQC,UAAMC,EAAWC,UAAW,EAAGhH,QAAQ,YAAYX,GAAI,CAAC2E,MAAQ,MAAMkF,aAAgB/I,EAAc,MAAQ,IAAKuD,OAAS,QAAQnE,SAAA,EACpJC,EAAAA,EAAAA,KAAC8D,GAAmB,CAACwB,KAAK,OAAOuC,OAAO,kBAAkBC,SAAWC,GAAI3C,GAAiB2C,EAAE,YAC1FxF,EAAU,kBAAoB,mBAC/Bc,KACCrD,EAAAA,EAAAA,KAACgI,EAAAA,EAAgB,CACfrC,KAAM,GACN9F,GAAI,CACF+H,MAAO,UACPxD,SAAU,WACV6D,IAAK,MACL3D,KAAM,MACN6C,UAAW,QACXe,WAAY,cAKV,YAATjH,GAAsBsB,GAAUvC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAI,CAACC,KAAMrH,EAAQiD,OAAO,SAAQzF,SAAC,UACpEC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAA9J,SACTY,IACCA,EAAWmJ,SAAS,SACpBnJ,EAAWmJ,SAAS,SACpBnJ,EAAWmJ,SAAS,UAEpBnJ,EACE,iBAMdjB,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,4BAA2BhH,SAAA,EACtCC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACR,GAAI,CAACkK,WAAuB,YAAT9I,GAAsBE,EAAe,SAAW,WAAYb,QAASA,KAAKU,EAAa,QAAQD,GAAc,EAAK,EAAEhB,SAAC,UAGhJC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACG,QAAQ,YAAYwJ,SAAShK,EAAAA,EAAAA,KAACiK,EAAAA,EAAY,IAClD3J,QAnOiBiD,UAEnB,GADAL,IAAY,IACRnB,IAAUE,EAAM,OAClB,MAAMiI,QAAa3I,EAAoBQ,EAAMb,GACvCiJ,QAAa5I,EAAoBU,EAAMf,IAC5CC,KAAgC,IAAhB+I,EAAKE,SAAoC,IAAhBD,EAAKC,QAChC,MAAdF,EAAKG,MAA8B,MAAdH,EAAKG,MAA8B,MAAdH,EAAKG,MACjC,MAAdF,EAAKE,MAA8B,MAAdF,EAAKE,MAA8B,MAAdF,EAAKE,OAgBzB,IAAhBH,EAAKE,SAAoC,IAAhBD,EAAKC,OACrCtJ,EAAmB,QAAQ,kDACJ,IAAhBoJ,EAAKE,SAAmC,IAAhBD,EAAKC,UACjB,IAAhBF,EAAKE,QAAgBtJ,EAAmB,QAAQ,uDAChC,IAAhBqJ,EAAKC,QAAgBtJ,EAAmB,QAAQ,uDAlBjD2B,IACAF,GACAZ,GACAE,IACC0E,GAAgBtE,KAChBsE,GAAgBpE,IACjBJ,GAASA,EAAMkE,SAAS,MACxBtD,GAASgE,WAAW,aACpB1E,IAAUE,GACVY,KAEA6D,KACA/F,IAOJ,EAuMwBd,SACrB,cAIF,E,wICnVP,MA+aA,EA/ayBrB,IAA8H,IAA7H,WAAE4L,EAAU,WAAEzJ,EAAU,WAAE0J,EAAU,cAAEC,EAAa,cAAEC,EAAa,iBAAEC,EAAgB,mBAAE5J,EAAkB,YAAEK,GAAazC,EAC7I,MAAOiM,EAAUC,IAAerL,EAAAA,EAAAA,UAAS,OAClCsL,EAAUC,IAAevL,EAAAA,EAAAA,UAAS,OAClCwL,EAAYC,IAAiBzL,EAAAA,EAAAA,UAAS,OACtC0L,EAAUC,IAAe3L,EAAAA,EAAAA,UAAS,OAClC4L,EAAUC,IAAe7L,EAAAA,EAAAA,UAAS,OAClC8L,EAAoBC,IAAyB/L,EAAAA,EAAAA,UAAS,OACtDgM,EAAgBC,IAAqBjM,EAAAA,EAAAA,UAAS,OAC9CkM,EAAeC,IAAoBnM,EAAAA,EAAAA,UAAS,OAC5CoM,EAAYC,IAAiBrM,EAAAA,EAAAA,UAAS,OACtCsM,EAAYC,IAAiBvM,EAAAA,EAAAA,UAAS,OACtCwM,GAAsBC,KAA2BzM,EAAAA,EAAAA,UAAS,OAC1D0M,GAAaC,KAAkB3M,EAAAA,EAAAA,UAAS,OACxC4M,GAAiBC,KAAsB7M,EAAAA,EAAAA,UAAS,OAChD8M,GAAgBC,KAAqB/M,EAAAA,EAAAA,UAAS,OAC9CgN,GAAQC,KAAajN,EAAAA,EAAAA,UAAS,OAC9BkN,GAAQC,KAAanN,EAAAA,EAAAA,UAAS,OAC9BoN,GAAkBC,KAAuBrN,EAAAA,EAAAA,UAAS,OAClDsN,GAASC,KAAcvN,EAAAA,EAAAA,UAAS,OAChCwN,GAAaC,KAAkBzN,EAAAA,EAAAA,UAAS,OACxC0N,GAAYC,KAAiB3N,EAAAA,EAAAA,UAAS,OACtC4N,GAASC,KAAc7N,EAAAA,EAAAA,UAAS,UAChC8N,GAAUC,KAAe/N,EAAAA,EAAAA,UAAS,OAClCgO,GAAUC,KAAejO,EAAAA,EAAAA,WAAS,IAClCkO,GAAiBC,KAAsBnO,EAAAA,EAAAA,WAAS,GAEjDoO,IAAc,IAAIC,MAAOC,cACzBC,GAAQpK,MAAMqK,KAAK,CAAEnK,OAAQ,KAAM,CAACoK,EAAGC,IAAUN,GAAcM,IAE/DC,GAAgBC,IAClBb,GAAYa,EAAM,GAGtB3O,EAAAA,EAAAA,YAAU,KACNoL,EAAYH,EAAc2D,kBAC1BtD,EAAYL,EAAc4D,UAC1BrD,EAAcP,EAAc6D,iBAC5BpD,EAAYT,EAAc8D,oBAC1BnD,EAAYX,EAAc+D,YAC1BlD,EAAsBb,EAAcgE,sBACpCjD,EAAkBf,EAAciE,kBAChChD,EAAiBjB,EAAckE,mBAC/B/C,EAAcnB,EAAcmE,qBAC5B1C,GAAezB,EAAcoE,sBAC7B7C,GAAwBvB,EAAcqE,uBACtChD,EAAcrB,EAAcsE,aAC5B3C,GAAmB3B,EAAcuE,mBACjC1C,GAAkB7B,EAAcwE,oBAC7B1E,IACCiC,GAAU/B,EAAcyE,iBACxBpC,GAAWrC,EAAc0E,kBACzBvC,GAAoBnC,EAAc2E,mBAClC1C,GAAUjC,EAAc4E,SACxBrC,GAAevC,EAAc6E,eAC7BpC,GAAczC,EAAc8E,gBAChC,GACF,CAAC9E,EAAeF,IAElB,MAAM3D,GAAWA,KACb,MAAMkC,EAAO,CACTsF,iBAAmBzD,EACnB0D,SAAWxD,EACXyD,gBAAkBvD,EAClBwD,mBAAqBtD,EACrBwD,qBAAuBpD,EACvBmD,WAAarD,EACbuD,iBAAmBnD,EACnBoD,kBAAoBlD,EACpBmD,oBAAsBjD,EACtBkD,qBAAuB5C,GACvB6C,sBAAwB/C,GACxBgD,YAAclD,EACdmD,kBAAoB7C,GACpB8C,mBAAqB5C,IAEzB,GAAG9B,EAAW,CACV,MAAMiF,EAAS,CACXN,gBAAkB3C,GAClB4C,iBAAmBtC,GACnBuC,kBAAoBzC,GACpB0C,QAAU5C,GACV6C,cAAgBvC,GAChBwC,eAAiBtC,IAEfwC,EAAO,IAAI3G,KAAS0G,GAC1B9E,EAAiB+E,EACrB,MACI/E,EAAiB5B,EACpB,EAUC4G,GAAeA,IACdC,SAASpE,GAAkBoE,SAAS5E,KAAgB,IACpD4E,SAASxD,IAAmBwD,SAASlE,KAAmB,KACxDlB,GACIoF,SAAS5C,IAAe4C,SAAStD,MAAoB,IAK1DuD,GAAcA,IAEZjF,GAAYE,GAAYE,GACxBU,GAAiBF,GACjBF,GAAsBJ,GACtBE,GAAYQ,GACZM,IAAeF,IACfI,IAAmBE,IACnBR,KAAgBtB,GAAegC,IAAUI,IAAoBM,IAAcF,IAAeF,IAAWJ,IAK/G,OACE/M,EAAAA,EAAAA,MAAAmH,EAAAA,SAAA,CAAA9G,SAAA,EACAL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,cAAclH,GAAI,CAACgQ,YAAc,OAAO9P,SAAA,EACnDL,EAAAA,EAAAA,MAACoQ,EAAAA,EAAS,CAACzC,SAAuB,WAAbA,GAAuBvF,SAAUA,IAAIoG,GAA0B,WAAbb,GAAwB,KAAO,UAAWtG,UAAW,KAAIwG,IAAcxC,GAAeJ,GAAaE,EAAiD,iCAApC,mCAAuE9K,SAAA,EAC9PL,EAAAA,EAAAA,MAACqQ,EAAAA,EAAgB,CACfC,YAAYhQ,EAAAA,EAAAA,KAACiQ,EAAAA,EAAU,IACvB,gBAAc,iBAAgBlQ,SAAA,EAE5BC,EAAAA,EAAAA,KAACkQ,EAAAA,EAAM,CAACnJ,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQwH,YAAc,SACxE7P,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAACrJ,QAAQ,KAAIT,SAAC,8BAE7BL,EAAAA,EAAAA,MAACyQ,EAAAA,EAAgB,CAACpJ,UAAU,wDAAuDhH,SAAA,EAC/EC,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAAEnC,UAAU,UAAUzB,KAAK,OAAOqD,MAAO4E,KAAa5C,EAAUvB,WAAamE,KAAa5C,EAAY,oBAAsB,GAAIlE,MAAOkE,EAAU7C,SAAWC,GAAI6C,EAAY7C,EAAEvC,OAAOiB,OAAQjG,QAAQ,WAAW2I,UAAQ,EAACE,MAAM,sBAC1OrJ,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACxC,UAAU,UAAU4B,MAAO4E,KAAa1C,EAAUzB,WAAamE,KAAa1C,EAAY,aAAe,GAAIpE,MAAOoE,EAAU/C,SAAWC,GAAI+C,EAAY/C,EAAEvC,OAAOiB,OAAQ0C,UAAQ,EAACE,MAAM,eACpM3J,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAShH,SAAA,EAChCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQuC,EAA2BlL,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,KAAaxC,EAAc,UAAY,IAAIhL,SAAC,sBAClJC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACHU,UAAQ,EACR1C,MAAOsE,EACPpC,MAAO4E,KAAaxC,EACpBjD,SAAWC,GAAIiD,EAAcjD,EAAEvC,OAAOiB,OACtCjG,QAAQ,WACRX,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SACP+N,GAAMjF,KAAKuH,IACZpQ,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,OAKjB7C,KAAaxC,IAAe/K,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,UAAUM,WAAa,KAAKnI,SAAC,kCAM5FL,EAAAA,EAAAA,MAACoQ,EAAAA,EAAS,CAACzC,SAAuB,WAAbA,GAAuBvF,SAAUA,IAAIoG,GAA0B,WAAbb,GAAwB,KAAO,UAAWtG,UAAW,KAAIwG,IAAc9B,GAAkBF,GAAmBN,GAAaE,EAAiD,iCAApC,mCAAuEpL,SAAA,EAChRL,EAAAA,EAAAA,MAACqQ,EAAAA,EAAgB,CAACC,YAAYhQ,EAAAA,EAAAA,KAACiQ,EAAAA,EAAU,IAAIlQ,SAAA,EACzCC,EAAAA,EAAAA,KAACkQ,EAAAA,EAAM,CAACnJ,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQwH,YAAc,SACxE7P,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAACrJ,QAAQ,KAAIT,SAAC,8BAE7BL,EAAAA,EAAAA,MAACyQ,EAAAA,EAAgB,CAAApQ,SAAA,EACjBL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,SAAQhH,SAAA,EACnBC,EAAAA,EAAAA,KAACqQ,EAAAA,EAAgB,CACjB1H,MAAoB,UAAZwE,IAAmC,YAAZA,GAC/B9D,MAAM,QACNiH,SAAStQ,EAAAA,EAAAA,KAACuQ,EAAAA,EAAQ,CAACpH,UAAQ,EAACqH,gBAAc,EAACC,QAAsB,UAAZtD,GAAqCrF,SAAWC,GAAKA,EAAEvC,OAAOiL,QAAUrD,GAAW,SAAWA,GAAW,gBAE9JpN,EAAAA,EAAAA,KAACqQ,EAAAA,EAAgB,CACjB1H,MAAoB,UAAZwE,IAAmC,YAAZA,GAC/B9D,MAAM,UACNiH,SAAStQ,EAAAA,EAAAA,KAACuQ,EAAAA,EAAQ,CAACpH,UAAQ,EAACsH,QAAsB,YAAZtD,GAAuCrF,SAAWC,GAAKA,EAAEvC,OAAOiL,QAAUrD,GAAW,WAAaA,GAAW,iBAIvJ1N,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,wDAAuDhH,SAAA,EAClEC,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAO,GAAG8D,kBAAwB1G,MAAOwE,EAAUnD,SAAWC,GAAImD,EAAYnD,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAatC,EAAU7B,WAAYmE,KAAatC,EAAW,qBAAuB,GAAI9B,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aAC9O/G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAO,GAAG8D,oBAA0B1G,MAAO4E,EAAoBvD,SAAWC,GAAIuD,EAAsBvD,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAalC,EAAoBjC,WAAYmE,KAAalC,EAAqB,uBAAyB,GAAIlC,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aAC1R/G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACJ,UAAQ,EAACE,MAAO,GAAG8D,UAAgB1G,MAAO0E,EAAUrD,SAAWC,GAAIqD,EAAYrD,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAapC,EAAU/B,WAAYmE,KAAapC,EAAW,uBAAyB,GAAIpE,UAAU,aACtNrH,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAShH,SAAA,EAChCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQ+C,EAA+B1L,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,KAAahC,EAAkB,UAAY,IAAIxL,SAAE,oBAC3JC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACHhC,MAAO8E,EACPzD,SAAWC,GAAIyD,EAAkBzD,EAAEvC,OAAOiB,OAC1CjG,QAAQ,WACRmI,MAAO4E,KAAahC,EACpB1L,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SACP+N,GAAMjF,KAAKuH,IACR,GAAGT,SAASS,IAAST,SAAS5E,GAC9B,OACA/K,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,EAEJ,MAIjB7C,KAAahC,IAAmBvL,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,UAAWM,WAAa,KAAKnI,SAAC,0BAG7FL,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAShH,SAAA,EAChCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQiD,EAA8B5L,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,KAAa9B,EAAiB,UAAY,IAAI1L,SAAC,sBACxJC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACHhC,MAAOgF,EACP3D,SAAWC,GAAI2D,EAAiB3D,EAAEvC,OAAOiB,OACzCjG,QAAQ,WACRmI,MAAO4E,KAAa9B,EACpB5L,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SACP+N,GAAMjF,KAAKuH,IACR,GAAGT,SAASS,GAAQT,SAASpE,GAC7B,OACAvL,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,EAEJ,MAIjB7C,KAAa9B,IAAkBzL,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,UAAUM,WAAa,KAAKnI,SAAC,wCAOnGL,EAAAA,EAAAA,MAACoQ,EAAAA,EAAS,CAACzC,SAAuB,WAAbA,GAAuBvF,SAAUA,IAAIoG,GAA0B,WAAbb,GAAwB,KAAO,UAAWtG,UAAW,KAAIwG,IAAclB,IAAmBF,IAAoBF,IAAgBF,IAAyBJ,GAAeE,EAAmD,iCAApC,mCAAuE9L,SAAA,EAC/TL,EAAAA,EAAAA,MAACqQ,EAAAA,EAAgB,CAACC,YAAYhQ,EAAAA,EAAAA,KAACiQ,EAAAA,EAAU,IAAIlQ,SAAA,EACzCC,EAAAA,EAAAA,KAACkQ,EAAAA,EAAM,CAACnJ,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQwH,YAAc,SACxE7P,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAACrJ,QAAQ,KAAIT,SAAC,iCAE7BC,EAAAA,EAAAA,KAACmQ,EAAAA,EAAgB,CAAApQ,UACjBL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACjH,GAAI,CAAC6J,aAAe,MAAO3C,UAAU,mDAAkDhH,SAAA,EACxFL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,oDAAmDhH,SAAA,EAClEC,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAM,gCAAgC5C,MAAOkF,EAAY7D,SAAWC,GAAI6D,EAAc7D,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAatB,GAAa7C,WAAamE,KAAatB,GAAe,qBAAuB,GAAI9C,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aAC9P/G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAM,kCAAkC5C,MAAOsF,GAAsBjE,SAAWC,GAAIiE,GAAwBjE,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAaxB,GAAsB3C,WAAamE,KAAaxB,GAAwB,uBAAyB,GAAI5C,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aACxS/G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAM,oCAAoC5C,MAAOwF,GAAanE,SAAWC,GAAImE,GAAenE,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAatB,GAAa7C,WAAamE,KAAatB,GAAe,yBAA2B,GAAI9C,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aACxQ/G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACJ,UAAQ,EAACE,MAAM,wBAAwBtC,UAAU,UAAUN,MAAOoF,EAAY/D,SAAWC,GAAI+D,EAAc/D,EAAEvC,OAAOiB,OAAQkC,MAAO4E,KAAa1B,EAAYzC,WAAamE,KAAa1B,EAAc,aAAe,SAEhOnM,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,0DAAyDhH,SAAA,EACxEL,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAShH,SAAA,EAChCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQ2D,GAAgCtM,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,KAAapB,GAAmB,UAAY,IAAIpM,SAAC,oBAC5JC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACHhC,MAAO0F,GACPrE,SAAWC,GAAIqE,GAAmBrE,EAAEvC,OAAOiB,OAC3CjG,QAAQ,WACRmI,MAAO4E,KAAapB,GACpBtM,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SACP+N,GAAMjF,KAAKuH,IACR,GAAGT,SAASS,IAAST,SAASlE,GAC9B,OACAzL,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,EAEJ,MAIjB7C,KAAapB,KAAoBnM,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAACqI,WAAa,IAAKN,MAAQ,WAAW7H,SAAC,0BAG9FL,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAShH,SAAA,EAChCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQ6D,GAA+BxM,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,KAAalB,GAAkB,UAAY,IAAItM,SAAC,sBAC1JL,EAAAA,EAAAA,MAAC+I,EAAAA,EAAM,CACHhC,MAAO4F,GACPvE,SAAWC,GAAIuE,GAAkBvE,EAAEvC,OAAOiB,OAC1CjG,QAAQ,WACRmI,MAAO4E,KAAalB,GACpBxM,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SAAA,EACRC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAO,qBAAqB1G,SAAC,uBAGtC+N,GAAMjF,KAAKuH,IACR,GAAGT,SAASS,GAAQT,SAASxD,IAC7B,OACAnM,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,EAEJ,OAIjB7C,KAAalB,KAAmBrM,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAACqI,WAAa,IAAKN,MAAQ,WAAW7H,SAAC,0CAQrGL,EAAAA,EAAAA,MAACoQ,EAAAA,EAAS,CAACzC,SAAuB,WAAbA,GAAuBvF,SAAUA,IAAIoG,GAA0B,WAAbb,GAAwB,KAAO,UAAWtG,UAAW,KAAKwG,KAAYhD,GAAiBwC,IAAgBE,IAAeJ,IAAYF,IAAqBJ,IAAWE,GAA+C,iCAApC,mCAAuE1M,SAAA,EACvTL,EAAAA,EAAAA,MAACqQ,EAAAA,EAAgB,CAACC,YAAYhQ,EAAAA,EAAAA,KAACiQ,EAAAA,EAAU,IAAIlQ,SAAA,EACzCC,EAAAA,EAAAA,KAACkQ,EAAAA,EAAM,CAACnJ,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQwH,YAAc,SACxE7P,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAACrJ,QAAQ,KAAIT,SAAC,gCAE7BL,EAAAA,EAAAA,MAACyQ,EAAAA,EAAgB,CAAApQ,SAAA,EACjBC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAG,CAACC,UAAU,cAAahH,UACxBC,EAAAA,EAAAA,KAACqQ,EAAAA,EAAgB,CACjBhH,MAAM,kBACNiH,SAAStQ,EAAAA,EAAAA,KAACuQ,EAAAA,EAAQ,CAACE,UAASlG,EAA2BzC,SAAWC,IAC7DA,EAAEvC,OAAOiL,QAAUjG,EAAc,MAAQA,EAAc,MACrDrJ,GAAYL,EAAmB,UAAU,2KAA2K,QAI9NyJ,IAAe7K,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACjH,GAAI,CAAC6Q,OAAS,YAAa3J,UAAU,oDAAmDhH,SAAA,EACzGL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,oDAAmDhH,SAAA,EAClEC,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAM,kBAAkB5C,MAAO8F,GAAQzE,SAAWC,GAAIyE,GAAUzE,EAAEvC,OAAOiB,OAAQkC,MAAQ4E,IAAYhD,IAAegC,GAASpD,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aAC/K/G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAM,oBAAoB5C,MAAOkG,GAAkB7E,SAAWC,GAAI6E,GAAoB7E,EAAEvC,OAAOiB,OAAQkC,MAAQ4E,IAAYhD,IAAeoC,GAAmBxD,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aAC/M/G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACG,MAAM,WAAW5C,MAAOoG,GAAS/E,SAAWC,GAAI+E,GAAW/E,EAAEvC,OAAOiB,OAAQkC,MAAQ4E,IAAYhD,IAAesC,GAAU1D,UAAQ,EAAC3I,QAAQ,WAAWuG,UAAU,aAC3K/G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACJ,UAAQ,EAACE,MAAM,UAAUtC,UAAU,UAAUN,MAAOgG,GAAQ3E,SAAWC,GAAI2E,GAAU3E,EAAEvC,OAAOiB,OAAQkC,MAAQ4E,IAAYhD,IAAekC,SAGtJ/M,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,0DAAyDhH,SAAA,EACxEL,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,YAAWhH,SAAA,EAClCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQuE,GAA4BlN,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,IAAYhD,IAAewC,GAAe,UAAY,IAAIhN,SAAC,oBAClKC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACHhC,MAAOsG,GACPjF,SAAWC,GAAIiF,GAAejF,EAAEvC,OAAOiB,OACvCjG,QAAQ,WACRmI,MAAO4E,IAAYhD,IAAewC,GAClClN,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SACP+N,GAAMjF,KAAKuH,IACR,GAAGT,SAASS,IAAST,SAAStD,IAC9B,OACArM,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,EAEJ,MAIjB7C,IAAYhD,IAAewC,KAAgB/M,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,UAAWM,WAAa,KAAKnI,SAAC,0BAGxGL,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,YAAWhH,SAAA,EAClCC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQyE,GAA2BpN,GAAI,CAACwI,SAAW,OAAQH,WAAa,QAASN,MAAS2F,IAAYhD,IAAe0C,GAAc,UAAY,IAAIlN,SAAC,sBAChKL,EAAAA,EAAAA,MAAC+I,EAAAA,EAAM,CACHhC,MAAOwG,GACPnF,SAAWC,GAAImF,GAAcnF,EAAEvC,OAAOiB,OACtCjG,QAAQ,WACRmI,MAAO4E,IAAYhD,IAAe0C,GAClCpN,GAAI,CACA,wBAAyB,CACzBwI,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SAAA,EACRC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAO,qBAAqB1G,SAAC,uBAGtC+N,GAAMjF,KAAKuH,IACR,GAAGT,SAASS,GAAQT,SAAS1C,IAC7B,OACAjN,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAAYtC,MAAO2J,EAAKrQ,SAC5BqQ,GADUA,EAEJ,OAIjB7C,IAAYhD,IAAe0C,KAAejN,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,UAAWM,WAAa,KAAKnI,SAAC,8CASnHL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,4BAA2BhH,SAAA,EACtCC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,QAASA,KAAKgK,IAAa1D,IAAU,EAAE7G,SAAC,UAGhDC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACG,QAAQ,YAChBF,QAhUoBqQ,KACpBnD,IAAY,GACRoC,OACJhJ,KACA8I,KAAiB7O,IAAe6M,IAAmB,GAAK,EA4T9B1D,SAAShK,EAAAA,EAAAA,KAACiK,EAAAA,EAAY,IAAIlK,SAAC,aAGzDL,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAChB,KAAM8O,GAAiB5N,GAAI,CAACC,OAAS,OAAOC,SAAA,EAChDC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SAAC,wCACbC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACVL,EAAAA,EAAAA,MAACS,EAAAA,EAAiB,CAAAJ,SAAA,CAAC,8EAC2DC,EAAAA,EAAAA,KAAA,SAAK,4CAIvFN,EAAAA,EAAAA,MAACU,EAAAA,EAAa,CAAAL,SAAA,EACVC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACG,QAAQ,WAAWF,QAASA,IAAIoN,IAAmB,GAAO3N,SAAC,0BACnEC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACG,QAAQ,YAAYF,QAASO,EAAWd,SAAC,0BAGtD,E,6KC5aP,MAkHA,GAlHqBrB,IAA2I,IAA1I,WAAEkS,EAAU,cAAEC,EAAa,KAAE/H,EAAI,KAAExD,EAAI,YAAGwL,EAAW,UAAEC,EAAS,aAAEC,EAAY,gBAAEC,EAAe,eAAEC,EAAc,kBAAEC,GAAmBzS,EACtJ,MAAO0S,EAAaC,IAAkB9R,EAAAA,EAAAA,UAAS,MAEzCE,EAAcA,KAChBqR,EAAaM,EAAe,uBAAyB,MACrDP,GAAc,EAAM,EAW1B,OACEnR,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACHhB,KAAMiS,EACN/Q,GAAI,CAACC,OAAS,OAAOC,SAAA,EAErBC,EAAAA,EAAAA,KAAA,OAAKgH,IAAI,0BAA0BC,IAAI,GAAGzC,MAAM,MAAMuC,UAAU,aACtD,aAATzB,IAAuB5F,EAAAA,EAAAA,MAAAmH,EAAAA,SAAA,CAAA9G,SAAA,EAAEC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SAAC,8BACvCC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACdC,EAAAA,EAAAA,KAACG,EAAAA,EAAiB,CAAC4G,UAAU,YAAWhH,UACpCL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,yDAAwDhH,SAAA,EACvEC,EAAAA,EAAAA,KAACsR,GAAAA,EAAmB,CAACzR,GAAI,CAACsH,UAAY,OAAQkB,SAAW,WACzDrI,EAAAA,EAAAA,KAACuR,EAAAA,EAAK,CAACC,QAAS,EAAGzK,UAAU,UAAShH,UAClCC,EAAAA,EAAAA,KAACyR,EAAAA,EAAY,CACTC,UAAQ,EACRC,UAAQ,EACRC,QAAS9I,EACT+I,eAAiBC,GAAWA,EAC5BhK,SAtBiBiK,CAAChK,EAAGtB,KACjC4K,EAAe5K,GACfsK,EAAUtK,EAAM,EAqBJuL,YAAcC,IACdjS,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,IACH+I,EACJzR,QAAQ,WACR6I,MAAM,cACN6I,YAAY,+CAO5BxS,EAAAA,EAAAA,MAACU,EAAAA,EAAa,CAAAL,SAAA,EACdC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,QAASb,EAAYM,SAAC,YAC9BC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,QAzCSC,KACjB8Q,EAAe,MACf5R,GAAa,EAuCkBe,QAAQ,YAAYX,GAAI,CAAC6Q,OAAS,oBAAoB3Q,SAAC,iBAK5E,SAATuF,IAAmB5F,EAAAA,EAAAA,MAAAmH,EAAAA,SAAA,CAAA9G,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SAAC,wDACbC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACVL,EAAAA,EAAAA,MAACS,EAAAA,EAAiB,CAAAJ,SAAA,EACdC,EAAAA,EAAAA,KAACmS,GAAAA,EAAW,CAACtS,GAAI,CAACwI,SAAW,OAAQqI,OAAS,oBAC9ChR,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAUlH,GAAI,CAAC6Q,OAAS,UAAU3Q,SAAA,EACrDC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAAC1I,GAAI,CAACwI,SAAW,OAAQH,WAAa,SAASnI,SAAC,0BAC3DL,EAAAA,EAAAA,MAAC+I,EAAAA,EAAM,CACPjI,QAAQ,WACRiG,MAAOuK,EACPlJ,SAAWC,IAAKkJ,EAAgBlJ,EAAEvC,OAAOiB,OAAOoK,GAAc,EAAM,EACpEhR,GAAI,CAAC2E,MAAO,OACR,wBAAyB,CACzB6D,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACVtI,SAAA,EACAC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,YAAW1G,SAAC,eAC5BC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,YAAW1G,SAAC,eAC5BC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,YAAW1G,SAAC,eAC5BC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,4BAA2B1G,SAAC,4CAOlD,eAATuF,IAAyB5F,EAAAA,EAAAA,MAAAmH,EAAAA,SAAA,CAAA9G,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SAAC,uDACbC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACVL,EAAAA,EAAAA,MAACS,EAAAA,EAAiB,CAAAJ,SAAA,EACdC,EAAAA,EAAAA,KAACoS,GAAAA,EAA2B,CAACvS,GAAI,CAACwI,SAAW,OAAQqI,OAAS,oBAC9DhR,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAACvB,UAAU,UAAUlH,GAAI,CAAC6Q,OAAS,UAAU3Q,SAAA,EACrDC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAAC1I,GAAI,CAACwI,SAAW,OAAQH,WAAa,SAASnI,SAAC,4BAC3DL,EAAAA,EAAAA,MAAC+I,EAAAA,EAAM,CACPjI,QAAQ,WACRiG,MAAOyK,EACPpJ,SAAWC,IAAKoJ,EAAkBpJ,EAAEvC,OAAOiB,OAAOoK,GAAc,EAAM,EACtEhR,GAAI,CAAC2E,MAAO,OACR,wBAAyB,CACzB6D,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACVtI,SAAA,EACAC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,OAAM1G,SAAC,UACvBC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,SAAQ1G,SAAC,YACzBC,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAM,OAAM1G,SAAC,yBAOlC,E,mDCzGb,MAmSA,GAnS8BrB,IAAuL,IAAtL,WAAE4L,EAAU,aAAE7J,EAAY,cAAEgK,EAAa,cAAE4H,EAAa,iBAAEC,EAAgB,aAAErT,EAAY,mBAAE6B,EAAkB,UAAExB,EAAS,eAAE4B,EAAc,YAAEC,EAAW,YAAEoR,EAAW,YAAEC,GAAa9T,EAC3M,MAAM,gBAAE+T,EAAe,iBAAEC,IAAqBrR,EAAAA,EAAAA,YAAWsR,GAAAA,GACnDC,GAAWC,EAAAA,GAAAA,KAAW/M,MAAM,MAE3BgN,EAAQC,KADEC,EAAAA,GAAAA,OACWzT,EAAAA,EAAAA,UAAS,MAC9B0T,EAAQlC,IAAaxR,EAAAA,EAAAA,UAAS,KAC9B2T,EAAUC,IAAe5T,EAAAA,EAAAA,UAAS,OAClC6T,EAAUtC,IAAevR,EAAAA,EAAAA,UAAS,OAClC8T,EAAeC,IAAoB/T,EAAAA,EAAAA,UAAS,OAC5CgU,EAAQC,IAAajU,EAAAA,EAAAA,UAAS,OAC9ByR,EAAcC,IAAmB1R,EAAAA,EAAAA,UAAS,OAC1CkU,EAAQC,IAAanU,EAAAA,EAAAA,WAAS,IAC9BoU,EAAcC,KAAmBrU,EAAAA,EAAAA,WAAS,IAC1C2R,GAAgBC,KAAqB5R,EAAAA,EAAAA,UAAS,OAC9CsU,GAAYC,KAAiBvU,EAAAA,EAAAA,UAAS,OACtCwU,GAAaC,KAAkBzU,EAAAA,EAAAA,UAAS,OACxCqR,GAAYC,KAAiBtR,EAAAA,EAAAA,WAAS,IACtC0U,GAAYC,KAAiB3U,EAAAA,EAAAA,UAAS,OACtCgO,GAAUC,KAAejO,EAAAA,EAAAA,WAAS,IAEzCC,EAAAA,EAAAA,YAAU,KACH6S,IACIA,GAAiBA,EAAc8B,QAAOpB,EAAUV,EAAc8B,OAAOtL,KAAIuL,GAAOA,KACnFrD,EAAUsB,EAAcgC,QACxBlB,EAAYd,EAAciC,UAC1BxD,EAAYuB,EAAckC,UAC1BjB,EAAiBjB,EAAcmC,gBAC/BhB,EAAUnB,EAAcoC,QACxBf,EAAUrB,EAAcqC,MACxBzD,EAAgBoB,EAAcsC,eAC9Bf,GAAgBvB,EAAcuC,YAC9BzD,GAAkBkB,EAAcwC,iBAChCf,GAAczB,EAAcyC,YAAc,MAC1Cd,GAAe3B,EAAc0C,aAAe,MAChD,GACF,CAAC1C,IAEH,MAAMzL,GAAWA,KACb,MAAMkC,EAAO,CACTqL,OAASrB,EACTuB,OAASpB,EACTqB,SAAWpB,EACXqB,SAAWnB,EACXoB,eAAiBnB,EACjBoB,OAASlB,EACTmB,KAAOjB,EACPkB,cAAgB3D,EAChB4D,WAAajB,EACbkB,gBAAkB3D,GAClB4D,WAAajB,GACbkB,YAAchB,IAGlB,OADAzB,EAAiBxJ,GACVA,CAAI,EAGTkM,GAAe,CAAC,CAClBC,MAAQ7B,EACR8B,MAAOlV,EAAAA,EAAAA,KAACmV,EAAAA,EAAM,CAACpO,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBAC1E0E,MAAQ,0BACRC,MAAQ,CAAC,uBAAwB,OAC/B,CACEJ,MAAQ5B,EACR6B,MAAOlV,EAAAA,EAAAA,KAACsV,EAAAA,EAAU,CAACvO,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBAC9E0E,MAAQ,uBACRC,MAAQ,CAAC,MAAO,OAClB,CACEJ,MAAQ1B,EACR2B,MAAOlV,EAAAA,EAAAA,KAACuV,EAAAA,EAAU,CAACxO,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBAC9E0E,MAAQ,4CACRC,MAAQ,CAAC,uBAAwB,OACnC,CACEJ,MAAmB,OAAXxB,IAA8B,IAAXA,EAAkB,OAAoB,IAAXA,EAAoB,KAAO,GACjFyB,MAAOlV,EAAAA,EAAAA,KAACwV,EAAAA,EAAI,CAACzO,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBACxE0E,MAAQ,8BACRC,MAAQ,CAAC,MAAO,OAClB,CACEJ,MAAyB,OAAjBtB,IAA0C,IAAjBA,EAAwB,OAA0B,IAAjBA,EAA0B,KAAO,GACnGuB,MAAOlV,EAAAA,EAAAA,KAACyV,EAAAA,EAAI,CAAC1O,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBACxE0E,MAAQ,qCACRC,MAAQ,CAAC,MAAO,OAClB,CACEJ,MAAQpB,GACRqB,MAAOlV,EAAAA,EAAAA,KAAC0V,EAAAA,EAAmB,CAAC3O,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBAC5F0E,MAAQ,yBACRC,MAAQ,CAAC,mBAAmB,UAAU,OAAO,OAAO,QACtD,CACEJ,MAAQlB,GACRmB,MAAOlV,EAAAA,EAAAA,KAAC2V,GAAAA,EAAkB,CAAC5O,UAAU,qBAAqBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,mBAC3F0E,MAAQ,0BACRC,MAAQ,CAAC,4BAA4B,eAAe,gCAAgC,sCAwEtFzF,GAAcA,QAEXkD,GAAUA,EAAOlP,OAAS,IACb,OAAbwP,GAAsBH,GAAUA,EAAOrP,OAAS,IACjDsP,GACAG,GACAE,IACEE,IAAUzC,GACV2C,IAAgBzC,KAClB2C,KACAE,IAoCV,OACErU,EAAAA,EAAAA,MAAAmH,EAAAA,SAAA,CAAA9G,SAAA,EACAL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,8DAA6DhH,SAAA,EAC5EC,EAAAA,EAAAA,KAAC4V,GAAAA,EAAiB,CAAC7O,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQlB,UAAY,WACjFnH,EAAAA,EAAAA,KAACuR,EAAAA,EAAK,CAACC,QAAS,EAAGzK,UAAU,YAAWhH,UACpCC,EAAAA,EAAAA,KAACyR,EAAAA,EAAY,CACTC,UAAQ,EACRC,UAAQ,EACRC,QAASiE,GAAAA,GACThE,eAAiBC,GAAWA,EAC5BrL,MAAOqM,EACPhL,SAAUA,CAACC,EAAE+N,IAAS/C,EAAU+C,GAChC9D,YAAcC,IACdjS,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAACC,UAAQ,EAChBR,MAAO4E,MAAcuF,GAAWA,GAA4B,IAAlBA,EAAOlP,QACjDwF,WAAYmE,MAAcuF,GAAWA,GAA4B,IAAlBA,EAAOlP,QAAiB,gBAAkB,MACrFqO,EACJzR,QAAQ,WACR6I,MAAM,gBACN6I,YAAY,mBAKxBxS,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,0CAA0ClH,GAAI,CAACkW,OAAS,OAAQ5N,UAAY,QAAQpI,SAAA,EAC/FL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,4DAA2DhH,SAAA,EAC1EC,EAAAA,EAAAA,KAACgW,GAAAA,EAAe,CAACjP,UAAU,gBAAgBlH,GAAI,CAACwI,SAAW,OAAQqI,OAAS,oBAC5E1Q,EAAAA,EAAAA,KAACkJ,EAAAA,EAAU,CAAC5D,KAAK,OAAO9E,QAAQ,WAAW6I,MAAM,mBAAmBF,UAAQ,EAC5E1C,MAAOyM,GAAYA,EAASpN,MAAM,KAAK,GACvCgC,SAAWC,GAAIoL,EAAYpL,EAAEvC,OAAOiB,OACpCkC,MAAO4E,KAAa2F,EACpB+C,gBAAiB,CAAEzN,SAAS0K,GAC5BgD,WAAY,CAACC,cAAcnW,EAAAA,EAAAA,KAACoW,EAAAA,EAAc,CAAChS,SAAS,MAAKrE,UACjDC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAACjC,MAAM,UAAUb,UAAU,iCAAiCzG,QAhEpD+V,KAC3BpX,GAAa,GACbyG,YAAW,KACP4Q,UAAUC,YACVD,UAAUC,YAAYC,oBACrBpS,IACD,MAAMqS,EAAWrS,EAASsS,OAAOD,SAC3BE,EAAYvS,EAASsS,OAAOC,UAClCC,MAAM,qEAAqEH,eAAsBE,yBAC5FE,MAAKC,GAAYA,EAASC,SAC1BF,MAAK/N,IACN,MAAMkO,EAAOlO,EAAKkO,MAAQlO,EAAKmO,SACzBC,EAAQpO,EAAKqO,qBAEnBhE,EAAY,GAAG6D,MAASE,KAAST,KAAYE,IAAY,IAExDS,OAAMzO,IACP7H,EAAmB,QAAQ,+BAA+B,GACxD,IAEL6H,IACG7H,EAAmB,QAAQ,yBAAyB,IAIxDA,EAAmB,QAAQ,+CAC/B,GACF,KAAK,EAqC4Gf,SAAC,2BAEhHqJ,WAAYmE,KAAa2F,EAAW,yBAA2B,GAC/DrT,GAAI,CAAC2E,MAAO,aAIXwQ,GAAanM,KAAK+I,IACnBlS,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,wDAAuDhH,SAAA,CACrE6R,EAAQsD,MACTxV,EAAAA,EAAAA,MAAC4I,EAAAA,EAAW,CAAC9H,QAAQ,WAAWX,GAAI,CAAC2E,MAAQ,QAAQzE,SAAA,EACrDC,EAAAA,EAAAA,KAACuI,EAAAA,EAAU,CAACC,SAAQoJ,EAAQqD,MAAsBpV,GAAI,CAACwI,SAAW,OAAQT,MAAS2F,KAAaqE,EAAQqD,MAAS,UAAY,IAAIlV,SAAE6R,EAAQwD,SACvIpV,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CACHjI,QAAQ,WACRiG,MAAOmL,EAAQqD,MACftM,MAAO4E,KAAaqE,EAAQqD,MAC5BnN,SAAWC,IAAIsP,OAnKL5Q,EAmKkBsB,EAAEvC,OAAOiB,OAnKpB7H,EAmK0BgT,EAAQwD,OAlKlDnP,SAAS,kBACbyN,EAAoB,QAAVjN,GACG,OAAVA,GAAewK,EAAgB,MACrB,QAAVxK,IACAyN,GAAc,QACdrD,IAAc,KAGnBjS,EAAMqH,SAAS,yBACd2N,GAA0B,QAAVnN,GACH,OAAVA,GAAe0K,GAAkB,MACvB,QAAV1K,IACCyN,GAAc,cACdrD,IAAc,KAGnBjS,EAAMqH,SAAS,cACD,OAAVQ,GAAeqK,EAAY,MAC3BrK,EAAMR,SAAS,SACdiO,GAAc,YACdrD,IAAc,KAGnBjS,EAAMqH,SAAS,sBACduN,EAAU/M,GACV7H,EAAMqH,SAAS,qBACfqN,EAAiB7M,GAElB7H,EAAMqH,SAAS,eACd6N,GAAcrN,QAEf7H,EAAMqH,SAAS,gBACd+N,GAAevN,IAjCF4Q,IAAC5Q,EAAO7H,CAmKyC,EAC1DiB,GAAI,CAAC2E,MAAO,OACZ,wBAAyB,CACzB6D,SAAU,OACVO,QAAS,SAET,wBAAyB,CACzBP,SAAU,SACNtI,SAEH6R,EAAQyD,MAAMxM,KAAKyO,IAChBtX,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,CAACtC,MAAO6Q,EAAKvX,SAAEuX,SAGhCtX,EAAAA,EAAAA,KAACgJ,EAAAA,EAAc,CAACnJ,GAAI,CAAC+H,MAAQ,WAAW7H,SAAGwN,KAAaqE,EAAQqD,MAASrD,EAAQ2F,KAAO,mBAAqB,iBAMrHvX,EAAAA,EAAAA,KAACwX,GAAY,CAAC5G,WAAYA,GAAYC,cAAeA,GAAe/H,KAAMuL,GAAAA,GAAQ/O,KAAM2O,GAAYnD,YAAaA,EAAaC,UAAWA,EAC3HC,aAAcA,EAAcC,gBAAiBA,EAAiBC,eAAgBA,GAAgBC,kBAAmBA,MAE/HzR,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,4BAA2BhH,SAAA,EACtCC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,QAASA,KAAKgK,IAAa1D,IAAU,EAAE7G,SAAC,UAGhDC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACG,QAAQ,YAAYF,QAzJViD,UAElB,GADAiK,IAAY,IACRoC,KAAc,OAClB3Q,GAAa,GACb2H,KACAnG,EAAqB,OAAIS,EACzB,MAAMuW,EAAeC,KAAKC,UAAUlX,GAC9BmX,EAAgBF,KAAKC,UAAUlN,GAC/BoN,EAAgBH,KAAKC,UAAU/Q,MAC/BkC,EAAO,CACT,KAASrI,EAAakE,KACtB,MAAUlE,EAAaqE,MACvB,MAAUrE,EAAamE,MACvB,UAAcnE,EAAaiE,UAC3B,OAAWjE,EAAaqX,OACxB,cAAiBL,EACjB,iBAAoBG,EACpB,eAAkBC,EAClB,aAAgB1W,EAAcoR,EAAcK,EAAS,IAEtDzR,IAAY2H,EAAS,GAAI4O,KAAKK,MAAMC,eAAeC,QAAQ,uBAC9D,MAAM5R,EAASlF,QAAoBuR,EAAiB5J,SAAc2J,EAAgB3J,GAC9EzC,GAAUA,EAAO5C,QACjB3C,EAAmB,QAAQuF,EAAO5C,UACjB,IAAX4C,IACNmM,IACA1R,EAAmB,UAAU,aAAaL,EAAakE,gBAAgBxD,EAAc,UAAY,yBACjG7B,GAAU,GACd,EA6HoD0K,SAAShK,EAAAA,EAAAA,KAAC0H,EAAAA,EAAkB,IAAI3H,SAAC,gBAEtF,EClSDmY,GAAQ,CAAC,uBAAwB,oBAAqB,0BA8D5D,GA5DsBxZ,IAAgO,IAA/N,mBAAEoC,EAAkB,aAAE7B,EAAY,cAAE8B,EAAa,UAAEzB,EAAS,aAAE0B,EAAY,yBAAEmX,EAAwB,0BAAEC,EAAyB,0BAAEC,EAAyB,KAAEpX,EAAI,eAAEC,EAAc,YAAEC,EAAW,YAAEoR,EAAW,YAAEC,GAAa9T,EAC9O,MAAO+B,EAAcC,IAAmBnB,EAAAA,EAAAA,UAAS,CAAC,IAC3CkL,EAAeC,IAAoBnL,EAAAA,EAAAA,UAAS,CAAC,IAC7C8S,EAAeC,IAAoB/S,EAAAA,EAAAA,UAAS,CAAC,IAC7C+Y,EAAYC,IAAiBhZ,EAAAA,EAAAA,UAAS,IACtCoB,EAAYC,IAAiBrB,EAAAA,EAAAA,UAAS,OACtCgL,EAAYC,IAAiBjL,EAAAA,EAAAA,UAAS,OAW7CC,EAAAA,EAAAA,YAAU,MARI,YAATyB,GAAsBE,KACpBgX,GAAyBzX,EAAgByX,GACzCC,GAA2D,QAA9BA,GAAoC1N,EAAiB0N,GAClFC,GAA2D,QAA9BA,GAAoC/F,EAAiB+F,GACpD,QAA9BA,GAAuCD,EAA0BhJ,mBAAkB5E,EAAc,MAKnF,GACnB,IAEF,MAAM3J,EAAaA,KACjB0X,GAAeC,GAASC,KAAKC,IAAIF,EAAO,EAAGN,GAAMtU,OAAS,IAAG,EAGzD0G,EAAaA,KACjBiO,GAAeC,GAASC,KAAKE,IAAIH,EAAO,EAAG,IAAG,EAGhD,OACExY,EAAAA,EAAAA,KAAC8G,EAAAA,EAAG,CAACC,UAAU,sEAAqEhH,UACpFL,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACC,UAAU,uBAAsBhH,SAAA,EACnCC,EAAAA,EAAAA,KAAC4Y,EAAAA,EAAO,CAACN,WAAYA,EAAWvY,SAC7BmY,GAAMrP,KAAKQ,IACVrJ,EAAAA,EAAAA,KAAC6Y,EAAAA,EAAI,CAAA9Y,UACHC,EAAAA,EAAAA,KAAC8Y,EAAAA,EAAS,CAAA/Y,SAAEsJ,KADHA,QAMf3J,EAAAA,EAAAA,MAACoH,EAAAA,EAAG,CAACjH,GAAI,CAAE+I,QAAS,GAAI7I,SAAA,CACN,IAAfuY,IAAoBtY,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAA9J,SAAC,0CACjB,IAAfuY,IAAoBtY,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAA9J,SAAC,yCACjB,IAAfuY,IAAoBtY,EAAAA,EAAAA,KAAC6J,EAAAA,EAAU,CAAA9J,SAAC,yCAEhCU,GAA+B,IAAf6X,GAAmBtY,EAAAA,EAAAA,KAAC+Y,EAAY,CAACtY,aAAcA,EAAcC,gBAAiBA,EAAiBC,WAAYA,EAC1FC,cAAeA,EAAeC,WAAYA,EAAYC,mBAAoBA,EAAoBK,YAAaA,EAC3GJ,cAAeA,EAAeC,aAAcA,EAAcC,KAAMA,EAAMC,eAAgBA,IACtG,IAAfoX,GAAoBtY,EAAAA,EAAAA,KAACgZ,EAAgB,CAAC1O,WAAYA,EAAYzJ,WAAYA,EAAY0J,WAAYA,EAAYC,cAAeA,EAC1GC,cAAeA,EAAeC,iBAAkBA,EAAkB5J,mBAAoBA,EAAoBK,YAAaA,KAC1InB,EAAAA,EAAAA,KAACiZ,GAAqB,CAAC3O,WAAYA,EAAY7J,aAAcA,EAAcgK,cAAeA,EAAe4H,cAAeA,EACjGC,iBAAkBA,EAAkBxR,mBAAoBA,EAAoB7B,aAAcA,EAAcK,UAAWA,EACnH4B,eAAgBA,EAAgBC,YAAaA,EAAaoR,YAAaA,EAAaC,YAAaA,WAIzH,C","sources":["components/dashboard/Dialog.js","components/student-form/PersonalInfo.js","components/student-form/EducationDetails.js","components/SelectDialog.js","components/student-form/PlacementRequirements.js","components/student-form/Stepper.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button } from '@mui/material';\n\nconst CustomDialog = ({ open, title, content, btnValue, dialogMsg, setDialog, setIsLoading, handle_Close, setUploadManually, setImportData }) => {\n    const [isOpen, setIsOpen]= useState(false);\n\n    useEffect(()=>{\n        setIsOpen(open);\n    },[open])\n\n    const handleClose = () => {\n        setIsOpen(false);\n        setDialog(false);\n    };\n    const handleSubmit = () => {\n        setIsLoading(true);\n        if(dialogMsg === 'Back'){\n            setUploadManually(false);\n        }else if(dialogMsg === 'Close'){\n            handle_Close();\n        }else if(btnValue === 'Export'){\n            setImportData(true);\n        }else if(btnValue === 'Return to Details'){\n            handle_Close();\n        };\n        handleClose();\n    };\n\n  return (\n    <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        sx={{zIndex : '900'}}\n    >\n        <DialogTitle>\n        {title}\n        </DialogTitle>\n        <DialogContent>\n        <DialogContentText>\n        {content}\n        </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit} variant='contained'>\n            {btnValue}\n        </Button>\n        </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default CustomDialog;","import React, { useContext, useEffect, useState } from 'react';\nimport { CloudUpload, PeopleRounded, EmailRounded, LocalPhoneRounded, BadgeRounded, ArrowForward, CancelRounded, CheckCircleRounded, WcRounded, WorkOutlineOutlined, WorkRounded, WifiRounded, WifiOffRounded } from '@mui/icons-material';\nimport { Box, Button, Link, FormControl, Select, MenuItem, InputLabel, Typography, FormHelperText, CircularProgress, IconButton } from '@mui/material';\nimport styled from 'styled-components';\nimport NumberInput from '../noSpinnerField';\nimport InputField from '../InputField';\nimport { BatchContext } from '../api/batch';\nimport { StudentsAuthContext } from '../api/StudentsAuth';\n\nconst PersonalInfo = ({ personalData, setPersonalData, resumeName, setResumeName, handleNext, handleShowSnackbar, setOpenDialog, setDialogMsg, user, selectedCourse, editDetails }) => {\n    const { fetchBatchData } = useContext(BatchContext);\n    const { checkStudentDetails } = useContext(StudentsAuthContext);\n    const [batchData, setBatchData] = useState([]);\n    const [batch, setBatch] = useState(null);\n    const [name, setName] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [phone, setPhone] = useState(null);\n    const [alterPhone, setAlterPhone] = useState(null);\n    const [gender, setGender] = useState(null);\n    const [resume, setResume] = useState(null);\n    const [image, setImage] = useState(null);\n    const [linkedIn, setLinkedIn] = useState(null);\n    const [gitHub, setGithub] = useState(null);\n    const [mode, setMode] = useState(null);\n    const [isSubmit, setIsSubmit] = useState(false);\n    const [loading1, setLoading1] = useState(false);\n    const [loading2, setLoading2] = useState(false);\n\n    const fetchData = async () => {\n      const res = await fetchBatchData(selectedCourse);\n      if (res && res.message){\n        handleShowSnackbar('error',res.message);\n      }else if(Array.isArray(res) && res.length > 0){\n        setBatchData(res);\n      }\n    }\n\n    useEffect(()=>{\n      fetchData();\n    },[])\n\n    const VisuallyHiddenInput = styled('input')({\n      clip: 'rect(0 0 0 0)',\n      clipPath: 'inset(50%)',\n      height: 1,\n      overflow: 'hidden',\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      whiteSpace: 'nowrap',\n      width: 1,\n    });\n\n    useEffect(()=>{\n        setImage(personalData.Image || null);\n        setBatch(personalData.BatchName || null);\n        setName(personalData.Name || null);\n        setPhone(personalData.Phone || null);\n        setAlterPhone(personalData.Alernate_Phone || null);\n        setEmail(personalData.Email || null);\n        setGender(personalData.Gender || null);\n        setLinkedIn(personalData.Linkedin || null);\n        setGithub(personalData.Github || null);\n        setResume(personalData.Resume || null);\n        setMode(personalData.Mode || null);\n    },[personalData])\n\n    const handleFileChange = (event, type) => {\n      const file = event.target.files[0];\n      (type === 'Image') ? setLoading1(true) : setLoading2(true);\n      setTimeout(()=>{\n        if (file) {\n          if((file.size / (1024 * 1024)).toFixed(2) <= 5){\n            if(type === 'Resume'){\n              setResumeName(file.name);\n              const extension = file.name.split('.');\n              const extensionType = extension[extension.length - 1];\n              if(!(extensionType === 'pdf' || extensionType === 'doc' || extensionType === 'docx')){\n                setResume(null);\n                handleShowSnackbar('error','Please Upload a Valid Resume File.');\n                return;\n              }\n            }else if(type === 'Image'){\n              if(!acceptedFormats.includes(file.type)){\n                handleShowSnackbar('error','Please Upload a Valid Image.');\n                return;\n              }\n            }\n            const reader = new FileReader();\n            reader.onloadend = () => {\n              (type === 'Image') ? setImage(reader.result) : setResume(reader.result);\n            };\n            reader.readAsDataURL(file);\n        }else{\n          handleShowSnackbar('error','You can upload files up to 5 MB. Files larger than 5 MB will not be accepted.');\n        }\n      }\n      setLoading1(false);\n      setLoading2(false);\n      },1000)\n    };\n\n    const checkPhoneError = (getvalue)=>{\n      const value = getvalue && getvalue.toString();\n      if (isSubmit && !value)return true;\n      if (value && !(value.startsWith('9') || value.startsWith('8') || value.startsWith('7') || value.startsWith('6')))return true;\n      if(value && value.length !== 10)return true;\n      return false;\n    }\n\n    const acceptedFormats = ['image/jpeg', 'image/png', 'image/gif', 'image/tiff', 'image/bmp', 'image/webp', 'image/heif', 'image/svg+xml'];\n\n\n    const handelSubmit = async () => {\n      setIsSubmit(true);\n      if(!email || !phone)return;\n        const res1 = await checkStudentDetails(email,selectedCourse);\n        const res2 = await checkStudentDetails(phone,selectedCourse);\n      if(editDetails || (res1.status === false && res2.status === false && \n        (res1.code === 403 || res1.code === 406 || res1.code === 404) &&\n        (res2.code === 403 || res2.code === 406 || res2.code === 404))){\n        if (\n          image &&\n          resume &&\n          batch &&\n          name &&\n          !checkPhoneError(phone) &&\n          !checkPhoneError(alterPhone) &&\n          email && email.includes('@') &&\n          linkedIn.startsWith('https://') &&\n          phone !== alterPhone &&\n          mode\n        ){\n          saveData();\n          handleNext();\n        }\n      }else if(res1.status === false && res2.status === false){\n        handleShowSnackbar('error','Something went wrong. Please try again later.');\n      }else if(res1.status === true || res2.status === true){\n        if(res1.status === true)handleShowSnackbar('error','Email is already taken. Please choose another one.');\n        if(res2.status === true)handleShowSnackbar('error','Phone is already taken. Please choose another one.');\n      }\n    }\n\n    const saveData = () => {\n      const data = {\n        Image : image,\n        BatchName : batch,\n        Name : name,\n        Phone : phone,\n        Alernate_Phone : alterPhone,\n        Email : email,\n        Gender : gender,\n        Linkedin : linkedIn,\n        Github : gitHub,\n        Resume : resume,\n        Mode : mode\n      }\n      setPersonalData(data);\n    }\n\n  return (\n    <>\n    <Box className=\"w-full h-[27rem] mt-5 mb-14 flex flex-row items-center justify-between\">\n        <Box className='w-1/4 h-96 flex flex-col items-center justify-center'>\n        <img src={image ? image : '/images/Empty-Men-Icon.png'} alt='' width=\"180px\" className=\"h-[180px] border-[1px] border-gray-300 rounded-full object-contain\" />\n        <Box sx={{ m: 1, position: 'relative', marginTop : '5%' }} className=\"flex items-center justify-center w-full\">\n        <Button\n          disabled={loading1}\n          component=\"label\"\n          role={undefined}\n          tabIndex={-1}\n          variant=\"contained\"\n          startIcon={(image) ? <CheckCircleRounded /> : <CloudUpload />}\n          color={(isSubmit && !image) ? 'error' : (image) ? 'success' : 'primary'}\n          sx={{width: '70%'}}\n        >\n          {(image) ? 'Image Uploaded' : 'Upload Image'}\n          <VisuallyHiddenInput type=\"file\" accept=\"image/*\" onChange={(e)=>handleFileChange(e,'Image')} />\n          </Button>\n          {loading1 && (\n            <CircularProgress\n              size={24}\n              sx={{\n                color: 'primary',\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                marginTop: '-12px',\n                marginLeft: '-12px',\n              }}\n            />\n          )}\n        </Box>\n        </Box>\n        <Box className=\"grid grid-cols-2 w-[70%]\" sx={{columnGap : '20px'}}>\n          <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <PeopleRounded className=\"text-gray-500 mt-6\" sx={{fontSize : '30px'}} />\n          <FormControl variant=\"standard\" sx={{width : '88%'}}>\n          <InputLabel shrink={batch ? true : false} sx={{fontSize : '20px', color : (isSubmit && !batch) ? '#d32f2f' : \"\"}}>Select Batch *</InputLabel>\n          <Select\n            readOnly={user === 'Student'}\n            error={isSubmit && !batch}\n            value={batch}\n            onChange={(e)=>setBatch(e.target.value)}\n            sx={{width: '100%',\n              '& .MuiInputBase-input': {\n              fontSize: '20px',\n              padding: '5px 0',\n              },\n              '& .MuiInputLabel-root': {\n              fontSize: '20px',\n              },}}\n              >\n            {batchData && batchData.length > 0 && batchData.map((data)=>(\n              <MenuItem value={data.BatchName}>{data.BatchName}</MenuItem>\n            ))}\n          </Select>\n          <FormHelperText sx={{color : '#d32f2f'}}>{(isSubmit && !batch) ? \"Select Batch\" : \"\"}</FormHelperText>\n          </FormControl>\n          </Box>\n\n          <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n          <BadgeRounded className=\"text-gray-500 mt-5\" sx={{fontSize : '30px'}} />\n            <InputField required value={name} disabled={user === 'Student'} onChange={(e)=>setName(e.target.value)} error={isSubmit && !name} helperText={isSubmit && !name ? \"Enter valid Name\" : \"\"}  label=\"Full Name\" sx={{width: '88%'}}/>\n          </Box>\n\n          <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n          <LocalPhoneRounded className=\"text-gray-500 mt-5\" sx={{fontSize : '30px'}} />\n            <NumberInput label=\"Mobile (Active Whatsapp No.)\" disabled={user === 'Student'} value={phone} onChange={(e)=>setPhone(e.target.value)} error={checkPhoneError(phone) || (phone && alterPhone && phone === alterPhone)} \n              helperText={checkPhoneError(phone) ? \"Enter valid Mobile No.\" : (phone && alterPhone && phone === alterPhone) ? \"Phone and Alternate Phone cannot be the same.\" : \"\"} required sx={{width: '88%'}}/>\n            </Box>\n\n            <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <LocalPhoneRounded className=\"text-gray-500 mt-5\" sx={{fontSize : '30px'}} />\n            <NumberInput label=\"Alternate Mobile No.\" value={alterPhone} onChange={(e)=>setAlterPhone(e.target.value)} error={checkPhoneError(alterPhone) || (phone && alterPhone && phone === alterPhone)} \n              helperText={checkPhoneError(alterPhone) ? \"Enter valid alternate Mobile No.\" : (phone && alterPhone && phone === alterPhone) ? \"Phone and Alternate Phone cannot be the same.\" : \"\"} required sx={{width: '88%'}} />\n            </Box>\n\n            <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <EmailRounded className=\"text-gray-500 mt-5\" sx={{fontSize : '30px'}} />\n            <InputField value={email} disabled={user === 'Student'} onChange={(e)=>setEmail(e.target.value)} error={(isSubmit && !email) || (email && !email.includes('@'))} helperText={(isSubmit && !email) || (email && !email.includes('@')) ? \"Enter valid name\" : \"\"} required label=\"Email\" sx={{width: '88%'}} />\n            </Box>\n\n            <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <WcRounded className=\"text-gray-500 mt-6\" sx={{fontSize : '30px'}} />\n              <FormControl variant=\"standard\" sx={{width : '88%'}}>\n              <InputLabel shrink={gender ? true : false} sx={{fontSize : '20px', color : (isSubmit && !gender) ? '#d32f2f' : \"\"}}>Select Gender *</InputLabel>\n              <Select\n                error={isSubmit && !gender}\n                value={gender}\n                onChange={(e)=>setGender(e.target.value)}\n                sx={{width: '100%',\n                  '& .MuiInputBase-input': {\n                  fontSize: '20px',\n                  padding: '5px 0',\n                  },\n                  '& .MuiInputLabel-root': {\n                  fontSize: '20px',\n                  },}}\n                  >\n                <MenuItem value=\"Male\">Male</MenuItem>\n                <MenuItem value=\"Female\">Female</MenuItem>\n              </Select>\n              <FormHelperText sx={{color : '#d32f2f'}}>{(isSubmit && !gender) ? \"Select Gender\" : \"\"}</FormHelperText>\n              </FormControl>\n            </Box>\n\n            <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <img src=\"/images/linkedin-logo.png\" alt='' className=\"mt-6\" width='28px' />\n            <InputField value={linkedIn} onChange={(e)=>setLinkedIn(e.target.value)} required label=\"Linkedin URL\" error={(isSubmit && !linkedIn) || (linkedIn && !linkedIn.startsWith('https://'))} helperText={(isSubmit && !linkedIn) || (linkedIn && !linkedIn.startsWith('https://')) ? \"Enter valid Linkedin URL\" : \"\"} sx={{width: '88%'}} />\n            </Box>\n\n            <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <img src=\"/images/github-logo.png\" alt='' className=\"mt-5\" width='30px' />\n            <InputField value={gitHub} onChange={(e)=>setGithub(e.target.value)} error={gitHub && !gitHub.startsWith('https://')} helperText={gitHub && !gitHub.startsWith('https://') ? \"Enter valid Github URL\" : \"\"} label=\"Github URL\" sx={{width: '88%'}} />\n            </Box>\n\n            <Box className=\"w-[95%] h-20 flex items-start justify-between\">\n            <WcRounded className=\"text-gray-500 mt-6\" sx={{fontSize : '30px'}} />\n              <FormControl variant=\"standard\" sx={{width : '88%'}}>\n              <InputLabel shrink={mode ? true : false} sx={{fontSize : '20px', color : (isSubmit && !mode) ? '#d32f2f' : \"\"}}>Select Class Mode *</InputLabel>\n              <Select\n                error={isSubmit && !mode}\n                value={mode}\n                onChange={(e)=>setMode(e.target.value)}\n                sx={{width: '100%',\n                  '& .MuiInputBase-input': {\n                  fontSize: '20px',\n                  padding: '5px 0',\n                  },\n                  '& .MuiInputLabel-root': {\n                  fontSize: '20px',\n                  },}}\n                  >\n                <MenuItem value=\"Offline\">Offline</MenuItem>\n                <MenuItem value=\"Online\">Online</MenuItem>\n              </Select>\n              <FormHelperText sx={{color : '#d32f2f'}}>{(isSubmit && !gender) ? \"Select Mode\" : \"\"}</FormHelperText>\n              </FormControl>\n          </Box>\n          <Box className=\"w-[95%] h-20 flex flex-col items-center justify-center\">\n            <Box sx={{ m: 1, position: 'relative'}} className=\"w-full flex items-center justify-center\">\n              <Button disabled={loading2} startIcon={(resume) ? <CheckCircleRounded /> : <CloudUpload />} color={(resume) ? 'success' : (isSubmit && !resume) ? 'error' : 'primary'} \n              component=\"label\" role={undefined} tabIndex={-1} variant='contained' sx={{width : '70%',marginBottom : (resumeName) ? '5px' : '0', height : '35px'}}>\n              <VisuallyHiddenInput type=\"file\" accept=\".pdf,.doc,.docx\" onChange={(e)=>handleFileChange(e,'Resume')} />\n              {(resume) ? 'Resume Uploaded' : 'Upload Resume'}</Button>\n              {loading2 && (\n                <CircularProgress\n                  size={24}\n                  sx={{\n                    color: 'primary',\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    marginTop: '-12px',\n                    marginLeft: '-12px',\n                  }}\n                />\n              )}\n            </Box>\n            {user === 'Student' && resume ? (<Link href={resume} target='_blank'>View</Link>) : \n            (<Typography>\n              {resumeName && (\n                resumeName.endsWith('.pdf') ||\n                resumeName.endsWith('.doc') ||\n                resumeName.endsWith('.docx')\n              ) ? (\n                resumeName\n              ) : null}\n            </Typography>)} \n            </Box>\n\n        </Box>\n    </Box>\n    <Box className=\"flex justify-between mt-5\">\n        <Button sx={{visibility : (user === 'Student' || editDetails) ? 'hidden' : 'visible'}} onClick={()=>{setDialogMsg('Back');setOpenDialog(true)}}>\n          Back\n        </Button>\n        <Button variant=\"contained\" endIcon={<ArrowForward />}\n        onClick={handelSubmit}\n        >\n          Next\n        </Button>\n    </Box>\n    </>\n  )\n}\n\nexport default PersonalInfo;\n","import React, { useEffect, useState } from 'react';\nimport { ArrowForward, ExpandMore, School } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Typography, FormControl, InputLabel, Select, MenuItem, Checkbox, FormControlLabel, FormHelperText, Dialog, DialogContent, DialogContentText, DialogTitle, DialogActions } from '@mui/material';\nimport NumberInput from '../noSpinnerField';\nimport InputField from '../InputField';\n\nconst EducationDetails = ({ handleBack, handleNext, highDegree, setHighDegree, educationData, setEducationData, handleShowSnackbar, editDetails }) => {\n    const [name10th, setName10th] = useState(null);\n    const [cGPA10th, setCGPA10th] = useState(null);\n    const [yearPass10, setYearPass10] = useState(null);\n    const [name12th, setName12th] = useState(null);\n    const [cGPA12th, setCGPA12th] = useState(null);\n    const [specialization12th, setSpecialization12th] = useState(null);\n    const [interStartYear, setInterStartYear] = useState(null);\n    const [interPassYear, setInterPassYear] = useState(null);\n    const [nameDegree, setNameDegree] = useState(null);\n    const [cGPADegree, setCGPADegree] = useState(null);\n    const [degreeSpecialization, setDegreeSpecialization] = useState(null);\n    const [degreePlace, setDegreePlace] = useState(null);\n    const [degreeStartYear, setDegreeStartYear] = useState(null);\n    const [degreePassYear, setDegreePassYear] = useState(null);\n    const [namePG, setNamePG] = useState(null);\n    const [cGPAPG, setCGPAPG] = useState(null);\n    const [pGSpecialization, setPGSpecialization] = useState(null);\n    const [pGPlace, setPGPlace] = useState(null);\n    const [pGStartYear, setPGStartYear] = useState(null);\n    const [pGPassYear, setPGPassYear] = useState(null);\n    const [get12th, setGet12th] = useState('Inter');\n    const [expanded, setExpanded] = useState(null);\n    const [onSubmit, setOnSubmit] = useState(false);\n    const [confirmLeapYear, setConfirmLeapYear] = useState(false);\n\n    const currentYear = new Date().getFullYear();\n    const years = Array.from({ length: 20 }, (_, index) => currentYear - index);\n\n    const handleChange = (panel) => {\n        setExpanded(panel)\n    };\n\n    useEffect(()=>{\n        setName10th(educationData.SSC_College_Name);\n        setCGPA10th(educationData.SSC_CGPA);\n        setYearPass10(educationData.SSC_Passed_Year);\n        setName12th(educationData.Inter_College_Name);\n        setCGPA12th(educationData.Inter_CGPA);\n        setSpecialization12th(educationData.Inter_Specialization);\n        setInterStartYear(educationData.Inter_Start_Year);\n        setInterPassYear(educationData.Inter_Passed_Year);\n        setNameDegree(educationData.Degree_College_Name);\n        setDegreePlace(educationData.Degree_College_Place);\n        setDegreeSpecialization(educationData.Degree_Specialization);\n        setCGPADegree(educationData.Degree_CGPA);\n        setDegreeStartYear(educationData.Degree_Start_Year);\n        setDegreePassYear(educationData.Degree_Passed_Year);\n        if(highDegree){\n            setNamePG(educationData.PG_College_Name);\n            setPGPlace(educationData.PG_College_Place);\n            setPGSpecialization(educationData.PG_Specialization);\n            setCGPAPG(educationData.PG_CGPA);\n            setPGStartYear(educationData.PG_Start_Year);\n            setPGPassYear(educationData.PG_Passed_Year);\n        }\n    },[educationData, highDegree])\n\n    const saveData = () => {\n        const data = {\n            SSC_College_Name : name10th,\n            SSC_CGPA : cGPA10th,\n            SSC_Passed_Year : yearPass10,\n            Inter_College_Name : name12th,\n            Inter_Specialization : specialization12th,\n            Inter_CGPA : cGPA12th,\n            Inter_Start_Year : interStartYear,\n            Inter_Passed_Year : interPassYear,\n            Degree_College_Name : nameDegree,\n            Degree_College_Place : degreePlace,\n            Degree_Specialization : degreeSpecialization,\n            Degree_CGPA : cGPADegree,\n            Degree_Start_Year : degreeStartYear,\n            Degree_Passed_Year : degreePassYear\n        }\n        if(highDegree){\n            const pGData = {\n                PG_College_Name : namePG,\n                PG_College_Place : pGPlace,\n                PG_Specialization : pGSpecialization,\n                PG_CGPA : cGPAPG,\n                PG_Start_Year : pGStartYear,\n                PG_Passed_Year : pGPassYear\n            }\n            const Data = {...data, ...pGData};\n            setEducationData(Data);\n        }else{\n            setEducationData(data);\n        };\n    }\n\n    const onSubmitDetails = () => {\n        setOnSubmit(true);\n        if(!checkFields())return;\n        saveData();\n        checkYearGap() ? handleNext() : setConfirmLeapYear(true);\n    };\n\n    const checkYearGap = () => {\n        if(parseInt(interStartYear) - parseInt(yearPass10) !== 0)return false;\n        if(parseInt(degreeStartYear) - parseInt(interPassYear) !== 0)return false;\n        if(highDegree){\n            if(parseInt(pGStartYear) - parseInt(degreePassYear) !== 0)return false\n        };\n        return true;\n    }\n\n    const checkFields = () => {\n        return (\n            name10th && cGPA10th && yearPass10 &&\n            interPassYear && interStartYear &&\n            specialization12th && name12th &&\n            cGPA12th && nameDegree &&\n            degreePlace && degreeSpecialization &&\n            degreeStartYear && degreePassYear &&\n            cGPADegree && (!highDegree || (namePG && pGSpecialization && pGPassYear && pGStartYear && pGPlace && cGPAPG))\n        );\n    };\n\n\n  return (\n    <>\n    <Box className=\"mt-8 w-full\" sx={{marginRight : '10%'}}>\n        <Accordion expanded={expanded === 'panel1'} onChange={()=>handleChange(expanded === 'panel1' ? null : 'panel1')} className={`${(onSubmit && (!yearPass10 || !name10th || !cGPA10th)) ? 'border-[1.5px] border-[#d32f2f]' : 'border-t-[1px] border-gray-300'}`}>\n        <AccordionSummary\n          expandIcon={<ExpandMore />}\n          aria-controls=\"panel1-content\"\n        >\n            <School className=\"text-gray-500\" sx={{fontSize : '28px', marginRight : '1%'}} />\n            <Typography variant='h6'>10th Standard Details</Typography>\n        </AccordionSummary>\n        <AccordionDetails className='w-full h-24 flex flex-row items-start justify-between'>\n            <InputField  className='w-[30%]' type='text' error={onSubmit && !name10th} helperText={(onSubmit && !name10th) ? \"Enter School Name\" : \"\"} value={name10th} onChange={(e)=>setName10th(e.target.value)} variant='standard' required label=\"10th School Name\" />\n            <NumberInput className='w-[30%]' error={onSubmit && !cGPA10th} helperText={(onSubmit && !cGPA10th) ? \"Enter CGPA\" : \"\"} value={cGPA10th} onChange={(e)=>setCGPA10th(e.target.value)} required label=\"10th CGPA\" />\n            <FormControl className='w-[30%]'>\n            <InputLabel shrink={yearPass10 ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && !yearPass10) ? '#d32f2f' : ''}}>Year of Passing*</InputLabel>\n            <Select\n                required\n                value={yearPass10}\n                error={onSubmit && !yearPass10}\n                onChange={(e)=>setYearPass10(e.target.value)}\n                variant=\"standard\"\n                sx={{\n                    '& .MuiInputBase-input': {\n                    fontSize: '20px',\n                    padding: '5px 0',\n                    },\n                    '& .MuiInputLabel-root': {\n                    fontSize: '20px',\n                    },}}>\n                {years.map((year) => (\n                <MenuItem key={year} value={year}>\n                    {year}\n                </MenuItem>\n                ))}\n            </Select>\n            {(onSubmit && !yearPass10) && <FormHelperText sx={{color : '#d32f2f',marginLeft : '0'}}>Select Passout Year</FormHelperText>}\n            </FormControl>\n        </AccordionDetails>\n        </Accordion>\n\n\n        <Accordion expanded={expanded === 'panel2'} onChange={()=>handleChange(expanded === 'panel2' ? null : 'panel2')} className={`${(onSubmit && (!interPassYear || !interStartYear || !name12th || !cGPA12th)) ? 'border-[1.5px] border-[#d32f2f]' : 'border-t-[1px] border-gray-300'}`} >  \n            <AccordionSummary expandIcon={<ExpandMore />}>\n                <School className=\"text-gray-500\" sx={{fontSize : '28px', marginRight : '1%'}} />\n                <Typography variant='h6'>12th Standard Details</Typography>\n            </AccordionSummary>\n            <AccordionDetails>    \n            <Box className=\"w-full\">\n                <FormControlLabel\n                error={(get12th === 'Inter' || get12th === 'Diploma') ? false : true}\n                label=\"Inter\"\n                control={<Checkbox required defaultChecked checked={(get12th === 'Inter' ? true : false)} onChange={(e)=>(e.target.checked ? setGet12th('Inter') : setGet12th('Diploma'))} />}\n                />\n                <FormControlLabel\n                error={(get12th === 'Inter' || get12th === 'Diploma') ? false : true}\n                label=\"Diploma\"\n                control={<Checkbox required checked={(get12th === 'Diploma' ? true : false)} onChange={(e)=>(e.target.checked ? setGet12th('Diploma') : setGet12th('Inter'))} />}\n                />\n            </Box>\n\n            <Box className=\"w-full h-24 flex flex-row items-start justify-between\">\n                <InputField label={`${get12th} College Name`} value={name12th} onChange={(e)=>setName12th(e.target.value)} error={onSubmit && !name12th} helperText={onSubmit && !name12th ? \"Enter College Name\" : \"\"} required variant='standard' className='w-[25%]' />\n                <InputField label={`${get12th} Specialization`} value={specialization12th} onChange={(e)=>setSpecialization12th(e.target.value)} error={onSubmit && !specialization12th} helperText={onSubmit && !specialization12th ? \"Enter Specialization\" : \"\"} required variant='standard' className='w-[20%]' />\n                <NumberInput required label={`${get12th} CGPA`} value={cGPA12th} onChange={(e)=>setCGPA12th(e.target.value)} error={onSubmit && !cGPA12th} helperText={onSubmit && !cGPA12th ? \"Enter Specialization\" : \"\"} className=\"w-[13%]\" />\n                <FormControl className='w-[14%]'>\n                <InputLabel shrink={interStartYear ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && !interStartYear) ? \"#d32f2f\" : \"\"}} >Year of Start*</InputLabel>\n                <Select\n                    value={interStartYear}\n                    onChange={(e)=>setInterStartYear(e.target.value)}\n                    variant=\"standard\"\n                    error={onSubmit && !interStartYear}\n                    sx={{\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                        },}}>\n                    {years.map((year) => {\n                        if(parseInt(year) >= parseInt(yearPass10))\n                        return(\n                        <MenuItem key={year} value={year}>\n                            {year}\n                        </MenuItem>\n                        )\n                    })}\n                </Select>\n                {(onSubmit && !interStartYear) && <FormHelperText sx={{color : '#d32f2f', marginLeft : '0'}}>Select Start Year</FormHelperText>}\n                </FormControl>\n\n                <FormControl className='w-[17%]'>\n                <InputLabel shrink={interPassYear ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && !interPassYear) ? \"#d32f2f\" : \"\"}}>Year of Passing*</InputLabel>\n                <Select\n                    value={interPassYear}\n                    onChange={(e)=>setInterPassYear(e.target.value)}\n                    variant=\"standard\"\n                    error={onSubmit && !interPassYear}\n                    sx={{\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                        },}}>\n                    {years.map((year) => {\n                        if(parseInt(year) > parseInt(interStartYear))\n                        return(\n                        <MenuItem key={year} value={year}>\n                            {year}\n                        </MenuItem>\n                        )\n                    })}\n                </Select>\n                {(onSubmit && !interPassYear) && <FormHelperText sx={{color : '#d32f2f',marginLeft : '0'}}>Select Year of Passing</FormHelperText>}\n                </FormControl>\n            </Box>\n            </AccordionDetails>\n        </Accordion>\n\n        \n        <Accordion expanded={expanded === 'panel3'} onChange={()=>handleChange(expanded === 'panel3' ? null : 'panel3')} className={`${(onSubmit && (!degreePassYear || !degreeStartYear || !degreePlace || !degreeSpecialization || !nameDegree || !cGPADegree)) ? 'border-[1.5px] border-[#d32f2f]' : 'border-t-[1px] border-gray-300'}`} >  \n            <AccordionSummary expandIcon={<ExpandMore />}>\n                <School className=\"text-gray-500\" sx={{fontSize : '28px', marginRight : '1%'}} />\n                <Typography variant='h6'>Under Graduation Details</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n            <Box sx={{marginBottom : '2%'}} className=\"w-full flex flex-col items-center justify-center\">\n                <Box className=\"flex flex-row items-center justify-between w-full\">\n                <InputField label=\"Under Graduation College Name\" value={nameDegree} onChange={(e)=>setNameDegree(e.target.value)} error={onSubmit && !degreePlace} helperText={(onSubmit && !degreePlace) ? \"Enter College Name\" : \"\"} required variant='standard' className='w-[23%]' />\n                <InputField label=\"Under Graduation Specialization\" value={degreeSpecialization} onChange={(e)=>setDegreeSpecialization(e.target.value)} error={onSubmit && !degreeSpecialization} helperText={(onSubmit && !degreeSpecialization) ? \"Enter Specialization\" : \"\"} required variant='standard' className='w-[23%]' />\n                <InputField label=\"Under Graduation College Location\" value={degreePlace} onChange={(e)=>setDegreePlace(e.target.value)} error={onSubmit && !degreePlace} helperText={(onSubmit && !degreePlace) ? \"Enter College Location\" : \"\"} required variant='standard' className='w-[23%]' />\n                <NumberInput required label=\"Under Graduation CGPA\" className=\"w-[23%]\" value={cGPADegree} onChange={(e)=>setCGPADegree(e.target.value)} error={onSubmit && !cGPADegree} helperText={(onSubmit && !cGPADegree) ? \"Enter CGPA\" : \"\"} />\n                </Box>\n                <Box className=\"flex flex-row items-center justify-between w-[49%] mt-5\">\n                <FormControl className='w-[47%]'>\n                <InputLabel shrink={degreeStartYear ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && !degreeStartYear) ? \"#d32f2f\" : \"\"}}>Year of Start*</InputLabel>\n                <Select\n                    value={degreeStartYear}\n                    onChange={(e)=>setDegreeStartYear(e.target.value)}\n                    variant=\"standard\"\n                    error={onSubmit && !degreeStartYear}\n                    sx={{\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                        },}}>\n                    {years.map((year) => {\n                        if(parseInt(year) >= parseInt(interPassYear))\n                        return(\n                        <MenuItem key={year} value={year}>\n                            {year}\n                        </MenuItem>\n                        )\n                    })}\n                </Select>\n                {(onSubmit && !degreeStartYear) && <FormHelperText sx={{marginLeft : '0', color : '#d32f2f'}}>Select Start Year</FormHelperText>}\n                </FormControl>\n\n                <FormControl className='w-[47%]'>\n                <InputLabel shrink={degreePassYear ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && !degreePassYear) ? \"#d32f2f\" : \"\"}}>Year of Passing*</InputLabel>\n                <Select\n                    value={degreePassYear}\n                    onChange={(e)=>setDegreePassYear(e.target.value)}\n                    variant=\"standard\"\n                    error={onSubmit && !degreePassYear}\n                    sx={{\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                        },}}>\n                    <MenuItem value={'Currently Pursuing'}>\n                        Currently Pursuing\n                    </MenuItem>\n                    {years.map((year) => {\n                        if(parseInt(year) > parseInt(degreeStartYear))\n                        return(\n                        <MenuItem key={year} value={year}>\n                            {year}\n                        </MenuItem>\n                        )\n                    })}\n                </Select>\n                {(onSubmit && !degreePassYear) && <FormHelperText sx={{marginLeft : '0', color : '#d32f2f'}}>Select Year of PAssing</FormHelperText>}\n                </FormControl>\n                </Box>\n            </Box>\n            </AccordionDetails>\n        </Accordion>\n\n\n        <Accordion expanded={expanded === 'panel4'} onChange={()=>handleChange(expanded === 'panel4' ? null : 'panel4')} className={`${((onSubmit && highDegree) && (!pGStartYear || !pGPassYear || !pGPlace || !pGSpecialization || !namePG || !cGPAPG)) ? 'border-[1.5px] border-[#d32f2f]' : 'border-t-[1px] border-gray-300'}`} >  \n            <AccordionSummary expandIcon={<ExpandMore />}>\n                <School className=\"text-gray-500\" sx={{fontSize : '28px', marginRight : '1%'}} />\n                <Typography variant='h6'>Post Graduation Details</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n            <Box className=\"w-full mt-0\">\n                <FormControlLabel\n                label=\"Post Graduation\"\n                control={<Checkbox checked={highDegree ? true : false} onChange={(e)=>{\n                    (e.target.checked ? setHighDegree('PG') : setHighDegree(null));\n                    if(editDetails)handleShowSnackbar('warning','Please note that if you change the PG details option, your previously edited educational years may revert back to their original values. Please ckeck once and continue.')}} />}\n                />\n            </Box>\n\n            {highDegree && (<Box sx={{margin : '0 0 2% 0'}} className=\"w-full flex flex-col items-center justify-between\">\n                <Box className=\"w-full flex flex-row items-center justify-between\">\n                <InputField label=\"PG College Name\" value={namePG} onChange={(e)=>setNamePG(e.target.value)} error={(onSubmit && highDegree && !namePG)} required variant='standard' className='w-[23%]' />\n                <InputField label=\"PG Specialization\" value={pGSpecialization} onChange={(e)=>setPGSpecialization(e.target.value)} error={(onSubmit && highDegree && !pGSpecialization)} required variant='standard' className='w-[23%]' />\n                <InputField label=\"PG Place\" value={pGPlace} onChange={(e)=>setPGPlace(e.target.value)} error={(onSubmit && highDegree && !pGPlace)} required variant='standard' className='w-[23%]' />\n                <NumberInput required label=\"PG CGPA\" className=\"w-[23%]\" value={cGPAPG} onChange={(e)=>setCGPAPG(e.target.value)} error={(onSubmit && highDegree && !cGPAPG)} />\n                </Box>\n\n                <Box className=\"flex flex-row items-center justify-between w-[49%] mt-5\">\n                <FormControl className='w-[47.5%]'>\n                <InputLabel shrink={pGStartYear ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && highDegree && !pGStartYear) ? '#d32f2f' : ''}}>Year of Start*</InputLabel>\n                <Select\n                    value={pGStartYear}\n                    onChange={(e)=>setPGStartYear(e.target.value)}\n                    variant=\"standard\"\n                    error={onSubmit && highDegree && !pGStartYear}\n                    sx={{\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                        },}}>\n                    {years.map((year) => {\n                        if(parseInt(year) >= parseInt(degreePassYear))\n                        return(\n                        <MenuItem key={year} value={year}>\n                            {year}\n                        </MenuItem>\n                        )\n                    })}\n                </Select>\n                {(onSubmit && highDegree && !pGStartYear) && <FormHelperText sx={{color : '#d32f2f', marginLeft : '0'}}>Select Start Year</FormHelperText>}\n                </FormControl>\n\n                <FormControl className='w-[47.5%]'>\n                <InputLabel shrink={pGPassYear ? true : false} sx={{fontSize : \"20px\", marginLeft : '-10px', color : (onSubmit && highDegree && !pGPassYear) ? '#d32f2f' : ''}}>Year of Passing*</InputLabel>\n                <Select\n                    value={pGPassYear}\n                    onChange={(e)=>setPGPassYear(e.target.value)}\n                    variant=\"standard\"\n                    error={onSubmit && highDegree && !pGPassYear}\n                    sx={{\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                        },}}>\n                    <MenuItem value={'Currently Pursuing'}>\n                        Currently Pursuing\n                    </MenuItem>\n                    {years.map((year) => {\n                        if(parseInt(year) > parseInt(pGPassYear))\n                        return(\n                        <MenuItem key={year} value={year}>\n                            {year}\n                        </MenuItem>\n                        )\n                    })}\n                </Select>\n                {(onSubmit && highDegree && !pGPassYear) && <FormHelperText sx={{color : '#d32f2f', marginLeft : '0'}}>Select Year of Passing</FormHelperText>}\n                </FormControl>\n            </Box>\n            </Box>)}\n            </AccordionDetails>\n        </Accordion>\n        \n\n    </Box>\n    <Box className=\"flex justify-between mt-5\">\n        <Button onClick={()=>{handleBack();saveData()}}>\n        Back\n        </Button>\n        <Button variant=\"contained\" \n        onClick={onSubmitDetails} endIcon={<ArrowForward />}>Next</Button>\n    </Box>\n\n    <Dialog open={confirmLeapYear} sx={{zIndex : '910'}}>\n        <DialogTitle>Are you sure you want to continue?</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Before you decide to continue, are you aware of the year gap that exists? <br/>\n                It’s something to think about.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button variant='outlined' onClick={()=>setConfirmLeapYear(false)}>No, I want to change</Button>\n            <Button variant='contained' onClick={handleNext}>Yes, Continue</Button>\n        </DialogActions>\n    </Dialog>\n    </>\n  )\n}\n\nexport default EducationDetails;","import React, { useEffect, useState } from 'react';\nimport { Box, Stack, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, Button, MenuItem, Select, FormControl, Autocomplete, InputLabel } from '@mui/material';\nimport InputField from './InputField';\nimport { AccountBalanceWalletRounded, LocationCityRounded, WorkHistory } from '@mui/icons-material';\n\nconst SelectDialog = ({ dialogOpen, setDialopOpen, data, type , setRelocate, setCities, bondDuration, setBondDuration, internshipType, setInternshipType }) => {\n    const [dummyValues, setDummyValues] = useState(null);\n    \n    const handleClose = () => {\n        setRelocate((dummyValues) ? 'Yes (Preferred More)' : 'No');\n        setDialopOpen(false);\n    }\n    const handleSubmit = () => {\n        setDummyValues(null);\n        handleClose();\n    }\n    const handleAutocompleteChange = (e, value) => {\n        setDummyValues(value);\n        setCities(value);\n    };\n\n  return (\n    <Dialog\n        open={dialogOpen}\n        sx={{zIndex : '950'}}\n    >\n        <img src='/images/V-Cube-Logo.png' alt='' width='20%' className='ml-[40%]' />\n        {type === 'Location' && <><DialogTitle>Select Desired Locations</DialogTitle>\n        <DialogContent>\n        <DialogContentText className='w-[500px]'>\n            <Box className=\"w-full h-40 flex flex-row items-center justify-between\">\n            <LocationCityRounded sx={{marginTop : '20px', fontSize : '30px'}} />\n            <Stack spacing={3} className='w-[90%]'>\n                <Autocomplete\n                    multiple\n                    freeSolo\n                    options={data}\n                    getOptionLabel={(option) => option}\n                    onChange={handleAutocompleteChange}\n                    renderInput={(params) => (\n                    <InputField\n                        {...params}\n                        variant=\"standard\"\n                        label='Select City'\n                        placeholder='Choose your prefered loactions'\n                    />\n                    )}\n            /></Stack>\n            </Box>\n        </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleSubmit} variant='contained' sx={{margin : '15px 15px 15px 0'}}>\n            Submit\n        </Button>\n        </DialogActions></>}\n\n        {type === 'Bond' && <>\n        <DialogTitle>Specify the duration of the bond you can accepted?</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                <WorkHistory sx={{fontSize : '30px', margin : '50px 10px 0 0'}}/>\n                <FormControl className='w-[90%]' sx={{margin : '30px 0'}}>\n                    <InputLabel sx={{fontSize : '20px', marginLeft : '-10px'}}>Choose Bond Duration</InputLabel>\n                    <Select\n                    variant='standard'\n                    value={bondDuration}\n                    onChange={(e)=>{setBondDuration(e.target.value);setDialopOpen(false)}}\n                    sx={{width: '100%',\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                    },}}>\n                        <MenuItem value='1-2 Years'>1-2 Years</MenuItem>\n                        <MenuItem value='2-3 Years'>2-3 Years</MenuItem>\n                        <MenuItem value='3-5 Years'>3-5 Years</MenuItem>\n                        <MenuItem value='Open to any bond duration'>Open to any bond duration</MenuItem>\n                    </Select>\n                </FormControl>\n            </DialogContentText>\n        </DialogContent>\n        </>}\n\n        {type === 'Internship' && <>\n        <DialogTitle>Which Intership opportunity you are looking for ?</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                <AccountBalanceWalletRounded sx={{fontSize : '30px', margin : '50px 10px 0 0'}}/>\n                <FormControl className='w-[90%]' sx={{margin : '30px 0'}}>\n                    <InputLabel sx={{fontSize : '20px', marginLeft : '-10px'}}>Select Internship Type</InputLabel>\n                    <Select\n                    variant='standard'\n                    value={internshipType}\n                    onChange={(e)=>{setInternshipType(e.target.value);setDialopOpen(false)}}\n                    sx={{width: '100%',\n                        '& .MuiInputBase-input': {\n                        fontSize: '20px',\n                        padding: '5px 0',\n                        },\n                        '& .MuiInputLabel-root': {\n                        fontSize: '20px',\n                    },}}>\n                        <MenuItem value='Paid'>Paid</MenuItem>\n                        <MenuItem value='UnPaid'>UnPaid</MenuItem>\n                        <MenuItem value='Both'>Both</MenuItem>\n                    </Select>\n                </FormControl>\n            </DialogContentText>\n        </DialogContent>\n        </>}\n\n    </Dialog>\n  )\n};\n\nexport default SelectDialog;","import React, { useContext, useEffect, useState } from 'react';\nimport { Box, Button, TextField, Select, MenuItem, FormControl, InputLabel, Autocomplete, Stack, InputAdornment, Typography, FormHelperText } from '@mui/material';\nimport { CheckCircleRounded, PersonPinCircle, Moving, AccessTime, NightsStay, Feed, Work, WorkHistory, AccountBalanceWalletRounded, PsychologyRounded, Title, WorkRounded, WorkOutlineOutlined, WorkHistoryRounded } from '@mui/icons-material';\nimport InputField from '../InputField';\nimport SelectDialog from '../SelectDialog';\nimport { allTechnologies, Cities } from '../ExternalData';\nimport { StudentsContext } from '../api/students';\nimport { useNavigate } from 'react-router-dom';\nimport { DateTime } from '../date-time';\n\nconst PlacementRequirements = ({ handleBack, personalData, educationData, placementData, setPlacementData, setIsLoading, handleShowSnackbar, setIsOpen, selectedCourse, editDetails, joiningDate, refreshData }) => {\n    const { postStudentData, patchStudentData } = useContext(StudentsContext);\n    const dateTime = DateTime().split(' ');\n    const navigate = useNavigate();\n    const [skills, setSkills] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [location, setLocation] = useState(null);\n    const [relocate, setRelocate] = useState(null);\n    const [immediateJoin, setImmediateJion] = useState(null);\n    const [shifts, setShifts] = useState(null);\n    const [bondDuration, setBondDuration] = useState(null);\n    const [isbond, setIsBond] = useState(false);\n    const [isInterships, setIsInterships] = useState(false);\n    const [internshipType, setInternshipType] = useState(null);\n    const [experience, setExperience] = useState(null);\n    const [employement, setEmployement] = useState(null);\n    const [dialogOpen, setDialopOpen] = useState(false);\n    const [dialogType, setDialogType] = useState(null);\n    const [onSubmit, setOnSubmit] = useState(false);\n\n    useEffect(()=>{\n        if(placementData){\n            if(placementData && placementData.Skills)setSkills(placementData.Skills.map(skill=>skill))\n            setCities(placementData.Cities)\n            setLocation(placementData.Location)\n            setRelocate(placementData.Relocate)\n            setImmediateJion(placementData.Immediate_Jion)\n            setShifts(placementData.Shifts)\n            setIsBond(placementData.Bond)\n            setBondDuration(placementData.Bond_Duration)\n            setIsInterships(placementData.Internship)\n            setInternshipType(placementData.Internship_Type)\n            setExperience(placementData.Experience || null);\n            setEmployement(placementData.Employement || null);\n        }\n    },[placementData])\n\n    const saveData = () =>{\n        const data = {\n            Skills : skills,\n            Cities : cities,\n            Location : location,\n            Relocate : relocate,\n            Immediate_Jion : immediateJoin,\n            Shifts : shifts,\n            Bond : isbond,\n            Bond_Duration : bondDuration,\n            Internship : isInterships,\n            Internship_Type : internshipType,\n            Experience : experience,\n            Employement : employement\n        }\n        setPlacementData(data);\n        return data;\n    }\n    \n    const selectInputs = [{\n        Value : relocate,\n        Icon : <Moving className=\"text-gray-500\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}}/>,\n        Title : 'Willing to relocate ? *',\n        Items : ['Yes (Preferred More)', 'No']\n        },{\n            Value : immediateJoin,\n            Icon : <AccessTime className=\"text-gray-500\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}}/>,\n            Title : 'Immediate Joiner ? *',\n            Items : ['Yes', 'No']\n        },{\n            Value : shifts,\n            Icon : <NightsStay className=\"text-gray-500\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}}/>,\n            Title : 'Willing to work for Relational Shifts ? *',\n            Items : ['Yes (Preferred More)', 'No']\n        },{\n            Value : isbond !== null && isbond === true ? 'Yes' : (isbond === false) ? 'No' : \"\",\n            Icon : <Feed className=\"text-gray-500\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}}/>,\n            Title : 'Willing to work on Bond ? *',\n            Items : ['Yes', 'No'],\n        },{\n            Value : isInterships !== null && isInterships === true ? 'Yes' : (isInterships === false) ? 'No' : \"\",\n            Icon : <Work className=\"text-gray-500\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}}/>,\n            Title : 'Willing to work for Interships ? *',\n            Items : ['Yes', 'No'],\n        },{\n            Value : experience,\n            Icon : <WorkOutlineOutlined className=\"text-gray-500 mt-6\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}} />,\n            Title : 'Select Your Experience',\n            Items : ['Pursuing Studies','Fresher','1-2y','3-5y','5y+']\n        },{\n            Value : employement,\n            Icon : <WorkHistoryRounded className=\"text-gray-500 mt-6\" sx={{fontSize : '30px', margin : '23px 10px 0 0'}} />,\n            Title : 'Select Your Employement',\n            Items : ['Not Seeking Opportunities','Open to Work','Currently Working as a Intern','Currently Working as an Employee']\n        }\n    ];\n\n    const handleSelect = (value, title) => {\n        if(title.includes('work on Bond')){\n             setIsBond(value === 'Yes' ? true : false);\n             if(value === 'No')setBondDuration(null);\n             if(value === 'Yes'){\n                setDialogType('Bond')\n                setDialopOpen(true);\n             }\n        }\n        if(title.includes('work for Interships')){\n            setIsInterships(value === 'Yes' ? true : false);\n            if(value === 'No')setInternshipType(null);\n            if(value === 'Yes'){\n                setDialogType('Internship')\n                setDialopOpen(true);\n             }\n        }\n        if(title.includes('relocate')){\n            if(value === 'No')setRelocate('No');\n            if(value.includes('Yes')){\n                setDialogType('Location')\n                setDialopOpen(true);\n            }\n        }\n        if(title.includes('Relational Shifts')){\n            setShifts(value);\n        }if(title.includes('Immediate Joiner')){\n            setImmediateJion(value);\n        };\n        if(title.includes('Experience')){\n            setExperience(value);\n        }\n        if(title.includes('Employement')){\n            setEmployement(value);\n        }\n    };\n\n    const submitDetails = async() => {\n        setOnSubmit(true);\n        if(!checkFields())return;\n        setIsLoading(true);\n        saveData();\n        personalData['Course'] = selectedCourse;\n        const personalInfo = JSON.stringify(personalData);\n        const educationInfo = JSON.stringify(educationData);\n        const placementInfo = JSON.stringify(saveData());\n        const data = {\n            \"Name\" : personalData.Name,\n            \"Email\" : personalData.Email,\n            \"Phone\" : personalData.Phone,\n            \"BatchName\" : personalData.BatchName,\n            \"Course\" : personalData.Course,\n            \"Personal_Info\": personalInfo,\n            \"Educational_Info\": educationInfo,\n            \"Placement_Info\": placementInfo,\n            \"Joining_Date\": editDetails ? joiningDate : dateTime[0],\n        }\n        if(editDetails)data['id'] = JSON.parse(sessionStorage.getItem('StudentDetails_ID'))\n        const result = editDetails ? await patchStudentData(data) : await postStudentData(data);\n        if (result && result.message){\n            handleShowSnackbar('error',result.message);\n        }else if (result === true){\n            refreshData();\n            handleShowSnackbar('success',`Student - ${personalData.Name} details ${editDetails ? 'updated' : 'added'} successfully.`);\n            setIsOpen(false);\n        }\n    };\n\n    const checkFields = () => {\n        if(\n            (skills && skills.length > 0) &&\n            (relocate === 'No' || (cities && cities.length > 0)) &&\n            location &&\n            immediateJoin &&\n            shifts &&\n            (!isbond || bondDuration) &&\n            (!isInterships || internshipType) &&\n            experience &&\n            employement\n        )return true;\n        return false;\n    };\n\n    const getCurrentCityAndState = () => {\n        setIsLoading(true);\n        setTimeout(()=>{\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n            (position) => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`)\n                .then(response => response.json())\n                .then(data => {\n                const city = data.city || data.locality;\n                const state = data.principalSubdivision;\n    \n                setLocation(`${city}, ${state}~${latitude},${longitude}`);\n                })\n                .catch(error => {\n                handleShowSnackbar('error','Error fetching location data');\n                });\n            },\n            (error) => {\n                handleShowSnackbar('error','Error getting location');  \n            }\n        );\n        } else {\n            handleShowSnackbar('error','Geolocation is not supported by this browser'); \n        }    \n    },1500)\n  };\n  \n\n  return (\n    <>\n    <Box className=\"w-full h-24 mt-5 flex flex-row items-center justify-between\">\n    <PsychologyRounded className='text-gray-500' sx={{fontSize : '35px', marginTop : '20px'}}/>\n    <Stack spacing={3} className='w-[96.5%]'>\n        <Autocomplete\n            multiple\n            freeSolo\n            options={allTechnologies}\n            getOptionLabel={(option) => option}\n            value={skills}\n            onChange={(e,values)=>setSkills(values)}\n            renderInput={(params) => (\n            <InputField required\n                error={onSubmit && (!skills || (skills && skills.length === 0))}\n                helperText={onSubmit && (!skills || (skills && skills.length === 0)) ? \"Select Skills\" : \"\"}\n                {...params}\n                variant=\"standard\"\n                label=\"Select Skills\"\n                placeholder=\"Skills\"\n            />\n            )}\n    /></Stack>\n    </Box>\n    <Box className=\"mt-7 mb-10 w-full h-80 grid grid-cols-2\" sx={{rowGap : '10px', columnGap : '50px'}}>\n        <Box className=\"w-full flex flex-row items-start justify-between relative\">\n        <PersonPinCircle className=\"text-gray-500\" sx={{fontSize : '35px', margin : '20px 10px 0 0'}} />\n        <InputField type='text' variant='standard' label=\"Current Location\" required\n        value={location && location.split('~')[0]}\n        onChange={(e)=>setLocation(e.target.value)}\n        error={onSubmit && !location}\n        InputLabelProps={{ shrink: (location) ? true : false }} \n        InputProps={{endAdornment: <InputAdornment position=\"end\">\n                <Typography color='primary' className='hover:underline cursor-pointer' onClick={getCurrentCityAndState}>Auto Fetch Location</Typography>\n            </InputAdornment>}}\n        helperText={onSubmit && !location ? \"Enter Current Location\" : \"\"}\n        sx={{width: '100%'}}\n        />\n        </Box>\n\n        {selectInputs.map((options)=>(\n        <Box className='w-full h-20 flex flex-row items-start justify-between'>\n        {options.Icon}\n        <FormControl variant=\"standard\" sx={{width : '100%'}}>\n        <InputLabel shrink={options.Value ? true : false} sx={{fontSize : '20px', color : (onSubmit && !options.Value) ? '#d32f2f' : \"\"}}>{options.Title}</InputLabel>\n            <Select\n                variant='standard'\n                value={options.Value}\n                error={onSubmit && !options.Value}\n                onChange={(e)=>handleSelect(e.target.value,options.Title)}\n                sx={{width: '100%',\n                '& .MuiInputBase-input': {\n                fontSize: '20px',\n                padding: '5px 0',\n                },\n                '& .MuiInputLabel-root': {\n                fontSize: '20px',\n                },}}\n                >\n                {options.Items.map((item)=>(\n                    <MenuItem value={item}>{item}</MenuItem>\n                ))}\n            </Select>\n            <FormHelperText sx={{color : '#d32f2f'}}>{(onSubmit && !options.Value) ? options.Txt || 'Select an Option' : \"\"}</FormHelperText>\n        </FormControl>\n        </Box>\n        ))}\n    </Box>\n\n    <SelectDialog dialogOpen={dialogOpen} setDialopOpen={setDialopOpen} data={Cities} type={dialogType} setRelocate={setRelocate} setCities={setCities}\n                  bondDuration={bondDuration} setBondDuration={setBondDuration} internshipType={internshipType} setInternshipType={setInternshipType} />\n\n    <Box className=\"flex justify-between mt-5\">\n        <Button onClick={()=>{handleBack();saveData()}}>\n        Back\n        </Button>\n        <Button variant=\"contained\" onClick={submitDetails} endIcon={<CheckCircleRounded />}>Finish</Button>\n    </Box>\n    </>\n  )\n\n};\n\nexport default PlacementRequirements;\n","import React, { useEffect, useState } from 'react';\nimport { Stepper, Step, StepLabel, Button, Box, Typography } from '@mui/material';\nimport PersonalInfo from './PersonalInfo';\nimport EducationDetails from './EducationDetails';\nimport PlacementRequirements from './PlacementRequirements';\n\nconst steps = ['Personal Information', 'Education Details', 'Placement Requirements'];\n\nconst SimpleStepper = ({ handleShowSnackbar, setIsLoading, setOpenDialog, setIsOpen, setDialogMsg, student_Personal_Details, student_Education_Details, student_Placement_Details, user, selectedCourse, editDetails, joiningDate, refreshData }) => {\n  const [personalData, setPersonalData] = useState({});\n  const [educationData, setEducationData] = useState({});\n  const [placementData, setPlacementData] = useState({});\n  const [activeStep, setActiveStep] = useState(0);\n  const [resumeName, setResumeName] = useState(null);\n  const [highDegree, setHighDegree] = useState(null);\n\n  const getStudentDetails = () => {\n    if(user === 'Student' || editDetails){\n      if(student_Personal_Details)setPersonalData(student_Personal_Details);\n      if(student_Education_Details && student_Education_Details !== 'N/A')setEducationData(student_Education_Details);\n      if(student_Placement_Details && student_Placement_Details !== 'N/A')setPlacementData(student_Placement_Details);\n      if(student_Placement_Details !== 'N/A' && student_Education_Details.PG_Specialization)setHighDegree('PG');\n    }\n  };\n\n  useEffect(()=>{\n    getStudentDetails();\n  },[])\n\n  const handleNext = () => {\n    setActiveStep((prev) => Math.min(prev + 1, steps.length - 1));\n  };\n\n  const handleBack = () => {\n    setActiveStep((prev) => Math.max(prev - 1, 0));\n  };\n\n  return (\n    <Box className=\"w-full h-full flex flex-col items-center justify-start bg-[#fafbfb]\">\n    <Box className=\"w-[90%] mt-10 h-full\">\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      <Box sx={{ padding: 2 }}>\n        {activeStep === 0 && <Typography>Enter your personal information here.</Typography>}\n        {activeStep === 1 && <Typography>Provide your education details here.</Typography>}\n        {activeStep === 2 && <Typography>Provide Placement Requirements here.</Typography>}\n\n        {personalData && activeStep === 0 ? <PersonalInfo personalData={personalData} setPersonalData={setPersonalData} resumeName={resumeName} \n                                          setResumeName={setResumeName} handleNext={handleNext} handleShowSnackbar={handleShowSnackbar} editDetails={editDetails}\n                                          setOpenDialog={setOpenDialog} setDialogMsg={setDialogMsg} user={user} selectedCourse={selectedCourse} />\n        : (activeStep === 1) ? <EducationDetails handleBack={handleBack} handleNext={handleNext} highDegree={highDegree} setHighDegree={setHighDegree} \n                              educationData={educationData} setEducationData={setEducationData} handleShowSnackbar={handleShowSnackbar} editDetails={editDetails} />\n         : <PlacementRequirements handleBack={handleBack} personalData={personalData} educationData={educationData} placementData={placementData} \n                                  setPlacementData={setPlacementData} handleShowSnackbar={handleShowSnackbar} setIsLoading={setIsLoading} setIsOpen={setIsOpen}\n                                  selectedCourse={selectedCourse} editDetails={editDetails} joiningDate={joiningDate} refreshData={refreshData} />}\n\n      </Box>\n    </Box>\n    </Box>\n  );\n};\n\nexport default SimpleStepper;\n"],"names":["_ref","open","title","content","btnValue","dialogMsg","setDialog","setIsLoading","handle_Close","setUploadManually","setImportData","isOpen","setIsOpen","useState","useEffect","handleClose","_jsxs","Dialog","onClose","sx","zIndex","children","_jsx","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","handleSubmit","variant","personalData","setPersonalData","resumeName","setResumeName","handleNext","handleShowSnackbar","setOpenDialog","setDialogMsg","user","selectedCourse","editDetails","fetchBatchData","useContext","BatchContext","checkStudentDetails","StudentsAuthContext","batchData","setBatchData","batch","setBatch","name","setName","email","setEmail","phone","setPhone","alterPhone","setAlterPhone","gender","setGender","resume","setResume","image","setImage","linkedIn","setLinkedIn","gitHub","setGithub","mode","setMode","isSubmit","setIsSubmit","loading1","setLoading1","loading2","setLoading2","async","res","message","Array","isArray","length","fetchData","VisuallyHiddenInput","styled","clip","clipPath","height","overflow","position","bottom","left","whiteSpace","width","Image","BatchName","Name","Phone","Alernate_Phone","Email","Gender","Linkedin","Github","Resume","Mode","handleFileChange","event","type","file","target","files","setTimeout","size","toFixed","extension","split","extensionType","acceptedFormats","includes","reader","FileReader","onloadend","result","readAsDataURL","checkPhoneError","getvalue","value","toString","startsWith","saveData","_Fragment","Box","className","src","alt","m","marginTop","disabled","component","role","undefined","tabIndex","startIcon","CheckCircleRounded","CloudUpload","color","accept","onChange","e","CircularProgress","top","marginLeft","columnGap","PeopleRounded","fontSize","FormControl","InputLabel","shrink","Select","readOnly","error","padding","map","data","MenuItem","FormHelperText","BadgeRounded","InputField","required","helperText","label","LocalPhoneRounded","NumberInput","EmailRounded","WcRounded","marginBottom","Link","href","Typography","endsWith","visibility","endIcon","ArrowForward","res1","res2","status","code","handleBack","highDegree","setHighDegree","educationData","setEducationData","name10th","setName10th","cGPA10th","setCGPA10th","yearPass10","setYearPass10","name12th","setName12th","cGPA12th","setCGPA12th","specialization12th","setSpecialization12th","interStartYear","setInterStartYear","interPassYear","setInterPassYear","nameDegree","setNameDegree","cGPADegree","setCGPADegree","degreeSpecialization","setDegreeSpecialization","degreePlace","setDegreePlace","degreeStartYear","setDegreeStartYear","degreePassYear","setDegreePassYear","namePG","setNamePG","cGPAPG","setCGPAPG","pGSpecialization","setPGSpecialization","pGPlace","setPGPlace","pGStartYear","setPGStartYear","pGPassYear","setPGPassYear","get12th","setGet12th","expanded","setExpanded","onSubmit","setOnSubmit","confirmLeapYear","setConfirmLeapYear","currentYear","Date","getFullYear","years","from","_","index","handleChange","panel","SSC_College_Name","SSC_CGPA","SSC_Passed_Year","Inter_College_Name","Inter_CGPA","Inter_Specialization","Inter_Start_Year","Inter_Passed_Year","Degree_College_Name","Degree_College_Place","Degree_Specialization","Degree_CGPA","Degree_Start_Year","Degree_Passed_Year","PG_College_Name","PG_College_Place","PG_Specialization","PG_CGPA","PG_Start_Year","PG_Passed_Year","pGData","Data","checkYearGap","parseInt","checkFields","marginRight","Accordion","AccordionSummary","expandIcon","ExpandMore","School","AccordionDetails","year","FormControlLabel","control","Checkbox","defaultChecked","checked","margin","onSubmitDetails","dialogOpen","setDialopOpen","setRelocate","setCities","bondDuration","setBondDuration","internshipType","setInternshipType","dummyValues","setDummyValues","LocationCityRounded","Stack","spacing","Autocomplete","multiple","freeSolo","options","getOptionLabel","option","handleAutocompleteChange","renderInput","params","placeholder","WorkHistory","AccountBalanceWalletRounded","placementData","setPlacementData","joiningDate","refreshData","postStudentData","patchStudentData","StudentsContext","dateTime","DateTime","skills","setSkills","useNavigate","cities","location","setLocation","relocate","immediateJoin","setImmediateJion","shifts","setShifts","isbond","setIsBond","isInterships","setIsInterships","experience","setExperience","employement","setEmployement","dialogType","setDialogType","Skills","skill","Cities","Location","Relocate","Immediate_Jion","Shifts","Bond","Bond_Duration","Internship","Internship_Type","Experience","Employement","selectInputs","Value","Icon","Moving","Title","Items","AccessTime","NightsStay","Feed","Work","WorkOutlineOutlined","WorkHistoryRounded","PsychologyRounded","allTechnologies","values","rowGap","PersonPinCircle","InputLabelProps","InputProps","endAdornment","InputAdornment","getCurrentCityAndState","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","fetch","then","response","json","city","locality","state","principalSubdivision","catch","handleSelect","item","Txt","SelectDialog","personalInfo","JSON","stringify","educationInfo","placementInfo","Course","parse","sessionStorage","getItem","steps","student_Personal_Details","student_Education_Details","student_Placement_Details","activeStep","setActiveStep","prev","Math","min","max","Stepper","Step","StepLabel","PersonalInfo","EducationDetails","PlacementRequirements"],"sourceRoot":""}