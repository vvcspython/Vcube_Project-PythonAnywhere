{"version":3,"file":"static/js/1554.c0ee685a.chunk.js","mappings":"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","sources":["components/student-info/PieChat.js","components/student-info/GuageChart.js","components/student-info/Performance.js"],"sourcesContent":["import React from 'react';\nimport { PieChart } from '@mui/x-charts/PieChart';\nimport { Box } from '@mui/material';\n\nconst PerformancePieChat = ({ classes, mock, interview, }) => {\n    const runClasses = [classes, mock, interview];\n    const data = [\n        {value: classes.split('~')[0] === '0' ? 1 : classes.split('~')[0], label: `Classes Attendance • ${classes.split('~')[1]} / ${classes.split('~')[0]}` },\n        {value: mock.split('~')[0] === '0' ? 1 : classes.split('~')[0], label: `Weekly Tests Attendance • ${mock.split('~')[1]} / ${mock.split('~')[0]}` },\n        {value: interview.split('~')[0] === '0' ? 1 : classes.split('~')[0], label: `Interviews Attendance • ${interview.split('~')[1]} / ${interview.split('~')[0]}`},\n      ];\n\n  return (\n    <Box className=\"w-1/2 h-full flex items-center justify-center\">\n        <PieChart\n        series={[\n            {\n              data,\n              valueFormatter: (params,index) => {return `Out of ${runClasses[index.dataIndex].split('~')[0]} ${params.label.split(' ')[0]} Attended ${runClasses[index.dataIndex].split('~')[1]}`;},\n              highlightScope: { faded: 'global', highlighted: 'item' },\n              faded: { innerRadius: 30, additionalRadius: -30, color: 'gray' },\n            },\n        ]}\n        colors={['#02b2af','#2e96ff','#2731c8']}\n        height={200}\n        />\n    </Box>\n  )\n}\n\nexport default PerformancePieChat;","import React, { useEffect, useState } from 'react';\nimport {\n  GaugeContainer,\n  GaugeValueArc,\n  GaugeReferenceArc,\n  useGaugeState,\n} from '@mui/x-charts';\nimport { Box, Typography } from '@mui/material';\n\nexport const GaugeChart = ({ Guagevalue }) => {\n  const [value, setValue] = useState(0);\n\n  useEffect(()=>{\n    for(let i = 0; i <= Guagevalue; i++){\n      setTimeout(()=>{\n        setValue(i)\n      }, 15 * i)\n    };\n  },[Guagevalue])\n\n\n  const getColor = (value <= 35) ? \"red\" : (value > 35 && value <= 50) ? \"gold\" : (value > 50 && value <= 75) ? \"orange\" : \"green\";\n  const performance_name = (value <= 35) ? \"Poor\" : (value > 35 && value <= 50) ? \"Average\" : (value > 50 && value <= 75) ? \"Good\" : \"Excellent\";\n\n  const GaugePointer = () => {\n    const { valueAngle, outerRadius, cx, cy } = useGaugeState();\n  \n    if (valueAngle === null) {\n      return null;\n    }\n  \n    const target = {\n      x: cx + outerRadius * Math.sin(valueAngle),\n      y: cy - outerRadius * Math.cos(valueAngle),\n    };\n    return (\n      <g>\n        <circle cx={cx} cy={cy} r={5} fill={getColor} />\n        <path\n          d={`M ${cx} ${cy} L ${target.x} ${target.y}`}\n          stroke={getColor}\n          strokeWidth={3}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <Box className='w-1/2 relative h-64 mb-5 flex flex-col items-center'>\n    <GaugeContainer\n      width={250}\n      height={250}\n      startAngle={-110}\n      endAngle={110}\n      value={value}\n    >\n      <GaugeReferenceArc />\n      <GaugeValueArc />\n      <GaugePointer />\n    </GaugeContainer>\n    <Box className=\"absolute bottom-14 left-0 w-full\">\n      <Typography variant='h5' className='text-center w-full' sx={{fontWeight : 'bold', color : `${getColor}`}}>{performance_name}</Typography>\n    </Box>\n    <Typography variant='h5'>Overall Performance: <strong style={{color : `${getColor}`}}>{value < 10 ? `0${value}` : value}%</strong></Typography>\n    </Box>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport PerformancePieChat from './PieChat';\nimport { Autocomplete, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, Typography } from '@mui/material';\nimport { GaugeChart } from './GuageChart';\nimport { CloseRounded, PieChartRounded, SendRounded } from '@mui/icons-material';\nimport { MailContext } from '../api/SendMail';\nimport { areas_of_improvement, strengths } from '../ExternalData';\nimport { StudentsContext } from '../api/students';\n\nconst Performance = ({ batchAttendanceData, stdAttendanceData, stdId, name, phone, email, setIsLoading, handleShowSnackbar, isUser }) => {\n  const { fetchAssignmentResults } = useContext(StudentsContext);\n  const { sendEmail } = useContext(MailContext);\n  const [std_strengths, setstd_Strengths] = useState([]);\n  const [improves, setImproves] = useState([]);\n  const [sendReport, setSendReport] = useState(false);\n  const batchCount = [];\n  const studentCount = [];\n  const types = ['Class', 'Mock Test', 'Interview'];\n  const [studentScore, setStudentScore] = useState(0);\n\n    types.forEach(type=>{\n      let cnt = 0\n      Array.isArray(batchAttendanceData) && batchAttendanceData.forEach(batch=>{\n        if(batch.Attendance_Type === type)cnt++;\n      })\n      batchCount.push(cnt);\n    })\n\n    types.forEach(type=>{\n      let cnt = 0\n      Array.isArray(stdAttendanceData) && stdAttendanceData.forEach(std=>{\n        if(std.Attendance_Type === type)cnt++;\n      })\n      studentCount.push(cnt);\n    })\n\n    const getScore = async () => {\n      setIsLoading(true);\n      const res = await fetchAssignmentResults(stdId);\n      if(res && res.message){\n        handleShowSnackbar('error',`Failed to get Weekly Test Score. ${res.message}`);\n      }else{\n        const scoreData = Array.isArray(res) && res.filter((data)=>(\n          data.StudentId === stdId && data.Name === `${name}~${phone}`\n        ))\n        const total = scoreData.reduce((accumulator, data) => {\n          return accumulator + parseInt(data.Score, 10);\n        }, 0);\n        setStudentScore(total > 0 && scoreData.length > 0 ? Math.floor((total / (scoreData.length * 100)) * 100) : 0);\n      }\n      setIsLoading(false);\n    }\n\n    useEffect(()=>{\n      getScore();\n    },[])\n\n  const actualClasses = batchCount[0] + batchCount[1] + batchCount[2]\n  const attendedClasses = studentCount[0] + studentCount[1] + studentCount[2]\n\n  let total;\n  if (actualClasses > 0) {\n      total = (attendedClasses / actualClasses) * 100;\n  } else {\n      total = 0;\n  }\n\n  const send_Performance_to_Mail = async () => {\n    if(std_strengths.length <= 0 || improves.length <= 0){\n      handleShowSnackbar('error','Kindly complete all sections to assist the student in recognizing their strengths and improvement areas.');\n      return;\n    }\n    setSendReport(false);\n    setIsLoading(true);\n    const assignments = Array.isArray(stdAttendanceData) && stdAttendanceData.length > 0 ?\n                        stdAttendanceData.filter((data)=> data.Attendance_Type.split('~')[0] === 'Assignment').length : 0;\n    const otp = `\nPerformance Overview:\n\n  • Out of ${batchCount[0]} Classess Attended ${studentCount[0]}\n  • Out of ${batchCount[1]} Weekly Tests Attended ${studentCount[1]}\n  • Out of ${batchCount[2]} Interview Attended ${studentCount[2]}\n  • Assignments Solved : ${assignments}\n  • Weekly Test Score : ${studentScore}\n\nStrengths:\n\n  • ${std_strengths.join(', ')}\n\nAreas for Improvement:\n\n  • ${improves.join(', ')}\n`\n    const res = await sendEmail(otp, email, 'Your Performance Overview Report is Here.', name, 'Performance');\n    setIsLoading(false);\n    if(res === true){\n      handleShowSnackbar('success','The student performance report has been sent successfully.')\n    }else{\n      handleShowSnackbar('error','Unfortunately, an error occurred, and the performance report failed to send.')\n    }\n    setstd_Strengths([]);\n    setImproves([]);\n  }\n\n  return (\n    <>\n    <Box className=\"w-full h-[85%] flex flex-col items-center justify-evenly\">\n      <Typography variant='h4' className='flex items-center'><PieChartRounded sx={{fontSize : '30px', marginRight : '10px'}} /> Student Performance Traker</Typography>\n      <Box className='w-full h-1/2 flex flex-row'>\n        <PerformancePieChat classes={`${batchCount[0]}~${studentCount[0]}`}\n              mock={`${batchCount[1]}~${studentCount[1]}`}\n              interview={`${batchCount[2]}~${studentCount[2]}`} />\n        <Box className=\"w-1/2 h-full flex flex-col items-center justify-center\">\n          <GaugeChart Guagevalue={Math.floor(((total + studentScore) / 200) * 100)} />\n        </Box>\n      </Box>\n      {(isUser !== 'Student' && isUser.split(' ')[0] !== 'Placements') && <Box className=\"flex flex-col items-center justify-around w-full h-1/6\">\n        <Button variant='contained' endIcon={<SendRounded sx={{height : '30px'}}/>} onClick={()=>setSendReport(true)}>Send Performance Alert to Student</Button>\n        <Typography variant='p' color='error'>Note: By delivering performance reports to students allows them to track their progress and identify areas for improvement.</Typography>\n      </Box>}\n    </Box>\n\n    <Dialog open={sendReport} sx={{zIndex : '810'}}>\n      <img src='/images/V-Cube-Logo.png' alt='' width='14%' className='ml-[43%]' />\n      <IconButton sx={{position : 'absolute'}} className='top-1 right-1' \n        onClick={()=>{setSendReport(false);setstd_Strengths([]);setImproves([])}}>\n        <CloseRounded fontSize='large' />\n      </IconButton>\n      <DialogTitle>Describe <strong>\"{name}\"</strong> Strengths and Improvements</DialogTitle>\n      <DialogContent className='w-full'>\n      <Autocomplete\n            sx={{margin : '15px 0'}}\n            multiple\n            freeSolo\n            value={std_strengths}\n            options={strengths}\n            onChange={(event, newValue) => setstd_Strengths(newValue)}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    label=\"Strengths\"\n                />\n            )}\n        />\n        <Autocomplete\n            sx={{margin : '15px 0'}}\n            multiple\n            freeSolo\n            value={improves}\n            options={areas_of_improvement}\n            onChange={(event, newValue) => setImproves(newValue)}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    label=\"Areas for Improvement\"\n                />\n            )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant='outlined' onClick={()=>{setSendReport(false);setstd_Strengths([]);setImproves([])}}>Cancel</Button>\n        <Button variant='contained' onClick={send_Performance_to_Mail}>Submit</Button>\n      </DialogActions>\n    </Dialog>\n    </>\n  )\n}\n\nexport default Performance;"],"names":["_ref","classes","mock","interview","runClasses","data","value","split","label","_jsx","Box","className","children","PieChart","series","valueFormatter","params","index","dataIndex","highlightScope","faded","highlighted","innerRadius","additionalRadius","color","colors","height","GaugeChart","Guagevalue","setValue","useState","useEffect","i","setTimeout","getColor","performance_name","GaugePointer","valueAngle","outerRadius","cx","cy","useGaugeState","target","Math","sin","cos","_jsxs","r","fill","d","stroke","strokeWidth","GaugeContainer","width","startAngle","endAngle","GaugeReferenceArc","GaugeValueArc","Typography","variant","sx","fontWeight","style","batchAttendanceData","stdAttendanceData","stdId","name","phone","email","setIsLoading","handleShowSnackbar","isUser","fetchAssignmentResults","useContext","StudentsContext","sendEmail","MailContext","std_strengths","setstd_Strengths","improves","setImproves","sendReport","setSendReport","batchCount","studentCount","types","studentScore","setStudentScore","forEach","type","cnt","Array","isArray","batch","Attendance_Type","push","std","async","res","message","scoreData","filter","StudentId","Name","total","reduce","accumulator","parseInt","Score","length","floor","getScore","actualClasses","attendedClasses","_Fragment","PieChartRounded","fontSize","marginRight","PerformancePieChat","Button","endIcon","SendRounded","onClick","Dialog","open","zIndex","src","alt","IconButton","position","CloseRounded","DialogTitle","DialogContent","Autocomplete","margin","multiple","freeSolo","options","strengths","onChange","event","newValue","renderInput","TextField","areas_of_improvement","DialogActions","assignments","otp","join"],"sourceRoot":""}