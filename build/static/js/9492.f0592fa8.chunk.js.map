{"version":3,"file":"static/js/9492.f0592fa8.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, {\n    type: \"checkbox\",\n    inputProps: {\n      'data-indeterminate': indeterminate,\n      ...inputProps\n    },\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize ?? size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, {\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, {\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      }),\n      ...inputProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","size","color","memoTheme","_ref","theme","vars","palette","text","secondary","variants","disableRipple","style","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","createSimplePaletteValueFilter","map","_ref2","mainChannel","main","_ref3","checkboxClasses","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","useDefaultProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","className","other","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","clsx","getFormControlLabelUtilityClasses","FormControlLabelRoot","formControlLabelClasses","label","labelPlacement","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","AsteriskComponent","asterisk","error","componentsProps","control","disabledProp","disableTypography","inputRef","labelProp","onChange","required","requiredProp","slotProps","value","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","externalForwardedProps","TypographySlot","typographySlotProps","useSlot","elementType","Typography","component","children","_jsxs","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","SwitchBaseInput","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","defaultChecked","disableFocusRipple","id","onBlur","onFocus","readOnly","tabIndex","setCheckedState","useControlled","controlled","default","Boolean","state","hasLabelFor","input","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}