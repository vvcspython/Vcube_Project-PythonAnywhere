{"version":3,"file":"static/js/4467.24403c42.chunk.js","mappings":"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","sources":["components/dashboard/DriveCreateFolder.js","components/dashboard/ShareFiles.js","components/dashboard/StorageVault.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Box, Stepper, Step, StepLabel, StepContent, Button, Paper, Typography, TextField, CircularProgress, InputAdornment } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport { CheckCircleRounded, CloudUploadOutlined, TouchAppRounded } from '@mui/icons-material';\nimport { UserDetails } from '../UserDetails';\nimport { DateTime } from '../date-time';\nimport { UsersAuthContext } from '../api/UsersAuth';\n\nexport const getFileExtension = (filename) => {\n  const lastDotIndex = filename.lastIndexOf('.');\n  return lastDotIndex !== -1 ? filename.substring(lastDotIndex + 1).toLowerCase() : null;\n};\n\nexport const getFileNameWithoutExtension = (filename) => {\n  const lastDotIndex = filename.lastIndexOf('.');\n  return lastDotIndex !== -1 ? filename.substring(0, lastDotIndex) : filename;\n};\n\nconst VerticalLinearStepper = ({ handleShowSnackbar, setIsLoading, driveUser, setCreateFolder, createFile, setFileCreate, fetchData, folders, fileNames, selectedFolder, filesStorage, totalStorage }) => {\n  const { postUserDriveData } = useContext(UsersAuthContext);\n  const user = UserDetails('All');\n  const dateTime = DateTime();\n  const [activeStep, setActiveStep] = useState(0);\n  const [isFileError, setIsFileError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [filesData, setFilesData] = useState(null);\n  const [folderName, setFolderName] = useState(createFile ? selectedFolder ? selectedFolder : 'N/A' : null);\n  const steps = createFile ? ['Add Files','Create Files'] : ['Set Folder Name', 'Add Files','Create Folder'];\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n\n  const getFileRead = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n  \n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n  \n      reader.onerror = () => {\n        reject(new Error(\"Error reading file\"));\n      };\n  \n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDrop = (acceptedFiles) => {\n      setIsFileError(false);    \n      setLoading(true);\n      setTimeout(()=>{\n          setLoading(false);\n          const sizeCheck = acceptedFiles.every((file)=>(file.size / (1024 * 1024)).toFixed(2) <= 5);\n          const size = (acceptedFiles.reduce((sum, file) => sum + file.size, 0) / (1024 * 1024)) <= 10;\n          if(!sizeCheck)handleShowSnackbar('error','You can upload each file with a maximum size of 5 MB. Files larger than 5 MB will not be accepted.');\n          if(!size)handleShowSnackbar('error','You can upload files up to 10 MB. Files larger than 10 MB will not be accepted.');\n          if(!sizeCheck || !size){\n            setIsFileError(true);\n            return;\n          };\n          handleData(acceptedFiles);\n      },3000)\n  };\n  \n  const handleData = async (acceptedFiles) => {\n    const data = [];\n    let cnt = 0\n    for (const file of acceptedFiles) {\n      const fileContent = await getFileRead(file);\n      data.push({\n        Username: user.Username,\n        Email: user.Email,\n        Course: user.Course,\n        Folder: folderName,\n        FileName: file.name,\n        DrivePassword : cnt === 0 ? driveUser.Drive : 'None',\n        File: fileContent,\n        Size: (file.size / (1024 * 1024)).toFixed(2),\n        Date: dateTime,\n      });\n      cnt++;\n    };\n    setFilesData(data);\n    handleNext();\n  };\n\n  function hasUniqueNames(array) {\n    const names = array.map(obj => obj.FileName);\n    const uniqueNames = new Set(names);\n    if(uniqueNames.size !== names.length)handleShowSnackbar('error','Files name should be unique.');\n    if(createFile && array.some((obj)=>fileNames.includes(obj.FileName)))handleShowSnackbar('error','The file name already exists.');\n    return uniqueNames.size === names.length && (!createFile || !array.some((obj)=>fileNames.includes(obj.FileName)));\n  }\n\n  const submitData = async () => {\n    if(!hasUniqueNames(filesData)){\n      handleBack();\n      return;\n    }\n    const files_mb = Array.isArray(filesData) && filesData.length > 0 \n        ? filesData.reduce((total, file) => {\n                const size = parseFloat(file.Size);\n                return total + (isNaN(size) ? 0 : size);\n        }, 0).toFixed(2)\n        : 0;\n    if(parseInt(filesStorage) + parseInt(files_mb) >= 10 || parseInt(totalStorage) + parseInt(files_mb) >= 100){\n      handleShowSnackbar('error',`Your files storage limit has been reached to ${totalStorage >= 100 ? '100' : '10'} MB.`);\n      handleBack();\n      return;\n    }\n    setIsLoading(true);\n    const res = await postUserDriveData(user.Course, user.Username, filesData);\n    fetchData();\n    setIsLoading(false);\n    if (res === true){\n      createFile ? handleShowSnackbar('success','Files Added Successfully.'):\n                  handleShowSnackbar('success',`Folder: ${folderName} Created Successfully.`);\n    }else if(res && res.message){\n      handleShowSnackbar('error',`Failed to save folder. ${res.message}. Please try again later`);\n    }\n    setTimeout(()=>{\n      setCreateFolder(false);\n      setFileCreate(false);\n    },2000);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n    multiple: true,\n  });\n\n  const folderNameAlert = (name) => {\n    handleShowSnackbar('error',`Folder name \"${name}\" already exists`);\n    return '';\n  }\n\n  return (\n    <Box className='w-full h-full'>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((step, index) => (\n          <Step key={step}>\n            <StepLabel\n              optional={\n                index === steps.length - 1 ? (\n                  <Typography variant=\"caption\">Last step</Typography>\n                ) : null\n              }\n            >\n              {step}\n            </StepLabel>\n            <StepContent>\n              {(createFile ? index === -1 : index === 0) ? <Box className='w-full h-20 flex items-center justify-start'>\n                <TextField label='Enter Foldername' value={folderName} onChange={(e)=>setFolderName(folders.includes(e.target.value) ? folderNameAlert(e.target.value) : e.target.value)} />\n              </Box> \n              : (createFile ? index === 0 : index === 1) ? \n                <Box\n                    className=\"w-full h-52 border-2 border-dashed border-slate-300 rounded-lg\"\n                    {...getRootProps()}\n                    sx={{\n                    border: isFileError ? '2px dashed red' : '2px dashed #ccc',\n                    borderRadius: '8px',\n                    padding: '20px',\n                    textAlign: 'center',\n                    cursor: 'pointer',\n                    backgroundColor: isDragActive\n                        ? '#f0f0f0'\n                        : isFileError\n                        ? 'rgb(254, 242, 242)'\n                        : 'rgb(247 248 249)',\n                    }}\n                >\n                    <input {...getInputProps()} />\n                    <CloudUploadOutlined sx={{ fontSize: '80px', color: 'lightgrey' }} />\n                    <Typography variant=\"body1\">\n                    {isDragActive\n                        ? 'Drop the file here ...'\n                        : 'Drag and drop, or click to select a file.'}\n                    </Typography>\n                    <Box sx={{ m: 1, position: 'relative' }}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"span\"\n                        disabled={loading}\n                        startIcon={filesData && !isFileError ? <CheckCircleRounded /> : <TouchAppRounded />}\n                        color={isFileError ? 'error' : filesData && !isFileError ? 'success' : 'primary'}\n                    >\n                        {filesData && !isFileError ? \"File's Selected\" : 'Select File'}\n                    </Button>\n                    {loading && (\n                        <CircularProgress\n                        size={24}\n                        sx={{\n                            color: 'primary',\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            marginTop: '-12px',\n                            marginLeft: '-12px',\n                        }}\n                        />\n                    )}\n                    </Box>\n               </Box> \n               : \n              <Box className='w-full min-h-20 max-h-96 overflow-y-auto' sx={{scrollbarWidth : 'thin'}}>\n                {Array.isArray(filesData) && filesData.map((fileData, idx)=>(\n                <TextField value={getFileNameWithoutExtension(fileData.FileName)}\n                    onChange={(e) => {\n                      const updatedFilesData = [...filesData];\n                      updatedFilesData[idx].FileName = `${e.target.value}.${getFileExtension(fileData.FileName)}`;\n                      setFilesData(updatedFilesData);\n                    }}  className='w-full h-16'\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">\n                      <Typography color='primary' variant='h6'>.{getFileExtension(fileData.FileName)}</Typography>\n                    </InputAdornment>}}\n                />))}\n              </Box>}\n              <Box sx={{ mb: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  onClick={()=>{handleNext();index === steps.length - 1 && submitData()}}\n                  sx={{ mt: 1, mr: 1 }}\n                  disabled={(index === 0 && !folderName) || ((createFile ? index === 0 : index === 1) && !filesData)}\n                >\n                  {index === steps.length - 1 ? 'Finish' : 'Continue'}\n                </Button>\n                <Button\n                  disabled={index === 0}\n                  onClick={handleBack}\n                  sx={{ mt: 1, mr: 1 }}\n                >\n                  Back\n                </Button>\n              </Box>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </Box>\n  );\n}\n\nexport default VerticalLinearStepper;","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Autocomplete, Avatar, Box, Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, FormGroup, TextField } from '@mui/material';\nimport { LoginContext } from '../api/login';\nimport { UsersAuthContext } from '../api/UsersAuth';\n\nconst ShareFiles = ({ isOpen, setIsOpen, handleShowSnackbar, setIsLoading, selectedFile, course, email, setSelectedFile, username, drivePassword }) => {\n    const { fetchLoginData } = useContext(LoginContext);\n    const { postUserDriveData } = useContext(UsersAuthContext);\n    const [users, setUsers] = useState(null);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    const fetchData = useCallback(async()=>{\n        setIsLoading(true);\n        const users_Data = await fetchLoginData(course === 'All' ? null : course);\n        setIsLoading(false);\n        if(users_Data && users_Data.message){\n            handleShowSnackbar('error','Error occured while fetching data. Please try again later.');\n            setIsOpen(false);\n            setSelectedFile(null);\n        }else if(users_Data){\n            setUsers(Array.isArray(users_Data) ? users_Data.filter(data => data.Email !== email && data.Username !== username) : '');\n        }\n    },[fetchLoginData, handleShowSnackbar, setIsLoading])\n\n    useEffect(()=>{\n        fetchData();\n    },[isOpen])\n\n    const shareFiles = async () => {\n        setIsLoading(true);\n        const data = []\n        selectedUsers.forEach((user)=>{\n            const { id, ...rest } = selectedFile;\n            const modified = {\n                ...rest,\n                Username : user.Username,\n                Email : user.Email,\n                Folder : 'N/A'\n            }\n            data.push(modified);\n        })\n        data[0].DrivePassword = drivePassword\n        data[0].Shared = 'True'\n        data[0].UserEmail = email\n        const res = await postUserDriveData(course, username, data);\n        if (res === true){\n            handleShowSnackbar('success','File shared successfully.');\n        }else{\n            handleShowSnackbar('error','Error occured. Please try again later.')\n        }\n        setSelectedFile(null);\n        setIsOpen(false);\n        setSelectedUsers([]);\n        setIsLoading(false);\n    }\n\n  return (\n    <Dialog open={isOpen} sx={{zIndex : '810'}}>\n        <img src='/images/V-Cube-Logo.png' width='14%' className='ml-[43%]'/>\n        <DialogTitle variant='h5'>Who do you want to share file ?</DialogTitle>\n        <DialogContent className='min-h-[20rem] h-auto w-full flex flex-col items-center justify-between'>\n            <Box className='w-full h-[80%] overflow-auto' sx={{scrollbarWidth : 'thin'}}>\n                {Array.isArray(users) && users.length > 0 && users.map((user, index)=>(\n                    <FormControlLabel control={<Checkbox size='medium' onClick={(e) => {\n                        const { checked } = e.target;\n                        const newUser = { Username: user.Username, Email: user.Email };\n                        setSelectedUsers((prev) => \n                          checked ? [...prev, newUser] : prev.filter(item => item.Username !== user.Username)\n                        );\n                      }} />} key={index} sx={{margin : '5px 0'}}\n                        label={<Box className='w-[300px] flex items-center justify-start'><Avatar src={typeof user.Image !== 'object' ? user.Image : null} className='mr-3 w-full' /> {user.Username}</Box>}/>\n                ))\n                }\n            </Box>\n            <Autocomplete\n                className='w-full'\n                multiple\n                readOnly\n                value={selectedUsers.map((user)=>user.Username)}\n                options={[]}\n                renderInput={(params) => (\n                    <TextField\n                        multiple\n                        {...params}\n                        variant=\"outlined\"\n                        label=\"Select Users\"\n                    />\n                )}\n            />\n        </DialogContent>\n        <DialogActions>\n            <Button variant='outlined' onClick={()=>{setIsOpen(false);setSelectedFile(null);setSelectedUsers([]);}}>Cancel</Button>\n            <Button variant='contained' onClick={shareFiles}>Submit</Button>\n        </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ShareFiles;","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, InputAdornment, Link, Menu, MenuItem, TextField, Tooltip, Typography } from '@mui/material';\nimport { CloseRounded, CreateNewFolderRounded, DeleteRounded, DriveFileRenameOutlineRounded, FolderRounded, InsertDriveFileRounded, MoreVertRounded, NoteAddRounded, OpenInNewRounded, ReplyRounded } from '@mui/icons-material';\nimport VerticalLinearStepper, { getFileExtension, getFileNameWithoutExtension } from './DriveCreateFolder';\nimport { DateTime } from '../date-time';\nimport { UsersAuthContext } from '../api/UsersAuth';\nimport { UserDetails } from '../UserDetails';\nimport ShareFiles from './ShareFiles';\n\nconst StorageVault = ({ isOpen, setIsOpen, handleShowSnackbar, setIsLoading, isValidated, driveUser }) => {\n    const { getUserDriveData, patchUserDriveData, deleteUserDriveData } = useContext(UsersAuthContext);\n    const [anchorEls, setAnchorEls] = useState(Array(11).fill(null));\n    const [createFolder, setCreateFolder] = useState(false);\n    const [folders, setFolders] = useState([]);\n    const filesData = useRef([]);\n    const [totalStorage, setTotalStorage] = useState(0);\n    const [filesStorage, setFilesStorage] = useState(0);\n    const [createFile, setFileCreate] = useState(false);\n    const user = UserDetails('All');\n    const [draggedFile, setDraggedFile] = useState(null);\n    const [droppedFolder, setDroppedFolder] = useState(null);\n    const [moveFile, setMoveFile] = useState(null);\n    const [fileNameField, setFileNameField] = useState(null);\n    const [c_file_name, setC_File_Name] = useState(null);\n    const [shareFile, setShareFile] = useState(false);\n    const [selectedFolder, setSelectedFolder] = useState(null);\n    const [updated, setUpdated] = useState(false);\n    const [folderStorage, setFolderStorage] = useState(0);\n    const [editFoldername, setEditFolderName] = useState(null);\n    const [newEditFoldername, setNewEditFoldername] = useState(null);\n    const [deleteFolder, setDeleteFolder] = useState(null);\n    \n    const isUserValidated = () => {\n        return driveUser && isValidated && driveUser.Is_Validated && driveUser.Validated_Date === DateTime().split(' ')[0];\n    }   \n\n    const handleClick = (event, index) => {\n        const newAnchorEls = [...anchorEls];\n        newAnchorEls[index] = event.currentTarget;\n        setAnchorEls(newAnchorEls);\n    };\n\n    const handleClose = (index) => {\n        const newAnchorEls = [...anchorEls];\n        newAnchorEls[index] = null;\n        setAnchorEls(newAnchorEls);\n        setEditFolderName(null);\n        setNewEditFoldername(null);\n        setDeleteFolder(null);\n    };\n\n    const fetchData = async () => {\n        if(isUserValidated()){\n            setIsLoading(true);\n            const sendData = {\n                Email : user.Email,\n                DrivePassword : driveUser.Drive\n            }\n            const res = await getUserDriveData(user.Course, user.Username, sendData, 'Get');\n            setIsLoading(false)\n            if (res && res.message){\n                handleShowSnackbar('error',res.message);\n            }else if(res){\n                setTotalStorage(Array.isArray(res) && res.length > 0 \n                    ? res.reduce((total, file) => {\n                        const size = parseFloat(file.Size);\n                        return total + (isNaN(size) ? 0 : size);\n                    }, 0) \n                    : 0);\n                setFilesStorage(Array.isArray(res) && res.length > 0 \n                    ? res.reduce((total, file) => {\n                        if (file.Folder === 'N/A') {\n                            const size = parseFloat(file.Size);\n                            return total + (isNaN(size) ? 0 : size);\n                        }\n                        return total;\n                    }, 0).toFixed(2)\n                    : 0);\n                const uniqueFolders = [...new Set(res\n                    .filter(item => item.Folder !== 'N/A')\n                    .map(item => item.Folder)\n                )];\n                setFolders(uniqueFolders);\n                const files = Array.isArray(res) && res.length > 0 && res.filter(data =>data.Folder === 'N/A');\n                if(selectedFolder !== null && selectedFolder > -1){\n                    const getFolders = Array.isArray(res) && res.length > 0 && res.filter((data)=> data.Folder === folders[selectedFolder]);\n                    if(getFolders){\n                        setFolderStorage(Array.isArray(getFolders) && getFolders.length > 0 \n                        ? res.reduce((total, file) => {\n                            if (file.Folder === folders[selectedFolder]) {\n                                const size = parseFloat(file.Size);\n                                return total + (isNaN(size) ? 0 : size);\n                            }\n                            return total;\n                        }, 0).toFixed(2)\n                        : 0)\n                        filesData.current = getFolders;\n                    }\n                }else{\n                    filesData.current = files;\n                }\n                setUpdated(!updated);\n            }\n        }\n    };\n\n    useEffect(()=>{\n        fetchData();\n    },[selectedFolder])\n\n    const handleDragStart = (e, file) => {\n        setDraggedFile(file);\n      };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = (e, folder) => {\n        e.preventDefault();\n        if(folder === 'Share'){\n            setShareFile(true);\n        }else{\n            setDroppedFolder(folder);\n            (draggedFile.Folder === folder && folder !== 'Delete') ?\n            handleShowSnackbar('error',`You cannot move this file to \"${draggedFile.Folder}\" as it already exists in that location.`) :\n            setMoveFile(true);\n        }\n    };\n\n    const manageFile = async (nameChange=false) => {\n        const preName = nameChange.FileName\n        setIsLoading(true);\n        if(droppedFolder === 'Delete')draggedFile.Folder = droppedFolder;\n        if(nameChange)nameChange.FileName = `${c_file_name}.${getFileExtension(nameChange.FileName)}`;\n        if (nameChange) {\n            nameChange.DrivePassword = driveUser.Drive;\n        } else if(droppedFolder !== 'Delete') {\n            draggedFile.Folder = droppedFolder;\n            draggedFile.DrivePassword = driveUser.Drive;\n        }else if(droppedFolder === 'Delete'){\n            draggedFile.DrivePassword = driveUser.Drive;\n        }\n        const dataToPatch = nameChange ? nameChange : draggedFile;\n        const res = droppedFolder === 'Delete' ? \n                    await deleteUserDriveData(user.Course, user.Username, draggedFile.id, draggedFile) :\n                    await patchUserDriveData(user.Course, user.Username, dataToPatch.id, dataToPatch);\n        setIsLoading(false);\n        if(res === true){\n            droppedFolder === 'Delete' ? \n            handleShowSnackbar('success',`File ${draggedFile.FileName} deleted successfully.`) :\n            nameChange ? handleShowSnackbar('success',`File name changed from ${preName} to ${c_file_name} successfully.`) :\n            handleShowSnackbar('success',`File ${draggedFile.FileName} successfully moved to ${droppedFolder}`);\n            fetchData();\n        }else{\n            handleShowSnackbar('error', res.message || 'An error occurred');\n        }\n        setDraggedFile(null);\n        setDroppedFolder(null);\n        setFileNameField(null);\n    }\n\n    const manageFolderName = async (index) => {\n        handleClose(index);\n        if(isUserValidated()){\n            setIsLoading(true);\n            const sendData = {\n                Email : user.Email,\n                DrivePassword : driveUser.Drive\n            }\n            const res = await getUserDriveData(user.Course, user.Username, sendData, 'Get');\n            if(res && res.message){\n                handleShowSnackbar('error',res.message);\n            }else if(res){\n                const data = Array.isArray(res) ? res.filter((item) => item.Folder === editFoldername) : [];\n                const newData = data.map((item, index) => ({\n                    ...item,\n                    Folder: newEditFoldername,\n                    ...(index === 0 && { DrivePassword: driveUser.Drive, Email : user.Email })\n                }));\n                const patch = await patchUserDriveData(user.Course, user.Username, null, newData);\n                if(patch === true){\n                    fetchData();\n                    handleShowSnackbar('success',`Folder name \"${editFoldername}\" changed to \"${newEditFoldername}\".`);\n                }else{\n                    handleShowSnackbar('error',`Error occured. Please try again later.`);\n                }\n            }\n            setIsLoading(false);\n        }\n    }\n\n    const manageFolderdelete = async (index) => {\n        if(isUserValidated()){\n            setIsLoading(true);\n            const sendData = {\n                Email : user.Email,\n                DrivePassword : driveUser.Drive\n            }\n            const res = await getUserDriveData(user.Course, user.Username, sendData, 'Get');\n            if(res && res.message){\n                handleShowSnackbar('error',res.message);\n            }else if(res){\n                const data = Array.isArray(res) ? res.filter((item) => item.Folder === deleteFolder) : [];\n                data[0].DrivePassword = driveUser.Drive\n                data[0].Email = user.Email\n                const resp = await deleteUserDriveData(user.Course, user.Username, null, data);\n                if(resp === true){\n                    fetchData();\n                    handleShowSnackbar('success',`Folder \"${deleteFolder}\" deleted succesfully.`);\n                }else{\n                    handleShowSnackbar('error',`Error occured. Please try again later.`);\n                }\n            }\n            setIsLoading(false);\n            handleClose(index);\n        }\n    }\n\n    if(driveUser && isValidated && driveUser.Is_Validated && driveUser.Validated_Date === DateTime().split(' ')[0] && isUserValidated()){\n        return (\n        <>\n        <Dialog open={isOpen} fullScreen sx={{zIndex : '800'}}>\n            <Card className='h-16 w-full flex items-center justify-between pl-3 pr-3'>\n                <Typography variant='h5'>VCube Drive</Typography>\n                <img src='/images/V-Cube-Logo.png' width='8%' className='ml-[-2%]' />\n                <IconButton onClick={()=>setIsOpen(false)}>\n                    <CloseRounded fontSize='large' />\n                </IconButton>\n            </Card>\n            <DialogTitle className='flex items-center justify-between'>\n                <Box className='w-[35%] flex items-center justify-start'>\n                    <Button variant='contained' startIcon={<CreateNewFolderRounded/>} onClick={()=>folders.length < 10 ? setCreateFolder(true) : handleShowSnackbar('error','Cannot create folders more than 10.')}>New Folder</Button>\n                    <Button variant='contained' sx={{margin : '0 3%'}} startIcon={<NoteAddRounded/>} onClick={()=>{if(selectedFolder !== null && selectedFolder > -1){setCreateFolder(true);setFileCreate(true)}else{handleShowSnackbar('error','Please select or create folder to add files.')}}} >New File</Button>\n                    <DeleteRounded color='error' sx={{margin : '0 3%', fontSize : '30px'}} onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, 'Delete')} />\n                    <ReplyRounded color='primary' fontSize='large' sx={{transform : 'scaleX(-1)'}} onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, 'Share')} />\n                </Box>\n                <Box className='w-1/3 h-12 flex flex-col items-start justify-between'>\n                    <Typography sx={{fontFamily : 'sans-serif'}}>100 MB of {totalStorage.toFixed(2)} MB Used</Typography>\n                    <Box className='relative w-full h-4 bg-slate-200 rounded-3xl overflow-hidden'>\n                        <Box className={`absolute left-0 top-0 h-full ${Math.floor(totalStorage) <= 40 ? 'bg-blue-500' : Math.floor(totalStorage) <= 70 ? 'bg-orange-500' : 'bg-red-500'} rounded-3xl`}\n                            sx={{width : `${Math.floor(totalStorage)}%`, transition : '0.5s ease-in-out'}}></Box>\n                    </Box>\n                </Box>\n            </DialogTitle>\n            <DialogContent>\n                {folders.length > 0 || filesData.current.length > 0 ? <Box className='w-full h-full overflow-auto' sx={{scrollbarWidth : 'none'}}>\n                    <Box className='w-full min-h-28 h-auto p-1'>\n                        <Typography color='grey' fontSize={18} sx={{marginBottom : '10px'}}>Folders</Typography>\n                        {Array.isArray(folders) && folders.length > 0 && folders.map((folder,index)=>\n                        <Button key={index} startIcon={<IconButton disabled><FolderRounded color='action' sx={{margin : '0 10%'}} /></IconButton>} \n                                endIcon={<IconButton onClick={(event) => handleClick(event, index)} sx={{zIndex : '810'}}><MoreVertRounded/></IconButton>}\n                                sx={{ textTransform: 'capitalize', border : selectedFolder === index ? 'solid 2px #1976d2' : 'solid 2px transparent', zIndex : '805',\n                                     fontSize : '18px', margin : '0 1% 1% 0', background : selectedFolder === index ? '#dbeafe' : '', boxShadow : '0 0 3px rgba(0,0,0,0.5)'\n                                }}\n                                onDoubleClick={()=>setSelectedFolder(selectedFolder === index ? null : index)}\n                                color='inherit'\n                                onDragOver={handleDragOver}\n                                onDrop={(e) => handleDrop(e, folder)}>\n                            {folder}\n                            <Menu\n                                id={`basic-menu-${index}`}\n                                anchorEl={anchorEls[index]}\n                                open={Boolean(anchorEls[index])}\n                                onClose={() => {handleClose(index)}}\n                                MenuListProps={{\n                                'aria-labelledby': 'basic-button',\n                                }}\n                            >\n                                <MenuItem onClick={() =>{handleClose(index);setSelectedFolder(selectedFolder === index ? null : index)}}>{selectedFolder === index ? <CloseRounded color='action' sx={{marginRight : '10px'}}/> : <OpenInNewRounded color='action' sx={{marginRight : '10px'}}/>}{selectedFolder === index ? 'Close' : 'Open'}</MenuItem>\n                                <MenuItem onClick={() => {setEditFolderName(folder);setNewEditFoldername(folder)}}><DriveFileRenameOutlineRounded color='action' sx={{marginRight : '10px'}}/>\n                                    {editFoldername !== null ? <input type='text' placeholder='Enter Folder Name' maxLength={20} value={newEditFoldername} onChange={(e)=>setNewEditFoldername(e.target.value)} onKeyDown={(e)=> e.key === 'Enter' ? manageFolderName(index) : e.key === 'Escape' ? handleClose(index) : null} /> : 'Edit'}\n                                </MenuItem>\n                                <MenuItem onClick={() => setDeleteFolder(deleteFolder === folder ? null : folder)}><DeleteRounded color='action' sx={{marginRight : '10px'}}/>\n                                    {deleteFolder === folder ? (<Typography>Are you sure you want to delete folder?<br/>\n                                        <Button variant='outlined' sx={{height : '30px', marginTop : '10px'}} onClick={()=>{handleClose(index);setDeleteFolder(null)}}>Cancel</Button>\n                                        <Button variant='contained' color='error' sx={{margin : '10px 0 0 10px', height : '30px'}} onClick={()=>{manageFolderdelete(index);handleClose(index)}}>Delete</Button>\n                                    </Typography>) : 'Delete'}\n                                </MenuItem>\n                            </Menu>\n                        </Button>)}\n                    </Box>\n\n                    <Box className='w-full max-h-[34rem]'>\n                        <Box className='w-full h-16 pt-2 flex items-start justify-between'>\n                            <Typography color='grey' fontSize={18} sx={{marginBottom : '10px'}}>{selectedFolder !== null && selectedFolder > -1 ? `${folders[selectedFolder]} Files` : 'Files'}</Typography>\n                            <Box className='w-1/3'>\n                            <Typography sx={{fontFamily : 'sans-serif'}}>10 MB of {selectedFolder !== null && selectedFolder > -1 ? folderStorage : filesStorage} MB Used by Files</Typography>\n                            <Box className='relative w-full h-3 bg-slate-200 rounded-3xl overflow-hidden'>\n                                <Box className={`absolute left-0 top-0 h-full ${Math.floor(selectedFolder !== null && selectedFolder > -1 ? folderStorage : filesStorage) * 10 <= 40 ? 'bg-blue-500' : \n                                                Math.floor(selectedFolder !== null && selectedFolder > -1 ? folderStorage : filesStorage) * 10 <= 75 ? 'bg-orange-500' : 'bg-red-500'\n                                } rounded-3xl`}\n                                    sx={{ width :  `${Math.floor(selectedFolder !== null && selectedFolder > -1 ? folderStorage : filesStorage) * 10}%`,\n                                    transition : '0.5s ease-in-out'\n                                    }}></Box>\n                            </Box>\n                            </Box>\n                        </Box>\n                        <Box className='w-full grid grid-cols-6 gap-7 place-content-start overflow-y-auto pb-1'>\n                        {Array.isArray(filesData.current) && filesData.current.length > 0 && filesData.current.map((file, index)=>\n                            <Tooltip title={`Size : ${file.Size} MB`} arrow>\n                            <Card  draggable onDragStart={(e) => handleDragStart(e, file)}\n                                className='border-[5px] border-[#e4efff] bg-[#e4efff] w-48 h-48 flex flex-col items-center justify-between'>\n                                <Box className='w-full flex items-center justify-between bg-[#e4efff]'>\n                                    {fileNameField && fileNameField === index + 1 ? \n                                        <TextField className='min-h-8 bg-white w-full' variant='standard' type='text'\n                                            value={c_file_name} onChange={(e)=>setC_File_Name(e.target.value)} \n                                            onKeyDown={(e)=>e.key === 'Escape' ? setFileNameField(null) : e.key === 'Enter' ? manageFile(file) : null}\n                                            InputProps={{ endAdornment: <InputAdornment position='end'>\n                                                <Typography color='black'>.{getFileExtension(file.FileName)}</Typography>\n                                            </InputAdornment> }} /> :\n                                        <Typography className='min-h-8 pl-1' onDoubleClick={()=>{setFileNameField(index + 1);setC_File_Name(getFileNameWithoutExtension(file.FileName))}}>{file.FileName}</Typography>\n                                    }\n                                </Box>\n                                <Link href={file.File} target='_blank' className='w-full h-full'>\n                                    <Button sx={{width : '100%', height : '100%'}}>\n                                        <InsertDriveFileRounded sx={{fontSize : '100px'}}/>\n                                    </Button>\n                                </Link>\n                            </Card>\n                            </Tooltip>\n                        )}\n                        </Box>\n                    </Box>\n                </Box>\n                :\n                <Box className='h-full w-full flex flex-col items-center justify-center'>\n                    <img src='/images/no-files.png' alt=''width='30%' />\n                    <Typography variant='h4' color='grey'>No Files</Typography>\n                </Box>}\n            </DialogContent>\n        </Dialog>\n\n        <ShareFiles isOpen={shareFile} setIsOpen={setShareFile} handleShowSnackbar={handleShowSnackbar} setIsLoading={setIsLoading} selectedFile={draggedFile} setSelectedFile={setDraggedFile} email={user.Email} course={user.Course} username={user.Username} drivePassword={driveUser.Drive} />\n\n        <Dialog open={createFolder} maxWidth='lg' sx={{zIndex : '810'}}>\n            <IconButton sx={{position : 'absolute'}} className='right-2 top-2' onClick={()=>{setCreateFolder(false);setFileCreate(false)}}>\n                <CloseRounded fontSize='large'/>\n            </IconButton>\n            <img src='/images/V-Cube-Logo.png' alt='' width='12%' className='absolute left-[44%] top-0' />\n            <DialogTitle variant='h5'>{createFile ? 'Add Files' : 'Create Folder'}</DialogTitle>\n            <DialogContent className='w-[40rem] h-[40rem]'>\n                <VerticalLinearStepper setCreateFolder={setCreateFolder} handleShowSnackbar={handleShowSnackbar} \n                                        setIsLoading={setIsLoading} driveUser={driveUser} createFile={createFile}\n                                        setFileCreate={setFileCreate} fetchData={fetchData} folders={folders}\n                                        fileNames={filesData.current.map((file)=>file.FileName)}\n                                        selectedFolder={selectedFolder !== null && selectedFolder > -1 ? folders[selectedFolder] : false}\n                                        filesStorage={selectedFolder !== null && selectedFolder > -1 ? folderStorage : filesStorage }\n                                        totalStorage={totalStorage} />\n            </DialogContent>\n        </Dialog>\n        <Dialog open={moveFile} sx={{zIndex : '810'}}>\n            {droppedFolder === 'Delete' ? \n            <DialogContent>\n                Are you sure you want to delete \"<strong>{draggedFile && draggedFile.FileName}</strong>\" ?\n            </DialogContent>\n            : \n            <DialogContent>\n                Are you sure you want to move \"<strong>{draggedFile && draggedFile.FileName}</strong>\"\n                    to \"<strong>{droppedFolder && droppedFolder}</strong>\" ?\n            </DialogContent>}\n            <DialogActions>\n                <Button variant='outlined' onClick={()=>{setMoveFile(false);setDraggedFile(null);setDroppedFolder(null)}}>Cancel</Button>\n                <Button variant='contained' onClick={()=>{manageFile();setMoveFile(false)}}>Confirm</Button>\n            </DialogActions>\n        </Dialog>\n\n        </>\n        )\n    }else{\n        setIsOpen(false);\n    }\n}\n\nexport default StorageVault;"],"names":["getFileExtension","filename","lastDotIndex","lastIndexOf","substring","toLowerCase","getFileNameWithoutExtension","_ref","handleShowSnackbar","setIsLoading","driveUser","setCreateFolder","createFile","setFileCreate","fetchData","folders","fileNames","selectedFolder","filesStorage","totalStorage","postUserDriveData","useContext","UsersAuthContext","user","UserDetails","dateTime","DateTime","activeStep","setActiveStep","useState","isFileError","setIsFileError","loading","setLoading","filesData","setFilesData","folderName","setFolderName","steps","handleNext","prevActiveStep","handleBack","getFileRead","file","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","Error","readAsDataURL","handleData","async","data","cnt","acceptedFiles","fileContent","push","Username","Email","Course","Folder","FileName","name","DrivePassword","Drive","File","Size","size","toFixed","Date","submitData","array","names","map","obj","uniqueNames","Set","length","some","includes","hasUniqueNames","files_mb","Array","isArray","reduce","total","parseFloat","isNaN","parseInt","res","message","setTimeout","getRootProps","getInputProps","isDragActive","useDropzone","onDrop","sizeCheck","every","sum","multiple","_jsx","Box","className","children","Stepper","orientation","step","index","_jsxs","Step","StepLabel","optional","Typography","variant","StepContent","TextField","label","value","onChange","e","target","sx","border","borderRadius","padding","textAlign","cursor","backgroundColor","CloudUploadOutlined","fontSize","color","m","position","Button","component","disabled","startIcon","CheckCircleRounded","TouchAppRounded","CircularProgress","top","left","marginTop","marginLeft","scrollbarWidth","fileData","idx","updatedFilesData","InputProps","endAdornment","InputAdornment","mb","onClick","mt","mr","isOpen","setIsOpen","selectedFile","course","email","setSelectedFile","username","drivePassword","fetchLoginData","LoginContext","users","setUsers","selectedUsers","setSelectedUsers","useCallback","users_Data","filter","useEffect","Dialog","open","zIndex","src","width","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","checked","newUser","prev","item","margin","Avatar","Image","Autocomplete","readOnly","options","renderInput","params","DialogActions","forEach","id","rest","modified","Shared","UserEmail","isValidated","getUserDriveData","patchUserDriveData","deleteUserDriveData","anchorEls","setAnchorEls","fill","createFolder","setFolders","useRef","setTotalStorage","setFilesStorage","draggedFile","setDraggedFile","droppedFolder","setDroppedFolder","moveFile","setMoveFile","fileNameField","setFileNameField","c_file_name","setC_File_Name","shareFile","setShareFile","setSelectedFolder","updated","setUpdated","folderStorage","setFolderStorage","editFoldername","setEditFolderName","newEditFoldername","setNewEditFoldername","deleteFolder","setDeleteFolder","isUserValidated","Is_Validated","Validated_Date","split","handleClose","newAnchorEls","sendData","uniqueFolders","files","getFolders","current","handleDragOver","preventDefault","handleDrop","folder","manageFile","nameChange","arguments","undefined","preName","dataToPatch","_Fragment","fullScreen","Card","IconButton","CloseRounded","CreateNewFolderRounded","NoteAddRounded","DeleteRounded","onDragOver","ReplyRounded","transform","fontFamily","Math","floor","transition","marginBottom","FolderRounded","endIcon","event","handleClick","currentTarget","MoreVertRounded","textTransform","background","boxShadow","onDoubleClick","Menu","anchorEl","Boolean","onClose","MenuListProps","MenuItem","marginRight","OpenInNewRounded","DriveFileRenameOutlineRounded","type","placeholder","maxLength","onKeyDown","key","newData","manageFolderName","height","manageFolderdelete","Tooltip","title","arrow","draggable","onDragStart","handleDragStart","Link","href","InsertDriveFileRounded","alt","ShareFiles","maxWidth","VerticalLinearStepper"],"sourceRoot":""}