{"version":3,"file":"static/js/7437.df2eee19.chunk.js","mappings":"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","sources":["components/InputField.js","../node_modules/@mui/icons-material/esm/LaptopChromebookRounded.js","../node_modules/@mui/icons-material/esm/PinOutlined.js","components/login/student-form.js","../node_modules/@mui/icons-material/esm/AccountCircle.js","../node_modules/@mui/icons-material/esm/PersonRounded.js"],"sourcesContent":["import React from 'react';\nimport { TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledTextField = styled(TextField)(({ theme }) => ({\n  '& .MuiInputBase-input': {\n    fontSize: '20px',\n    padding: '5px 0',\n  },\n  '& .MuiInputLabel-root': {\n    fontSize: '20px',\n  },\n}));\n\nconst InputField = (props) => {\n  return (\n    < StyledTextField\n      {...props}\n      type=\"text\"\n      variant=\"standard\"\n    />\n  );\n};\n\nexport default InputField;\n\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 18h-1V5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v13H1c-.55 0-1 .45-1 1s.45 1 1 1h22c.55 0 1-.45 1-1s-.45-1-1-1m-9.5 0h-3c-.28 0-.5-.22-.5-.5s.22-.5.5-.5h3c.28 0 .5.22.5.5s-.22.5-.5.5m6.5-3H4V6c0-.55.45-1 1-1h14c.55 0 1 .45 1 1z\"\n}), 'LaptopChromebookRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 14H4V6h16z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.49 10.5V15h1.15V9h-.87l-1.76 1.27.58.89zm4.98-.45c.5 0 .81.32.81.72 0 .37-.14.64-.54 1.06-.36.38-1.06 1.08-2.13 2.15V15h3.89v-.99h-2.37l-.03-.05c.68-.68 1.15-1.14 1.4-1.39.61-.6.92-1.22.92-1.86 0-.24-.05-1.04-.91-1.48-.47-.23-1.26-.36-1.95-.03-.82.39-.99 1.13-1 1.15l1.01.42c.1-.33.38-.72.9-.72m5.52 3.89c-.83 0-.99-.76-1.02-.86l-1.03.41c.45 1.59 2.01 1.51 2.05 1.51 1.2 0 1.68-.72 1.76-.85.32-.49.36-1.24-.01-1.76-.17-.24-.4-.41-.68-.52v-.07c.2-.1.37-.26.52-.48.26-.41.31-1.07-.02-1.57-.08-.11-.53-.75-1.62-.75-1.26 0-1.74.9-1.85 1.24l.99.41c.11-.32.35-.64.85-.64.44 0 .75.26.75.65 0 .58-.55.72-.88.72h-.46v1h.5c.56 0 1.04.24 1.04.79 0 .49-.48.77-.89.77\"\n}, \"1\")], 'PinOutlined');","import React, { useState, useCallback, useContext, startTransition } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport { AccountCircle, LaptopChromebookRounded, PersonRounded, PinOutlined } from '@mui/icons-material';\nimport NumberInput from '../noSpinnerField';\nimport { DateTime } from '../date-time';\nimport InputField from '../InputField';\nimport { useNavigate } from 'react-router-dom';\nimport { useStudentAuth } from '../api/StudentAuthContext';\nimport { StudentsAuthContext } from '../api/StudentsAuth';\nimport { UserGoogleContext } from '../api/Google';\n\nconst StudentForm = ({ isStudentLogin, setStudentLogin, setIsLoading, handleShowSnackbar, sendEmail }) => {\n  const { stdLogin, removeStudentLoginData } = useStudentAuth();\n  const { studentAuthenticate, checkStudentDetails } = useContext(StudentsAuthContext);\n  const { stdGoogleLogin, stdGoogleLogout } = useContext(UserGoogleContext);\n\n  const [state, setState] = useState({\n    course: '',\n    userOTP: '',\n    sentOTP: '',\n    mobile: '',\n    stdEmail: '',\n    studentLoginOTP: false,\n    isMailError: false,\n    courseError: false,\n    isOTPError: false\n  });\n\n  const navigate = useNavigate();\n\n  const setField = useCallback((field, value) => {\n    setState(prevState => ({ ...prevState, [field]: value }));\n  }, []);\n\n  const stdAuthenticateOTP = useCallback(async (email) => {\n    try {\n      const pin = Math.floor(100000 + Math.random() * 900000);\n      handleShowSnackbar('info', 'Please wait we are sending OTP to your registered Email address.');\n      const result = await sendEmail(pin, email, 'OTP for Login Authentication', 'Student', 'StdOTP');\n      if (result && result.message) {\n        handleShowSnackbar('error', result.message);\n      } else {\n        handleShowSnackbar('success', 'OTP has been successfully sent to your Email address. Check spam folder too if not found.');\n        setField('sentOTP', pin);\n        setTimeout(() => {\n          setField('studentLoginOTP', true);\n        }, 1000);\n      }\n    } catch (error) {\n      handleShowSnackbar('error', 'An error occurred.');\n    }\n  }, [sendEmail, handleShowSnackbar, setField]);\n\n  const checkStudentCredentials = useCallback(async () => {\n    startTransition(async () => {\n    try {\n      const res = await checkStudentDetails(state.mobile, state.course);\n      if (res.status) {\n        stdGoogleLogout();\n        const google = await stdGoogleLogin(res.Email);\n        if (google.status === 'success' && google.verified) {\n          setField('stdEmail', google.email);\n          stdAuthenticateOTP(google.email);\n        } else if (google.status === 'failed') {\n          handleShowSnackbar('error', google.message);\n          stdGoogleLogout();\n        }\n      } else {\n        handleShowSnackbar('error', res.message || 'Invalid Details.');\n        if (res.code) {\n          switch (res.code) {\n            case 404:\n              handleShowSnackbar('error', 'Invalid Details.');\n              break;\n            case 403:\n              handleShowSnackbar('error', 'Access Denied. Please contact your Administration.');\n              break;\n            case 406:\n              handleShowSnackbar('error', 'Your account has been discontinued. Please reach out to your administrator for further assistance.');\n              break;\n            case 500:\n              handleShowSnackbar('error', 'Server Error');\n              break;\n            default:\n              handleShowSnackbar('error', res.message);\n          }\n        }\n      }\n    } catch (error) {\n      handleShowSnackbar('error', 'An error occurred.');\n    } finally {\n      setIsLoading(false);\n    }\n    })\n  }, [state, stdGoogleLogout, stdGoogleLogin, checkStudentDetails, setIsLoading, handleShowSnackbar, stdAuthenticateOTP, setField]);\n\n  const stdAuthenticate = useCallback(async () => {\n    startTransition(async () => {\n    try {\n      const data = { Username: state.stdEmail, Course: state.course };\n      const res = await studentAuthenticate(data);\n      if (res === 'Valid'){\n        setIsLoading(true);\n        const uniqueURL = sessionStorage.getItem('UniqueURL');\n        await stdLogin();\n        navigate(`/vcube/student-info/${uniqueURL.substring(60,90)}`);\n        setIsLoading(false);\n      } else {\n        handleShowSnackbar('error', res.message || 'Invalid Details.');\n        removeStudentLoginData();\n        setState(prevState => ({\n          ...prevState,\n          isMailError: true,\n        }));\n      }\n    } catch (error) {\n      handleShowSnackbar('error', 'An error occurred.');\n    } finally {\n      setIsLoading(false);\n    }\n    })\n  }, [state, studentAuthenticate, stdLogin, navigate, setIsLoading, handleShowSnackbar, removeStudentLoginData]);\n\n  const authenticateOTP = useCallback(() => {\n    if (parseInt(state.userOTP) === parseInt(state.sentOTP)){\n      stdAuthenticate();\n    } else {\n      setField('isOTPError', true);\n      setIsLoading(false);\n    }\n  }, [state, stdAuthenticate, setIsLoading, setField]);\n\n  const checkFields = useCallback(() => {\n    const { mobile, course, userOTP, studentLoginOTP } = state;\n    setState(prevState => ({\n      ...prevState,\n      isMailError: !mobile || mobile.length === 0,\n      isOTPError: studentLoginOTP && !userOTP,\n      courseError: !course || course.length === 0\n    }));\n\n    if (!mobile || !course || (studentLoginOTP && !userOTP)) return;\n\n    setIsLoading(true);\n    studentLoginOTP ? (userOTP ? authenticateOTP() : handleShowSnackbar('error', 'Enter OTP.')) : checkStudentCredentials();\n  }, [state, setIsLoading, handleShowSnackbar, checkStudentCredentials, authenticateOTP]);\n\n\n  return (\n    <Box className={`absolute top-0 ${(isStudentLogin) ? 'right-0' : '-right-full'} duration-[2000ms] ease-in-out w-full flex flex-col justify-start items-center`}>\n      <Box className=\"w-full h-60 my-5 flex items-center justify-start flex-col\">\n        <Box className=\"border-2 border-primary rounded-full mb-4 bg-primary\">\n          <PersonRounded sx={{ fontSize: '180px', color: '#fff' }} />\n        </Box>\n        <Typography variant='h5'>Hello ! Welcome back.</Typography>\n        <Typography variant='p' className=\"text-gray-500 w-[90%] text-center\">Log in to view and manage your personal data and academic progress. Enter your credentials below to get started.</Typography>\n      </Box>\n      <Box className=\"w-full h-80 mt-3 flex flex-col justify-center items-center\">\n          <Box className=\"flex justify-center items-start w-96 h-20\">\n            <AccountCircle className=\"mr-2 mt-6\" sx={{ color: 'action.active', fontSize: '30px' }} />\n            <InputField\n              error={state.isMailError}\n              sx={{ width: '100%' }}\n              className=\"w-full\"\n              onChange={(e) => setField('mobile', e.target.value)}\n              value={state.mobile}\n              disabled={state.studentLoginOTP}\n              label=\"Mobile or Email\"\n              helperText={state.isMailError ? \"Invalid Mobile or Email\" : \"\"}\n              variant=\"standard\"\n            />\n          </Box>\n          {!state.studentLoginOTP ? (\n            <Box className=\"flex justify-center items-start w-96 h-20\">\n              <LaptopChromebookRounded className=\"mr-2 mt-6\" sx={{ color: 'action.active', fontSize: '30px' }} />\n              <InputField\n                error={state.courseError}\n                sx={{ width: '100%' }}\n                className=\"w-full\"\n                onChange={(e) => setField('course', e.target.value.toUpperCase())}\n                value={state.course}\n                label=\"Enter Your Course Name\"\n                helperText={state.courseError ? \"Invalid Course\" : \"\"}\n                variant=\"standard\"\n              />\n            </Box>\n          ) : (\n            <Box className='flex items-start justify-between w-96 h-20'>\n              <PinOutlined className=\"mr-2 mt-6\" sx={{ color: 'action.active', fontSize: '30px' }} />\n              <NumberInput\n                sx={{\n                  width: '100%',\n                  '& .MuiInputBase-input': {\n                    fontSize: '20px',\n                    padding: '5px 0',\n                  },\n                  '& .MuiInputLabel-root': {\n                    fontSize: '20px',\n                  },\n                }}\n                label=\"Enter OTP\"\n                error={state.isOTPError}\n                onChange={(e) => setField('userOTP', e.target.value)}\n                value={state.userOTP}\n                helperText={state.isOTPError ? \"Invalid OTP\" : \"\"}\n              />\n            </Box>\n        )}\n        <Typography\n          color=\"primary\"\n          sx={{ marginLeft: '5%' }}\n          className=\"cursor-pointer hover:underline pb-3 select-none\"\n          onClick={() => {\n            setStudentLogin(!isStudentLogin);\n            setState({\n              course: '',\n              userOTP: '',\n              sentOTP: '',\n              mobile: '',\n              stdEmail: '',\n              studentLoginOTP: false,\n              isMailError: false,\n              courseError: false,\n              isOTPError: false\n            });\n          }}\n        >\n          Admin Login\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color='primary'\n          sx={{ marginLeft: '6.7%' }}\n          className=\"h-12 w-[61%]\"\n          onClick={checkFields}\n        >\n          Login\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default StudentForm;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6m0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20\"\n}), 'AccountCircle');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4\"\n}), 'PersonRounded');"],"names":["StyledTextField","styled","TextField","_ref","theme","fontSize","padding","props","_jsx","type","variant","createSvgIcon","d","isStudentLogin","setStudentLogin","setIsLoading","handleShowSnackbar","sendEmail","stdLogin","removeStudentLoginData","useStudentAuth","studentAuthenticate","checkStudentDetails","useContext","StudentsAuthContext","stdGoogleLogin","stdGoogleLogout","UserGoogleContext","state","setState","useState","course","userOTP","sentOTP","mobile","stdEmail","studentLoginOTP","isMailError","courseError","isOTPError","navigate","useNavigate","setField","useCallback","field","value","prevState","stdAuthenticateOTP","async","pin","Math","floor","random","result","email","message","setTimeout","error","checkStudentCredentials","startTransition","res","status","google","Email","verified","code","stdAuthenticate","data","Username","Course","uniqueURL","sessionStorage","getItem","substring","authenticateOTP","parseInt","checkFields","length","_jsxs","Box","className","children","PersonRounded","sx","color","Typography","AccountCircle","InputField","width","onChange","e","target","disabled","label","helperText","PinOutlined","NumberInput","LaptopChromebookRounded","toUpperCase","marginLeft","onClick","Button"],"sourceRoot":""}