{"version":3,"file":"static/js/4971.75dfc5eb.chunk.js","mappings":"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","sources":["components/login/admin-form.js","../node_modules/@mui/icons-material/esm/AccountCircle.js","../node_modules/@mui/icons-material/esm/LockOutlined.js","../node_modules/@mui/icons-material/esm/PersonRounded.js"],"sourcesContent":["import React, { useContext, useState, useCallback, lazy, Suspense, startTransition } from 'react';\nimport { Box, Typography, TextField, Button, IconButton, InputAdornment } from '@mui/material';\nimport { AccountCircle, PersonRounded, LockOutlined, Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../api/AuthContext';\nimport { UserGoogleContext } from '../api/Google';\nimport { UsersAuthContext } from '../api/UsersAuth';\nimport { UserDetails } from '../UserDetails';\nimport LoadingSkeletonAlternate from '../LoadingSkeletonAlternate';\n\nconst CreateUserForm = lazy(() => import('./CreateUserForm'));\n\nconst AdminForm = ({ isStudentLogin, setStudentLogin, setIsLoading, setForgotPassword, handleShowSnackbar, sendEmail }) => {\n    const { userGoogleLogin, userGoogleLogout } = useContext(UserGoogleContext);\n    const { chkUsername, fetchDataLength, userAuthenticate } = useContext(UsersAuthContext);\n    const [showPassword, setShowPassword] = useState(false);\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const [isUserError, setUserError] = useState(false);\n    const [isPasswordError, setPasswordError] = useState(false);\n    const { userAuthChk, login } = useAuth();\n    const navigate = useNavigate();\n    const [openUserCreate, setOpenUserCreate] = useState(false);\n\n    const handleUsernameChange = useCallback((e) => {\n        setUsername(e.target.value);\n        setUserError(false);\n    }, []);\n\n    const handlePasswordChange = useCallback((e) => {\n        setPassword(e.target.value);\n        setPasswordError(false);\n        if (e.target.value.startsWith('Create')) {\n            setShowPassword(false);\n        }\n    }, []);\n\n\n    const checkFields = async () => {\n        if (!username || username.length === 0) {\n            setUserError(true);\n        }\n        if (!password || password.length === 0) {\n            setPasswordError(true);\n            return;\n        }\n        setPasswordError(false);\n        setUserError(false);\n        setIsLoading(true);\n        await ChkUser();\n    };\n\n    const ChkUser = async () => {\n        startTransition(async () => {\n        try {\n            userGoogleLogout();\n            const getlength = await fetchDataLength();\n            if (getlength && getlength.message === 'Failed to fetch') {\n                handleShowSnackbar('error', 'Failed to fetch data.');\n                return;\n            }\n            if (getlength === 0 && password === process.env.REACT_APP_CREATE_USER_CODE) {\n                const mail = await sendEmail(' ', process.env.REACT_APP_CREATE_USER_EMAIL, 'OTP for to Create Super User', username, 'OTP', 'Admin_01');\n                if (mail) {\n                    handleShowSnackbar('success', 'OTP has been sent to Admin email address. Check spam folder too.');\n                    setOpenUserCreate(true);\n                } else {\n                    handleShowSnackbar('error', 'Network error or Failed to send OTP. Please try again later.');\n                }\n            } else {\n                await authenticate();\n            }\n        } catch (error) {\n            handleShowSnackbar('error', 'An error occurred.');\n        } finally {\n            setIsLoading(false);\n        }\n        })\n    };\n\n\n    const authenticateUser = async (mail) => {\n        startTransition(async () => {\n        try {\n            const userAuth = await userAuthenticate(mail, password);\n            if (userAuth && userAuth.message && ['Network Error', 'Internal Server Error'].includes(userAuth.message)) {\n                handleShowSnackbar('error', userAuth.message);\n                userGoogleLogout();\n            } else if (userAuth) {\n                if (userAuth.response && userAuth.response.status === 404) {\n                    handleShowSnackbar('error', 'User not found.');\n                    userGoogleLogout();\n                } else if (userAuth.response && userAuth.response.status === 401) {\n                    setUserError(true);\n                    setPasswordError(true);\n                    handleShowSnackbar('error', 'Invalid user details');\n                    userGoogleLogout();\n                } else if (userAuth.response && userAuth.response.status === 403) {\n                    handleShowSnackbar('error', 'Access Denied. Please contact your Administration.');\n                    userGoogleLogout();\n                } else if (userAuth === 'Valid'){\n                    const uniqueURL = sessionStorage.getItem('UniqueURL');\n                    setUserError(false);\n                    setPasswordError(false);\n                    setIsLoading(true);\n                    await userAuthChk();\n                    login();\n                    const user = UserDetails('All');\n                    navigate(user.User.split(' ')[0] === 'Placements' ? `/vcube/placements/dashboard/${uniqueURL.substring(30,60)}` : `/vcube/dashboard/${uniqueURL.substring(0,30)}`);\n                    handleShowSnackbar('success',`Login Successful. Welcome back ${user.Username}`);\n                    setIsLoading(false);\n                }\n            }\n        } catch (error) {\n            handleShowSnackbar('error', 'An error occurred.');\n        } finally {\n            setIsLoading(false);\n        }\n        })\n    };\n\n    const authenticate = async () => {\n        startTransition(async () => {\n        try {\n            const chkUser = await chkUsername(username);\n            if (chkUser.status === 'Found') {\n                const google = await userGoogleLogin(chkUser.email);\n                if (google.status === 'success' && google.verified) {\n                    setIsLoading(true);\n                    await authenticateUser(chkUser.email);\n                } else if (google.status === 'failed') {\n                    handleShowSnackbar('error', google.message);\n                    userGoogleLogout();\n                } else {\n                    userGoogleLogout();\n                }\n            } else if (chkUser && chkUser.response && chkUser.response.status === 404) {\n                handleShowSnackbar('error', 'User not found.');\n            } else if (chkUser && chkUser.message) {\n                handleShowSnackbar('error', chkUser.message);\n            }\n        } catch (error) {\n            handleShowSnackbar('error', 'An error occurred.');\n        } finally {\n            setIsLoading(false);\n        }\n        })\n    };\n\n    return (\n        <>\n            <Box className={`w-full flex flex-col justify-start items-center absolute top-0 ${isStudentLogin ? 'right-full' : 'right-0'} duration-[2000ms] ease-in-out`}>\n                <Box className=\"w-full h-60 my-5 flex items-center justify-start flex-col\">\n                    <Box className=\"border-2 border-primary rounded-full mb-4 bg-primary\">\n                        <PersonRounded sx={{ fontSize: '180px', color: '#fff' }} />\n                    </Box>\n                    <Typography variant='h5'>Hello ! Welcome back.</Typography>\n                    <Typography variant='p' className=\"text-gray-500\">Enter your credentials to log in and continue where you left off.</Typography>\n                </Box>\n                <Box className=\"w-full h-80 flex flex-col justify-center items-center mt-5\">\n                    <Box className=\"flex justify-center items-start w-96 h-20\">\n                        <AccountCircle className=\"mr-2 mt-6\" sx={{ color: 'action.active', fontSize: '30px' }} />\n                        <TextField\n                            error={isUserError}\n                            sx={{\n                                width: '100%',\n                                '& .MuiInputBase-input': {\n                                    fontSize: '20px',\n                                    padding: '5px 0',\n                                },\n                                '& .MuiInputLabel-root': {\n                                    fontSize: '20px',\n                                },\n                            }}\n                            className=\"w-full\"\n                            label=\"Username or Email\"\n                            helperText={isUserError ? \"Invalid Username or Email\" : \"\"}\n                            value={username}\n                            onChange={handleUsernameChange}\n                            variant=\"standard\"\n                        />\n                    </Box>\n                    <Box className=\"flex justify-center items-start w-96 h-20\">\n                        <LockOutlined className=\"mr-2 mt-6\" sx={{ color: 'action.active', fontSize: '30px' }} />\n                        <TextField\n                            sx={{\n                                width: '100%',\n                                '& .MuiInputBase-input': {\n                                    fontSize: '20px',\n                                    padding: '5px 0',\n                                },\n                                '& .MuiInputLabel-root': {\n                                    fontSize: '20px',\n                                },\n                            }}\n                            error={isPasswordError}\n                            helperText={isPasswordError ? \"Invalid Password\" : \"\"}\n                            label=\"Password\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={password}\n                            onChange={handlePasswordChange}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            onClick={() => setShowPassword(!showPassword)}\n                                            disabled={password.startsWith('Create')}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <VisibilityOff /> : <Visibility />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            variant=\"standard\"\n                        />\n                    </Box>\n                    <Typography \n                        color=\"primary\" \n                        className=\"cursor-pointer hover:underline pb-3 select-none\" \n                        onClick={()=>{setStudentLogin(!isStudentLogin);setPassword(\"\");setUsername(\"\");setUserError(false);setPasswordError(false)}}\n                        >Student Login</Typography>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={checkFields}\n                        sx={{ width: '61%', height : '50px' }}\n                        >\n                        Log In\n                    </Button>\n                    <Typography\n                        color=\"primary\"\n                        className=\"cursor-pointer hover:underline pb-3 select-none\"\n                        onClick={() => setForgotPassword(true)}\n                        sx={{ marginTop: '10px', cursor: 'pointer' }}\n                    >\n                        Forgot Password?\n                    </Typography>\n                </Box>\n            </Box>\n            {openUserCreate && (\n                <Suspense fallback={<LoadingSkeletonAlternate />}>\n                    <CreateUserForm\n                        openUserCreate={openUserCreate}\n                        setOpenUserCreate={setOpenUserCreate}\n                        username={username}\n                        handleShowSnackbar={handleShowSnackbar}\n                        setIsLoading={setIsLoading}\n                    />\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default AdminForm;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6m0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20\"\n}), 'AccountCircle');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2\"\n}), 'LockOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4\"\n}), 'PersonRounded');"],"names":["CreateUserForm","lazy","_ref","isStudentLogin","setStudentLogin","setIsLoading","setForgotPassword","handleShowSnackbar","sendEmail","userGoogleLogin","userGoogleLogout","useContext","UserGoogleContext","chkUsername","fetchDataLength","userAuthenticate","UsersAuthContext","showPassword","setShowPassword","useState","password","setPassword","username","setUsername","isUserError","setUserError","isPasswordError","setPasswordError","userAuthChk","login","useAuth","navigate","useNavigate","openUserCreate","setOpenUserCreate","handleUsernameChange","useCallback","e","target","value","handlePasswordChange","startsWith","ChkUser","async","startTransition","getlength","message","process","authenticate","error","chkUser","status","google","email","verified","userAuth","mail","includes","response","uniqueURL","sessionStorage","getItem","user","UserDetails","User","split","substring","Username","authenticateUser","_jsxs","_Fragment","children","Box","className","_jsx","PersonRounded","sx","fontSize","color","Typography","variant","AccountCircle","TextField","width","padding","label","helperText","onChange","LockOutlined","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","disabled","edge","VisibilityOff","Visibility","Button","length","height","marginTop","cursor","Suspense","fallback","LoadingSkeletonAlternate","createSvgIcon","d"],"sourceRoot":""}