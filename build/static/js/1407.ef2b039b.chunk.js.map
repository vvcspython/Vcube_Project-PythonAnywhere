{"version":3,"file":"static/js/1407.ef2b039b.chunk.js","mappings":"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","sources":["components/student-info/WeeklyAssignments.js","components/student-info/AssignmentLeaderBoard.js","components/student-info/AssessmentsData.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, Tab, Tabs, TextField, Typography } from '@mui/material';\nimport { AssignmentRounded, CheckRounded, CloseRounded, DoNotDisturbRounded, EastRounded, FiberManualRecordRounded, PendingActionsRounded, RotateLeftRounded, RunningWithErrorsRounded } from '@mui/icons-material';\nimport { DateTime } from '../date-time';\nimport { StudentsContext } from '../api/students';\nimport { mui_colors } from '../ExternalData';\n\nconst WeeklyAssignments = ({ stdId, name, image, phone, course, batchName, handleShowSnackbar, setIsLoading, setSolveAssesments, setSolveAssessmentData, liveWeeklyData, pastWeeklyData, isUser, setTab_Value }) => {\n    const { getStudentAttendanceById, fetchAssignmentResults, fetchAssignmentRequests, postAssignmentRequests, patchAssignmentResults, postAssignmentResults } = useContext(StudentsContext);\n    const [tabValue, setTabValue] = useState(0);\n    const [ready, setReady] = useState(false);\n    const [startTimer, setTimerStart] = useState(false);\n    const [timer, setTimer] = useState(10);\n    const [isStudent_Att, setIsStudent_Att] = useState(false);\n    const resultsData = useRef([]);\n    const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n    const [studentStatus, setStudentStatus] = useState({});\n    const [requestRaised, setRequestRaised] = useState(false);\n    const [raiseRequest, setRaiseRequest] = useState(false);\n\n    const fetchData = async () => {\n        setIsLoading(true);\n        const res = await getStudentAttendanceById(stdId);\n        if(res && res.message){\n            handleShowSnackbar('error',`Something went wrong. Please try again later. ${res.message}`)\n        }else{\n            const isFound = Array.isArray(res) && res.find((data)=>\n                data.StudentId === stdId  &&\n                data.Name === `${name}~${phone}` &&\n                data.Course === course &&\n                data.BatchName === batchName &&\n                data.Attendance_Type === 'Mock Test' &&\n                data.Date === DateTime().split(' ')[0]\n            )\n            setIsStudent_Att(isFound);\n        }\n        setIsLoading(false);\n    }\n\n    const fetchResultsData = async () => {\n        setIsLoading(true);\n        const res = await fetchAssignmentResults(stdId);\n        if(res && res.message){\n            (res.response && res.response.status === 404) ? \n            setStudentStatus({Status : 'Start'}) : \n            handleShowSnackbar('error',`Something went wrong. Please try again later. ${res.message}`);\n            return false;\n        }else if(Array.isArray(res) && res.length > 0){\n            resultsData.current = Array.isArray(res) && res.filter((data)=>\n                data.StudentId === stdId &&\n                data.Name === `${name}~${phone}` &&\n                data.Course === course &&\n                data.BatchName === batchName\n            )\n            const getData = Array.isArray(res) && res.find((data)=>\n                data.StudentId === stdId && \n                data.Name === `${name}~${phone}` &&\n                data.Course === course &&\n                data.BatchName === batchName &&\n                data.Date === DateTime().split(' ')[0]\n            )\n            setStudentStatus(getData ? getData : {Status : 'Start'});\n            return getData ? getData : null;\n        }else if(Array.isArray(res) && res.length === 0){\n            setStudentStatus({Status : 'Start'});\n            return null;\n        }\n        setIsLoading(false);\n    }\n\n    const fetchRequests = async () => {\n        const res = await fetchAssignmentRequests(stdId);\n        if(res && res.message){\n            !(res.response && res.response.status === 404) &&\n            handleShowSnackbar('error','Falied to get request data. Please try again later.');\n        }else if(res){\n            if(Array.isArray(res) && res.length === 0){\n                return;\n            }\n            const getData = Array.isArray(res) && res.find((data)=>\n                data.StudentId === stdId &&\n                data.Name === `${name}~${phone}` &&\n                data.Course === course &&\n                data.BatchName === batchName &&\n                data.Date === DateTime().split(' ')[0]\n            )\n            if(getData)setRequestRaised(true);\n        }\n    }\n\n    const postRequests = async () => {\n        const data = {\n            StudentId : stdId,\n            Name : `${name}~${phone}`,\n            Course : course,\n            BatchName : batchName,\n            Date : DateTime().split(' ')[0],\n        }\n        const res = await postAssignmentRequests(data);\n        if(res === true){\n            handleShowSnackbar('success','A request has been raised on your behalf. Kindly reach out to your coordinator for approval.');\n            fetchRequests();\n        }else{\n            handleShowSnackbar('error',`Something went wrong. Please try again later. ${res.message}`);\n        }\n    }\n\n    useEffect(()=>{\n        fetchData();\n        fetchResultsData();\n        fetchRequests();\n    },[])\n\n    const groupedByDate = pastWeeklyData.reduce((acc, current) => {\n        const date = current.WeeklyAssignment.split(' ')[0];\n    \n        if (!acc[date]) {\n            acc[date] = [];\n        }\n    \n        acc[date].push(current);\n        return acc;\n    }, {});\n    const nestedArray = Object.values(groupedByDate);\n\n    useEffect(() => {\n        let timerId;\n      \n        if (ready && startTimer) {\n          timerId = setTimeout(() => {\n            setTimer((prev) => prev - 1);\n          }, 1000);              \n        }\n    \n        if (timer === 0) {\n            setTimerStart(false);\n            setTimer(10);\n        }\n        return () => clearTimeout(timerId);\n      }, [timer, startTimer]);\n\n    const hasOneHourPassed = () => {\n        if (Array.isArray(liveWeeklyData) && liveWeeklyData.length > 0){\n            const targetDate = new Date(liveWeeklyData[0].WeeklyAssignment);\n            const currentDate = new Date();\n            const difference = currentDate - targetDate;\n            const oneHourInMillis = 60 * 60 * 1000;\n            return difference >= oneHourInMillis;\n        }else{\n            return '';\n        }\n    }\n\n      useEffect(() => {\n        if(!(Array.isArray(liveWeeklyData) && liveWeeklyData.length > 0))return;\n        const targetTime = new Date(liveWeeklyData[0].WeeklyAssignment).getTime();\n    \n        const updateTimer = () => {\n          const now = new Date().getTime();\n          const distance = targetTime - now;\n\n          if (distance === 0) {\n            setTimeLeft({ hours: 0, minutes: 0, seconds: 0 });\n            clearInterval(timer);\n          } else if(distance > 0){\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n            if (timeLeft.hours !== hours || timeLeft.minutes !== minutes || timeLeft.seconds !== seconds) {\n                setTimeLeft({ hours, minutes, seconds });\n            }\n          }\n        };\n    \n        const timer = setInterval(updateTimer, 1000);\n        updateTimer();\n    \n        return () => clearInterval(timer);\n      }, [liveWeeklyData, timeLeft]);\n\n      const handleClick = async (data=false) => {\n        const res = isUser === 'Student' && !data ? await postProgress() : true;\n        if(!res)return;\n        sessionStorage.setItem('Weekly Assignment', data ? 'Past' : 'True');\n        setSolveAssessmentData(data ? data : liveWeeklyData);\n        setSolveAssesments(true);\n        setReady(false);\n        if(!data)setTab_Value(0);\n        setIsLoading(false);\n      }\n\n      const postProgress = async () => {\n        const getData = await fetchResultsData();\n        if(getData === false)return;\n        const data = {\n            StudentId : stdId,\n            Image : image,\n            Name : `${name}~${phone}`,\n            Course : course,\n            BatchName : batchName,\n            Date : DateTime().split(' ')[0],\n            Status : 'Progress',\n        }\n        if(getData)getData.Status = 'Progress'\n        const res = getData ? await patchAssignmentResults(getData) : await postAssignmentResults(data);\n        if(res === true){\n            return true;\n        }else{\n            handleShowSnackbar('error','Something went wrong. Please try again later.');\n            return false;\n        }\n      }\n\n      const getResults = (date) => {\n        const data = resultsData.current.find((res)=>res.Date === date.split(' ')[0]); \n        return data ? data.Status : null;\n      }\n\n  return (\n    <>\n    <Box className='relative w-full h-full border-2 rounded-lg flex flex-col items-center justify-start'>\n        <Tabs value={tabValue}>\n            <Tab label='Live Assigments' onClick={()=>setTabValue(0)} sx={{fontWeight : tabValue === 0 ? 'bold' : 'normal'}} />\n            <Tab label='Past Assigments' onClick={()=>setTabValue(1)} sx={{fontWeight : tabValue === 1 ? 'bold' : 'normal'}}  />\n        </Tabs>\n\n        {tabValue === 0 ? \n            ((Array.isArray(liveWeeklyData) && liveWeeklyData.length > 0) ?\n                ((timeLeft.hours === 0 && timeLeft.minutes === 0 && timeLeft.seconds === 0) ?\n                    (isStudent_Att ?\n                    <>\n                    <Box className={`${(studentStatus && studentStatus.Status === 'Start' && !hasOneHourPassed()) || (studentStatus && studentStatus.Status === 'Progress') ? 'bg-slate-100' : studentStatus && studentStatus.Status === 'Solved' ? 'bg-green-100' : 'bg-red-100'} w-1/2 h-52 rounded-lg mt-32 border-2 border-dashed ${(studentStatus && studentStatus.Status === 'Start' && !hasOneHourPassed()) || (studentStatus && studentStatus.Status === 'Progress') ? 'border-slate-400' : studentStatus && studentStatus.Status === 'Solved' ? 'border-green-700' : 'border-red-700'} flex flex-col items-center justify-center`}>\n                        {hasOneHourPassed() ? \n                            <Typography variant='h5' sx={{fontFamily : 'monospace'}}>Your Weekly Test has been Completed.</Typography> : \n                            <Typography variant='h5' sx={{fontFamily : 'monospace'}}>Your Weekly Test is Live <FiberManualRecordRounded fontSize='small' color='success' /></Typography>}\n                        <Typography sx={{fontFamily : 'unset', margin : '20px 0'}} variant='h5' >{DateTime().split(' ')[0]}</Typography>\n                        {studentStatus && studentStatus.Status === 'Solved' ?\n                                <Button startIcon={<CheckRounded/>} color='success' variant='contained' sx={{width : '40%'}} >Solved</Button> :\n                            studentStatus && studentStatus.Status === 'Start' && !hasOneHourPassed() ?\n                                <Button endIcon={<EastRounded/>} variant='contained' sx={{width : '40%'}} onClick={()=>{setReady(true);setTimerStart(true);setTimer(10)}} >Solve Now</Button> :\n                            studentStatus && studentStatus.Status === 'Progress' && !hasOneHourPassed() ? \n                                <Button endIcon={<RotateLeftRounded/>} variant='contained' onClick={()=>setRaiseRequest(true)}>In Progress</Button> :\n                                <Button startIcon={<CloseRounded/>} color='error' variant='contained'>Disqualified</Button>}\n                    </Box>\n                        {(studentStatus && (studentStatus.Status === 'Solved' || studentStatus.Status === 'Disqualified')) && <Typography variant='h5' sx={{margin : '25px 0'}}>Your Score: {studentStatus && studentStatus.Status === 'Solved' ? studentStatus.Score : '0'}</Typography>}\n                    </>\n                    : \n                    <Box className='w-full h-full flex flex-col items-center justify-center'>\n                        <RunningWithErrorsRounded sx={{fontSize : '120px', marginBottom : '25px'}} color='error' />\n                        <Typography className='text-start w-[75%]' variant='h6' sx={{fontFamily : 'monospace'}}>\n                            Dear {name},<br/><br/>\n                            We noticed that you did not participate in the recent assignment.<br/>\n                            Completing assignments is crucial for your understanding and improvement in the subject.<br/>\n                            If you faced any challenges or have questions, please reach out so we can assist you.<br/>\n                            Your engagement is important, and we encourage you to stay on track with your studies.<br/><br/>\n                            Please note that consistent attendance and participation are essential, as a lack of engagement can lead to a decrease in performance. \n                            These factors are vital for your overall academic success and are also important for placement purposes.\n                        </Typography>\n                    </Box>)\n                :\n                <Box className='w-full h-full flex flex-col items-center justify-center'>\n                    <PendingActionsRounded sx={{fontSize : '120px'}} color='primary' />\n                    <Typography variant='h4' sx={{fontFamily : 'monospace', margin : '30px 0'}}>Your Assigment will be live in</Typography>\n                    <Box className='h-20 w-1/5 flex items-center justify-between'>\n                        <Box className='w-[25%] h-full border-2 border-slate-300 rounded-lg flex items-center justify-center'>\n                            <Typography variant='h4'>{timeLeft.hours.toString().padStart(2, '0')}</Typography>\n                        </Box>\n                        <Typography variant='h4' >:</Typography>\n                        <Box className='w-[25%] h-full border-2 border-slate-300 rounded-lg flex items-center justify-center'>\n                            <Typography variant='h4'>{timeLeft.minutes.toString().padStart(2, '0')}</Typography>\n                        </Box>\n                        <Typography variant='h4' >:</Typography>\n                        <Box className='w-[25%] h-full border-2 border-slate-300 rounded-lg flex items-center justify-center'>\n                            <Typography variant='h4'>{timeLeft.seconds.toString().padStart(2, '0')}</Typography>\n                        </Box>\n                    </Box>\n                    {<Button sx={{marginTop : '30px'}} variant='contained' onClick={()=>handleClick(false)}>Check Assignment</Button>}\n                </Box>\n                )\n            :\n            <Box className='w-full h-full flex flex-col items-center justify-center'>\n                <DoNotDisturbRounded sx={{fontSize : '150px', marginBottom : '20px'}} color='action' />\n                <Typography variant='h4' color='grey'>No Live Assigments Found.</Typography>\n            </Box>)\n        :\n            (Array.isArray(pastWeeklyData) && pastWeeklyData.length > 0 ? \n            <Box className='w-full h-full overflow-auto grid grid-cols-2 gap-5 place-content-start mt-3 pl-3 pb-3 pr-3' sx={{scrollbarWidth : 'thin'}}>\n                {Array.isArray(nestedArray) && nestedArray.map((data,index)=>\n                    <Card className='w-full h-20 flex items-center justify-between pl-5 pr-3 mt-1 border-[1px] border-slate-200' key={index}>\n                        <AssignmentRounded fontSize='large' sx={{color : mui_colors[index < 20 ? index : Math.floor(Math.random() * 20)]}} />\n                        <Typography sx={{fontFamily : 'monospace'}} className='w-[60%] text-start' variant='h5'>Weekly Assigment <br/>{data[0].WeeklyAssignment}</Typography>\n                        <Button endIcon={<EastRounded/>} variant='contained'\n                            color={getResults(data[0].WeeklyAssignment) === 'Solved' ? 'success' : getResults(data[0].WeeklyAssignment) === null ? 'primary' : 'error'}\n                            onClick={()=>handleClick(data)}>View Assigment</Button>\n                    </Card>\n                )}\n            </Box>\n            :\n            <Box className='w-full h-full flex flex-col items-center justify-center'>\n                <DoNotDisturbRounded sx={{fontSize : '150px', marginBottom : '20px'}} color='action' />\n                <Typography variant='h4' color='grey'>No Past Assigments Found.</Typography>\n            </Box>)\n        }\n    </Box>\n\n    <Dialog open={ready} sx={{zIndex : '710'}} maxWidth='lg' onClose={()=>{setReady(false);setTimerStart(false)}}>\n        <img src='/images/V-Cube-Logo.png' width='12%' className='ml-[44%]' alt='' />\n        <IconButton sx={{position : 'absolute'}} className='top-1 right-1'  onClick={()=>{setReady(false);setTimerStart(false)}}>\n            <CloseRounded fontSize='large' />\n        </IconButton>\n        <DialogTitle className='text-center' >This assignment is an opportunity to enhance your skills and knowledge.<br/>Approach it with integrity and commitment!</DialogTitle>\n        <DialogContent>\n            <Typography variant='h5' className='w-full text-center' sx={{margin : '15px 0'}}>You have 1 hour to complete the assignment</Typography>\n            <DialogContentText>\n                • Solve the assignment in full-screen mode.<br/>\n                • if you exit full-screen mode, you will not be allowed to re-enter the assignment and will be disqualified.<br/>\n                • Do not reload the page. Reloading will reset your progress and you will have to start from the beginning.<br/>\n                • Complete the assignment without cheating for your personal growth.<br/>\n                • Allocate enough time to complete the assignment thoroughly.<br/>\n                • Ask any questions or seek clarification before starting.<br/>\n                • Check your answers for mistakes before submitting.<br/>\n                • Follow the provided submission guidelines and meet the deadline.<br/>\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            {startTimer ? <Button variant='outlined' color='info' >Continue in {timer < 10 ? `0${timer}` : timer}</Button> :\n            <Button variant='outlined' color='warning' sx={{width : '100%', marginBottom : '10px'}} \n                onClick={()=>handleClick(false)}>\n                I have gone through the instructions and am ready to solving the assignment.</Button>}\n        </DialogActions>\n    </Dialog>\n\n    <Dialog open={raiseRequest} sx={{zIndex : '710'}} onClose={()=>setRaiseRequest(false)}>\n        <img src='/images/V-Cube-Logo.png' width='16%' className='ml-[42%]' />\n        <DialogTitle variant='h5'>Request for Re-entry.</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                We noticed that you exited the assignment unexpectedly.<br/>\n                To ensure you can access it again, please ask your coordinator to approve your request for re-entry.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            {requestRaised ? \n                <Button variant='contained' color='success'>Request Raised</Button> :\n                <Button variant='contained' onClick={postRequests}>Raise a Request</Button>\n            }\n        </DialogActions>\n    </Dialog>\n    </>\n  )\n}\n\nexport default WeeklyAssignments;","import React, { useContext, useEffect, useState } from 'react';\nimport { Avatar, Box, Divider, FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\nimport { HourglassFullRounded, LeaderboardRounded, StarRounded } from '@mui/icons-material';\nimport { StudentsContext } from '../api/students';\n\nconst AssignmentLeaderBoard = ({ stdId, name, phone, course, batchName, nearestDate, handleShowSnackbar, setIsLoading, liveWeeklyDataDate }) => {\n    const { fetchAssignmentResults } = useContext(StudentsContext);\n    const [topStudents, setTopStudents] = useState([]);\n    const [studentData, setStudentData] = useState([]);\n    const [self, setSelf] = useState(false);\n    const [selfData, setSelfData] = useState(null);\n    const [selectedDate, setSelectedDate] = useState(nearestDate);\n    const [uniqueDates, setUniqueDates] = useState([]);\n\n    const fetchData = async () => {\n        setIsLoading(true);\n        const res = await fetchAssignmentResults();\n        if (res && res.message){\n            handleShowSnackbar('error','Failed to get data. Please try again later.');\n        }else{\n            const uniqueDates = Array.isArray(res) ? [...new Set(res.map(entry => entry.Date))] : null;\n            if(liveWeeklyDataDate && !hasTwoHoursPassed())uniqueDates.push(nearestDate);\n            if(uniqueDates)setUniqueDates(uniqueDates);\n            const data = Array.isArray(res) && res.filter((data)=>\n                data.Course === course &&\n                data.BatchName === batchName &&\n                data.Date === selectedDate)\n            const sortedData = sortStudents(data);\n            const sliced = sortedData.splice(0,3);\n            setTopStudents(sliced);\n            const isSelf = sliced ? sliced.some((data)=>data.StudentId === stdId && data.Name === `${name}~${phone}`) : false;\n            setSelf(isSelf);\n            setSelfData(!isSelf ? sortedData.find((data)=>data.StudentId === stdId && data.Name === `${name}~${phone}`) : null);\n            setStudentData(sortedData);\n        }\n        setIsLoading(false);\n    }\n\n    const sortStudents = (students) => {\n        return students.sort((a, b) => {\n            if (b.Score !== a.Score) {\n                return b.Score - a.Score;\n            } else {\n                return a.Time - b.Time;\n            }\n        });\n    }\n\n    useEffect(()=>{\n        fetchData();\n    },[selectedDate])\n\n    const hasTwoHoursPassed = () => {\n        if (liveWeeklyDataDate){\n            const targetDate = new Date(liveWeeklyDataDate);\n            const currentDate = new Date();\n            const difference = currentDate - targetDate;\n            const oneHourInMillis = 2 * 60 * 60 * 1000;\n            return difference >= oneHourInMillis;\n        }else{\n            return '';\n        }\n    }\n\n  return (\n    <>\n    <FormControl sx={{position : 'absolute'}} className='top-48 right-10 w-1/5'>\n        <InputLabel className='bg-white w-1/3 text-center rounded-md'>Select Date</InputLabel>\n        <Select\n            value={selectedDate}\n            onChange={(e)=>setSelectedDate(e.target.value)}>\n            {uniqueDates.map((date,index)=>(\n                <MenuItem key={index} value={date}>{date}</MenuItem>\n            ))}\n        </Select>\n    </FormControl>\n    {(Array.isArray(studentData) && Array.isArray(topStudents) && studentData.length > 0 && topStudents.length > 0) ? \n    <Box className='w-full h-full border-2 rounded-lg flex flex-col items-center justify-start'>\n        <Box className='flex items-end justify-evenly w-[40%] h-[50%]'>\n            {Array.isArray(topStudents) && topStudents.length > 0 ? [16,32,24].map((no,index)=>\n                <Box key={index} className={`relative w-16 h-${no} ${index === 0 ? 'bg-[#d5d5d5]' : index === 1 ? 'bg-[#ffdc69]' : 'bg-[#ffd1b8]'} rounded-md pt-3`}>\n                    <Box className={`absolute w-full h-28 -top-28 flex flex-col items-center justify-evenly`}>\n                        {index === 1 && <img src='/images/crown.png' width='50px' alt='' className='absolute -top-9' />}\n                        {<img src={topStudents[index === 0 ? 2 : index - 1].Image} alt='' width='50px' className='h-[50px] rounded-full object-contain border-[1px] border-slate-300' />}\n                        <Typography variant='span' sx={{fontSize : '12px'}} className='w-56 text-center'>{topStudents[index === 0 ? 2 : index - 1].Name.split('~')[0]}</Typography>\n                        <Typography className='flex items-center'><StarRounded sx={{color : '#f6af39'}} /> {topStudents[index === 0 ? 2 : index - 1].Score}</Typography>\n                    </Box>\n                    <Typography color='white' variant='h5' className='w-full text-center'>{index === 0 ? 3 : index}</Typography>\n                </Box>\n            ) : <></>}\n        </Box>\n        <Box className='w-1/3 h-[55%] border-2 mt-2 mb-1 rounded-md overflow-hidden'>\n            <Box className='w-full h-[8%] flex items-center justify-between'>\n                {[15,70,15].map((no,index)=>(\n                    <Typography key={index} className={`w-[${no}%] h-full flex items-center' ${index === 1 ? 'justify-start pl-14' : 'justify-center'}`} sx={{fontWeight : 'bold'}}>\n                        {index === 0 ? 'Rank' : index === 1 ? 'Name' : 'Score'}\n                    </Typography>\n                ))}\n            </Box>\n            <Divider/>\n            <Box className='w-full overflow-auto' sx={{height : self ? '90%' : '78%', scrollbarWidth : 'none'}}>\n                {Array.isArray(studentData) && studentData.length > 0 ? studentData.map((data,index)=>(\n                    studentData.findIndex((data)=>data.StudentId === stdId && data.Name === `${name}~${phone}`) !== index &&\n                    <>\n                    <Box className={`w-full h-[${self ? '15%' : '17%'}] flex items-center justify-between`}>\n                    <Typography className='w-[15%] h-full flex items-center justify-center'>{index + 4}</Typography>\n                    <Typography className='w-[70%] h-full text-start flex items-center pl-2'>\n                        <img src={data.Image} alt='' width='30px' className='h-[30px] mr-5 rounded-full object-contain border-[1px] border-slate-300' />\n                        <Typography variant='span'>{data.Name.split('~')[0]}</Typography>\n                    </Typography>\n                    <Typography className='w-[15%] h-full flex items-center justify-center'>{data.Score}</Typography>\n                    </Box>\n                    <Divider/>\n                    </>\n                )) : <></>}\n            </Box>\n            {!self && selfData !== null && selfData ? \n            <Box className='w-full h-[14%]'>\n                <Box className='w-full h-full flex items-center justify-between bg-[#1976d2] text-white'>\n                    <Typography className='w-[15%] text-center'>{Array.isArray(studentData) && studentData.length > 0 ? studentData.findIndex((data)=>data.StudentId === stdId && data.Name === `${name}~${phone}`) + 4 : undefined}</Typography>\n                    <Typography className='w-[70%] text-start flex items-center pl-2'>\n                        <img src={selfData.Image} alt='' width='30px' className='h-[30px] mr-5 bg-white rounded-full object-contain border-[1px] border-slate-300' />\n                        <Typography variant='span'>{selfData.Name && selfData.Name.split('~')[0]}</Typography>\n                    </Typography>\n                    <Typography className='w-[15%] text-center'>{selfData.Score}</Typography>\n                </Box>\n            </Box> : <></>}\n        </Box>\n    </Box> \n    : \n    <Box className='w-full h-full border-2 rounded-lg flex flex-col items-center justify-center'>\n        {liveWeeklyDataDate && liveWeeklyDataDate.split(' ')[0] === selectedDate && !hasTwoHoursPassed() ? \n        <>\n        <img src='/images/hourGlass.gif' alt='' width='25%' />\n        <Typography color='grey' variant='h6' className='text-center'>\n            Stay tuned for your Leaderboard results,<br/>which will be available shortly after you complete your assignment! \n        </Typography>\n        </>\n        :\n        <>\n        <LeaderboardRounded sx={{fontSize : '150px', marginBottom : '30px'}} color='action' />\n        <Typography color='grey' variant='h6' className='text-center'>\n            No results found for the selected date.<br/>Try a different date or check back later!\n        </Typography>\n        </>\n        }\n    </Box>}\n    </>\n  )\n}\n\nexport default AssignmentLeaderBoard;","import React, { startTransition, useContext, useEffect, useRef, useState } from 'react';\nimport { Avatar, Box, Button, Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, IconButton, InputLabel, MenuItem, Select, Tab, Tabs, Tooltip, Typography } from '@mui/material';\nimport { ArrowForwardRounded, CloseRounded, DescriptionRounded, LeaderboardRounded } from '@mui/icons-material';\nimport { AssessmentContext } from '../api/Assessment';\nimport { StudentsContext } from '../api/students';\nimport WeeklyAssignments from './WeeklyAssignments';\nimport { months , DateTime } from '../date-time';\nimport AssignmentLeaderBoard from './AssignmentLeaderBoard';\n\nexport const getMonthsDifference = (startDate) => {\n    const endDate = new Date();\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    let yearsDifference = end.getFullYear() - start.getFullYear();\n    let monthsDifference = end.getMonth() - start.getMonth();\n    let totalMonths = yearsDifference * 12 + monthsDifference;\n    if (end.getDate() < start.getDate()) {\n        totalMonths--;\n    }\n    return totalMonths + 1;\n}\n\nconst AssessmentsData = ({ isOpen, setIsOpen, image, name, phone, course, batchName, handleShowSnackbar, setIsLoading, setSolveAssesments, setSolveAssessmentData, stdId, JoiningDate, isUser, configs }) => {\n    const { fetchAssessmentQuestions } = useContext(AssessmentContext);\n    const { getStudentAttendanceById } = useContext(StudentsContext);\n    const [assessmentData, setAssessmentData]= useState(null);\n    const [attData, setAttData] = useState(null);\n    const [attCount, setAttCount] = useState(0);\n    const [selectedMonth, setSelectedMonth] = useState(null);\n    const [configAlert, setConfigAlert] = useState(false);\n    const [tabValue, setTabValue] = useState(0);\n    const [weeklyData, setWeeklyData] = useState([]);\n    const [leaderBoard, setLeaderBoard] = useState(false);\n    const [nearestDate, setNearestDate] = useState(null);\n\n    const fetchData = async () => {\n        setIsLoading(true);\n        const res = await fetchAssessmentQuestions(course);\n        setIsLoading(false);\n        if (res && res.message){\n            handleShowSnackbar('error',res.message);\n        }else if(res){\n            if(Array.isArray(res) && res.length === 0){\n                handleShowSnackbar('error','No data found.');\n                return;\n            }\n            const weekly_data = res && res.filter(data=>data.Course === course && data.BatchName === batchName && data.WeeklyAssignment !== 'No');\n            setNearestDate(getNearestDate(weekly_data));\n            const data = res && res.filter(data=>data.Course === course && JSON.parse(data.Question).Month === selectedMonth && data.WeeklyAssignment === 'No');\n            setWeeklyData(weekly_data);\n            setAssessmentData(data);\n            fetchAttData(data);\n        }\n    }\n\n    const fetchAttData = async (result) => {\n        setIsLoading(true);\n        const res = await getStudentAttendanceById(stdId);\n        setIsLoading(false);\n        if (res && res.message){\n            res.response.status !== 404 && handleShowSnackbar('error',res.message);\n        }else if(res){\n            const getData = Array.isArray(res) && res.filter(data=>data.Attendance_Type.split('~')[0] === 'Assignment');\n            const filteredData = Array.isArray(getData) && getData.filter((att) => {\n                return Array.isArray(result) && result.some((data) => {\n                    return att.Attendance_Type.split('~')[1] === `${data.id}`;\n                });\n            });\n            setAttData(filteredData);\n            setAttCount(Array.isArray(filteredData) ? filteredData.length : 0);\n        }\n    }\n\n    const getNearestDate = (data) => {\n        const currentDate = new Date();\n        let nearestDate = null;\n        let minDiff = Infinity;\n    \n        data.forEach(item => {\n            const itemDate = new Date(item.WeeklyAssignment);\n            const diff = Math.abs(itemDate - currentDate);\n    \n            if (diff < minDiff) {\n                minDiff = diff;\n                nearestDate = itemDate;\n            }\n        });\n    \n        if (nearestDate) {\n            const day = String(nearestDate.getDate()).padStart(2, '0');\n            const month = months[nearestDate.getMonth()];\n            const year = nearestDate.getFullYear();\n            return `${day}-${month}-${year}`;\n        }\n\n        return null;\n    }\n\n    useEffect(()=>{\n        startTransition(()=>{\n            fetchData();\n        })\n    },[isOpen, selectedMonth])\n\n    const checkSolved = (id) => {\n        return  Array.isArray(attData) && attData.some(data=>data.Attendance_Type.split('~')[1] === `${id}`);\n    }\n\n    const getPercentage = () => {\n        const cnt = Array.isArray(assessmentData) && assessmentData.length > 0 ? (attCount / assessmentData.length) * 100 : 0;\n        return cnt > 0 ? cnt : 5;\n    }\n\n    const getColor = () => {\n        const cnt = getPercentage();       \n        if (cnt < 20) {\n            return '#fee2e2';\n        } else if (cnt < 35) {\n            return '#fef2f2';\n        } else if (cnt < 50) {\n            return '#fff7ed';\n        } else if (cnt < 70) {\n            return '#ffedd5';\n        } else if (cnt < 85) {\n            return '#f0fdf4';\n        } else {\n            return '#dcfce7';\n        }\n    };\n\n    const months_ = []\n    for(let i = 1; i <= getMonthsDifference(JoiningDate); i++){\n        months_.push(i);\n    }\n\n    const handleSolveAssignment = (data) => {\n        if(JSON.parse(data.Question).SQL === 'Yes'){\n            if(configs === '' || !configs){\n                setConfigAlert(true);\n                return;\n            }\n        }\n        setSolveAssessmentData(data);\n        setSolveAssesments(true);\n        localStorage.removeItem('Weekly_Assignment');\n        sessionStorage.removeItem('Weekly Assignment');\n    }\n\n  return (\n    <>\n    <Dialog open={isOpen} sx={{zIndex : '700'}} fullScreen>\n        <Typography variant='h5' className='absolute top-5 left-3'>\n            Your Assignments <DescriptionRounded sx={{marginLeft : '10px'}} />\n        </Typography>\n        <img src='/images/V-Cube-Logo.png' alt='' width='8%' className='ml-[46%]' />\n        <IconButton sx={{position : 'absolute'}} className='top-3 right-3' onClick={()=>setIsOpen(false)}><CloseRounded sx={{fontSize : '35px'}} /></IconButton>\n        <DialogTitle variant='h5' className='flex items-center justify-between'>\n            <Box className='w-1/3 relative overflow-hidden rounded-md border-[1px] border-slate-300' sx={{visibility : tabValue === 0 ? 'visible' : 'hidden'}}>\n                <FormControl className='w-full outline-none' sx={{zIndex : '100'}}>\n                    <InputLabel sx={{visibility : tabValue === 0 && !selectedMonth ? 'visible' : 'hidden'}}>Select Month</InputLabel>\n                    <Select\n                        value={selectedMonth}\n                        onChange={(e)=>setSelectedMonth(e.target.value)}>\n                        {months_.map((no)=><MenuItem value={`Month ${no}`}>{`Month ${no}`}</MenuItem>)}\n                    </Select>\n                </FormControl>\n                <Box className={`absolute left-0 top-0 h-full w-[${getPercentage()}%] flex items-center justify-end`}  sx={{zIndex : '90', background : getColor()}}></Box>\n                <Typography color={getPercentage() < 35 ? 'error' : getPercentage() < 70 ? 'orange' : 'green'} className='absolute right-16 top-3 text-center' sx={{fontSize : '12px', zIndex : '100'}}>{attCount}/{Array.isArray(assessmentData) ? assessmentData.length : 0}<br/>Completed</Typography>\n            </Box>\n            <Button sx={{display : 'flex', flexDirection : 'column', marginRight : '100px',visibility : tabValue === 1 ? 'visible' : 'hidden'}} variant={leaderBoard ? 'contained' : 'outlined'} onClick={()=>setLeaderBoard(!leaderBoard)}>\n                <LeaderboardRounded/><Typography>LeaderBoard</Typography>\n            </Button>\n            <Box>\n                <Tabs value={tabValue}>\n                    <Tab label='Daily Assigments' onClick={()=>setTabValue(0)} />\n                    <Tab label='Weekly Assigments' onClick={()=>setTabValue(1)} />\n                </Tabs>\n            </Box>\n        </DialogTitle>\n        {tabValue === 0 ? <DialogContent className='grid grid-cols-2 place-content-start gap-5'>\n            {Array.isArray(assessmentData) && assessmentData.length > 0 && assessmentData.map((data,index)=>\n            <Tooltip title={isUser !== 'Student' && data.id} arrow>\n            <Card className='w-full h-20 border-[1px] border-gray-200 p-5 flex items-center justify-between' key={index}>\n                <Typography variant='h5' className='flex items-center justify-start'>{JSON.parse(data.Question).Title} \n                    {JSON.parse(data.Question).SQL === 'Yes' && <img src='/images/Logo-MySql.png' alt='' width='7%' className='ml-5' />}\n                </Typography>\n                <Box className='w-64 flex items-center justify-between'>\n                    <Typography className={`${data.Level === 'Easy' ? 'bg-green-100' : data.Level === 'Medium' ? 'bg-orange-100' : 'bg-red-100'} ${data.Level === 'Easy' ? 'text-green-600' : data.Level === 'Medium' ? 'text-orange-600' : 'text-red-600'} w-[4.50rem] text-center rounded-md`}>{data.Level}</Typography>\n                    <Button endIcon={!checkSolved(data.id) && <ArrowForwardRounded/>} variant='contained' onClick={()=>handleSolveAssignment(data)}\n                    sx={{background : checkSolved(data.id) ? '#dcfce7' : '', color : checkSolved(data.id) ? '#16a34a' : 'white', ':hover' : {background : checkSolved(data.id) && '#dcfce7'}}}>{checkSolved(data.id) ? 'SOLVED' : 'SOLVE'}</Button>\n                </Box>\n            </Card>\n            </Tooltip>)}\n        </DialogContent> :\n        <DialogContent>\n            {leaderBoard ? \n                <AssignmentLeaderBoard stdId={stdId} name={name} phone={phone} nearestDate={nearestDate} course={course} batchName={batchName} handleShowSnackbar={handleShowSnackbar} setIsLoading={setIsLoading}\n                                    liveWeeklyDataDate={Array.isArray(weeklyData) ? weeklyData.filter((data)=>data.WeeklyAssignment !== 'No' && data.WeeklyAssignment.split(' ')[0] === DateTime().split(' ')[0]).map(data => data.WeeklyAssignment)[0] : false}/>\n                 : \n                <WeeklyAssignments stdId={stdId} name={name} phone={phone} course={course} batchName={batchName} handleShowSnackbar={handleShowSnackbar} setIsLoading={setIsLoading} \n                                setSolveAssesments={setSolveAssesments} setSolveAssessmentData={setSolveAssessmentData} isUser={isUser} setTab_Value={setTabValue} image={image}\n                                liveWeeklyData={Array.isArray(weeklyData) && weeklyData.filter((data)=>data.WeeklyAssignment !== 'No' && data.WeeklyAssignment.split(' ')[0] === DateTime().split(' ')[0])} \n                                pastWeeklyData={Array.isArray(weeklyData) && weeklyData.filter((data)=>data.WeeklyAssignment.split(' ')[0] !== DateTime().split(' ')[0] && data.WeeklyAssignment !== 'No').reverse()} />}\n        </DialogContent>}\n    </Dialog>\n\n    <Dialog open={configAlert} sx={{zIndex : '710'}}>\n        <img src='/images/V-Cube-Logo.png' width='14%' className='ml-[43%]' />\n        <DialogTitle variant='h5'>Database Configurations Not Found.</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n            You need to configure your database settings to complete the assignment. <br/>\n            • Go to your Dashboard. <br/>\n            • Please open your code editor from the menu. <br/>\n            • Select SQL and update the configurations.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button variant='contained' onClick={()=>setConfigAlert(false)} >OK</Button>\n        </DialogActions>\n    </Dialog>\n    </>\n  )\n}\n\nexport default AssessmentsData;"],"names":["_ref","stdId","name","image","phone","course","batchName","handleShowSnackbar","setIsLoading","setSolveAssesments","setSolveAssessmentData","liveWeeklyData","pastWeeklyData","isUser","setTab_Value","getStudentAttendanceById","fetchAssignmentResults","fetchAssignmentRequests","postAssignmentRequests","patchAssignmentResults","postAssignmentResults","useContext","StudentsContext","tabValue","setTabValue","useState","ready","setReady","startTimer","setTimerStart","timer","setTimer","isStudent_Att","setIsStudent_Att","resultsData","useRef","timeLeft","setTimeLeft","hours","minutes","seconds","studentStatus","setStudentStatus","requestRaised","setRequestRaised","raiseRequest","setRaiseRequest","fetchResultsData","async","res","message","response","status","Status","Array","isArray","length","current","filter","data","StudentId","Name","Course","BatchName","getData","find","Date","DateTime","split","fetchRequests","useEffect","isFound","Attendance_Type","fetchData","groupedByDate","reduce","acc","date","WeeklyAssignment","push","nestedArray","Object","values","timerId","setTimeout","prev","clearTimeout","hasOneHourPassed","targetDate","targetTime","getTime","updateTimer","now","distance","clearInterval","Math","floor","setInterval","handleClick","arguments","undefined","postProgress","sessionStorage","setItem","Image","getResults","_jsxs","_Fragment","children","Box","className","Tabs","value","_jsx","Tab","label","onClick","sx","fontWeight","Typography","variant","fontFamily","FiberManualRecordRounded","fontSize","color","margin","Button","startIcon","CheckRounded","width","endIcon","EastRounded","RotateLeftRounded","CloseRounded","Score","RunningWithErrorsRounded","marginBottom","PendingActionsRounded","toString","padStart","marginTop","DoNotDisturbRounded","scrollbarWidth","map","index","Card","AssignmentRounded","mui_colors","random","Dialog","open","zIndex","maxWidth","onClose","src","alt","IconButton","position","DialogTitle","DialogContent","DialogContentText","DialogActions","nearestDate","liveWeeklyDataDate","topStudents","setTopStudents","studentData","setStudentData","self","setSelf","selfData","setSelfData","selectedDate","setSelectedDate","uniqueDates","setUniqueDates","sortStudents","students","sort","a","b","Time","Set","entry","hasTwoHoursPassed","sortedData","sliced","splice","isSelf","some","FormControl","InputLabel","Select","onChange","e","target","MenuItem","no","StarRounded","Divider","height","findIndex","LeaderboardRounded","getMonthsDifference","startDate","endDate","start","end","totalMonths","getFullYear","getMonth","getDate","isOpen","setIsOpen","JoiningDate","configs","fetchAssessmentQuestions","AssessmentContext","assessmentData","setAssessmentData","attData","setAttData","attCount","setAttCount","selectedMonth","setSelectedMonth","configAlert","setConfigAlert","weeklyData","setWeeklyData","leaderBoard","setLeaderBoard","setNearestDate","fetchAttData","filteredData","att","result","id","getNearestDate","currentDate","minDiff","Infinity","forEach","item","itemDate","diff","abs","String","months","startTransition","weekly_data","JSON","parse","Question","Month","checkSolved","getPercentage","cnt","months_","i","fullScreen","DescriptionRounded","marginLeft","visibility","background","getColor","display","flexDirection","marginRight","Tooltip","title","arrow","Title","SQL","Level","ArrowForwardRounded","localStorage","removeItem","handleSolveAssignment","AssignmentLeaderBoard","WeeklyAssignments","reverse"],"sourceRoot":""}